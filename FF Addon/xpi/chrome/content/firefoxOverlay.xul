<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="chrome://acunetixwebscanner/skin/overlay.css" type="text/css"?>

<!--
/*
Autor: 		Attila Gerendi
Purpose:	The main xul
*/
-->

<!DOCTYPE overlay SYSTEM "chrome://acunetixwebscanner/locale/acunetixwebscanner.dtd">
<overlay id="acunetixwebscanner-overlay" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUF0dGlsYSBHZXJlbmRpDQpQdXJwb3NlOglWYXJpb3VzIHByb3RvdHlwZSBmdW5jdGlvbnMNCiovDQoNCmZ1bmN0aW9uIHR5cGVPZih2YWx1ZSkNCnsNCiAgICB2YXIgcyA9IHR5cGVvZiB2YWx1ZTsNCiAgICBpZiAocyA9PT0gJ29iamVjdCcpDQoJew0KICAgICAgICBpZiAodmFsdWUpDQoJCXsNCiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUubGVuZ3RoID09PSAnbnVtYmVyJyAmJiAhKHZhbHVlLnByb3BlcnR5SXNFbnVtZXJhYmxlKCdsZW5ndGgnKSkgJiYgdHlwZW9mIHZhbHVlLnNwbGljZSA9PT0gJ2Z1bmN0aW9uJykNCiAgICAgICAgICAgICAgICBzID0gJ2FycmF5JzsNCiAgICAgICAgfQ0KCQllbHNlDQogICAgICAgICAgICBzID0gJ251bGwnOw0KICAgIH0NCiAgICByZXR1cm4gczsNCn0NCg0KU3RyaW5nLnByb3RvdHlwZS5lbnRpdHlpZnkgPSBmdW5jdGlvbiAoKQ0Kew0KICAgIHJldHVybiB0aGlzLnJlcGxhY2UoLyYvZywgIiZhbXA7IikucmVwbGFjZSgvPC9nLCImbHQ7IikucmVwbGFjZSgvPi9nLCAiJmd0OyIpLnJlcGxhY2UoL1wiL2csICImcXVvdDsiKS5yZXBsYWNlKC9cJy9nLCAiJiMzOTsiKTsNCn07DQoNClN0cmluZy5wcm90b3R5cGUuc3VwcGxhbnQgPSBmdW5jdGlvbiAobykNCnsNCiAgICByZXR1cm4gdGhpcy5yZXBsYWNlKC97KFtee31dKil9L2csDQogICAgICAgIGZ1bmN0aW9uIChhLCBiKQ0KCQl7DQogICAgICAgICAgICB2YXIgciA9IG9bYl07DQogICAgICAgICAgICByZXR1cm4gdHlwZW9mIHIgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiByID09PSAnbnVtYmVyJyA/IHIgOiBhOw0KICAgICAgICB9DQogICAgKTsNCn07DQoNClN0cmluZy5wcm90b3R5cGUudHJpbSA9IGZ1bmN0aW9uICgpIHsNCiAgICByZXR1cm4gdGhpcy5yZXBsYWNlKC9eXHMqKFxTKihccytcUyspKilccyokLywgIiQxIik7DQp9Ow0KDQoNClN0cmluZy5wcm90b3R5cGUucmVnZXhFc2NhcGUgPSBmdW5jdGlvbigpIHsNCiAgICB2YXIgc3BlY2lhbHMgPSBbDQogICAgICAnLycsICcuJywgJyonLCAnKycsICc/JywgJ3wnLA0KICAgICAgJygnLCAnKScsICdbJywgJ10nLCAneycsICd9JywgJ1xcJw0KICAgIF07DQogICAgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKFxcJyArIHNwZWNpYWxzLmpvaW4oJ3xcXCcpICsgJyknLCAnZycgKTsNCglyZXR1cm4gdGhpcy5yZXBsYWNlKHJlZ2V4cCwgJ1xcJDEnKTsNCn0=')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUF0dGlsYSBHZXJlbmRpDQpQdXJwb3NlOglDaXBoZXJzDQoqLw0KDQpmdW5jdGlvbiBlbmNvZGVyQ2xhc3MoKQ0Kew0KCXRoaXMuZW5jb2RlNjQJPSBlbmNvZGU2NDsNCgl0aGlzLmRlY29kZTY0CT0gZGVjb2RlNjQ7DQoJdGhpcy5lbmNvZGUJCT0gZW5jb2RlOw0KCQ0KCWZ1bmN0aW9uIGVuY29kZShzdHJJbnB1dCkNCgl7DQoJCXJldHVybihzdHJJbnB1dCkNCgl9DQoJDQoJZnVuY3Rpb24gZW5jb2RlNjQoc3RySW5wdXQpDQoJew0KCQl2YXIgdG1wU3RyID0gIiI7DQoJCS8vd2UgbXVzdCBlbnN1cmUgdGhlIGJ0b2EgZG9lcyBub3QgZ2V0IG11bHRpYnl0ZSBjaGFyYWN0ZXJzIHNpbmNlIGl0IHdpbGwgY3Jhc2gNCgkJZm9yKHZhciBpID0gMDsgaSA8IHN0cklucHV0Lmxlbmd0aDsgaSsrKQ0KCQkJdG1wU3RyICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoc3RySW5wdXQuY2hhckNvZGVBdChpKSAmIDB4ZmYpOw0KCQlyZXR1cm4oYnRvYSh0bXBTdHIpKQ0KCX0NCgkNCglmdW5jdGlvbiBkZWNvZGU2NChzdHJJbnB1dCkNCgl7DQoJCXJldHVybihhdG9iKHN0cklucHV0KSk7DQoJfQ0KfQ==')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjogICAgIEF0dGlsYSBHZXJlbmRpDQpQdXJwb3NlOiAgICBUaGUgRWxlbWV0IGhpZ2hsaWdodGVyIGNsYXNzDQoqLw0KDQpmdW5jdGlvbiBjbGFzc0hUTUxFbGVtZW50SGlnaGxpZ2h0ZXIoKQ0Kew0KCXRoaXMuYXJyYXlIaWdoTGlnaHRlZEl0ZW1zID0gbmV3IEFycmF5KCk7DQoJDQoJdGhpcy5oaWdobGlnaHRJdGVtID0gaGlnaGxpZ2h0SXRlbTsNCgl0aGlzLnNlYXJjaEl0ZW1JbmRleCA9IHNlYXJjaEl0ZW1JbmRleDsNCgkNCgl0aGlzLmhpZ2hsaWdodEl0ZW1JbnRlcm5hbCA9IGhpZ2hsaWdodEl0ZW1JbnRlcm5hbDsNCgkNCglmdW5jdGlvbiBzZWFyY2hJdGVtSW5kZXgoc3RySWQpDQoJew0KCQlmb3IodmFyIGkgPTAgOyBpIDwgdGhpcy5hcnJheUhpZ2hMaWdodGVkSXRlbXMubGVuZ3RoIDsgaSsrKQ0KCQkJaWYodGhpcy5hcnJheUhpZ2hMaWdodGVkSXRlbXNbaV1bMF09PXN0cklkKQ0KCQkJCXJldHVybihpKTsNCgkJcmV0dXJuKC0xKTsNCgl9DQoJDQoJZnVuY3Rpb24gaGlnaGxpZ2h0SXRlbUludGVybmFsKG9iakRvYywgc3RySWQsIGJvb2xNb2RlKQ0KCXsNCgkJdmFyIGl0ZW0gPSBvYmpEb2MuZ2V0RWxlbWVudEJ5SWQoc3RySWQpOw0KCQlpZiAoIWl0ZW0pDQoJCQlyZXR1cm4oZmFsc2UpOw0KCQkNCgkJdmFyIGN1cnJlbnRTdHlsZSA9ICIiOw0KCQlpZihpdGVtLmhhc0F0dHJpYnV0ZSgic3R5bGUiKSkNCgkJCWN1cnJlbnRTdHlsZSA9IGl0ZW0uZ2V0QXR0cmlidXRlKCJzdHlsZSIpOw0KCQkJDQoJCXZhciBvcmlnaW5hbFN0eWxlID0gIiI7DQoJCXZhciBpdGVtSW5kZXggPSB0aGlzLnNlYXJjaEl0ZW1JbmRleChzdHJJZCk7DQoJCWlmIChpdGVtSW5kZXggPCAwKQ0KCQl7DQoJCQl2YXIgaXRtID0gbmV3IEFycmF5KDIpOw0KCQkJaXRtWzBdID0gc3RySWQ7DQoJCQlpdG1bMV0gPSBjdXJyZW50U3R5bGU7DQoJCQlpZihib29sTW9kZSkNCgkJCQl0aGlzLmFycmF5SGlnaExpZ2h0ZWRJdGVtcy5wdXNoKGl0bSk7DQoJCX0NCgkJZWxzZQ0KCQl7DQoJCQlvcmlnaW5hbFN0eWxlID0gdGhpcy5hcnJheUhpZ2hMaWdodGVkSXRlbXNbaXRlbUluZGV4XVsxXTsNCgkJfQ0KCQlpZihib29sTW9kZSkNCgkJCWl0ZW0uc2V0QXR0cmlidXRlKCJzdHlsZSIsImJvcmRlcjogMnB4IHNvbGlkICNmZjAwMDA7Iik7DQoJCWVsc2UNCgkJCWl0ZW0uc2V0QXR0cmlidXRlKCJzdHlsZSIsb3JpZ2luYWxTdHlsZSk7DQoJCXJldHVybih0cnVlKTsNCgl9DQoJDQoJZnVuY3Rpb24gaGlnaGxpZ2h0SXRlbShzdHJJZCwgYm9vbE1vZGUpIA0KCXsNCgkJdmFyIGJvb2xSZXR2YWwgPSBmYWxzZTsJCQ0KCQl2YXIgb2JqUGFnZURvY3VtZW50ID0gd2luZG93LnRvcC5nZXRCcm93c2VyKCkuYnJvd3NlcnNbd2luZG93LnRvcC5nZXRCcm93c2VyKCkubVRhYkJveC5zZWxlY3RlZEluZGV4XS5jb250ZW50V2luZG93LmRvY3VtZW50Ow0KCQkNCgkJYm9vbFJldHZhbCA9IHRoaXMuaGlnaGxpZ2h0SXRlbUludGVybmFsKG9ialBhZ2VEb2N1bWVudCxzdHJJZCxib29sTW9kZSk7DQoJCWlmIChib29sUmV0dmFsKQ0KCQkJcmV0dXJuOw0KCQkNCgkJdmFyIGZyYW1lcyA9IG9ialBhZ2VEb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiZnJhbWUiKTsNCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBmcmFtZXMubGVuZ3RoOyBpKyspDQoJCXsNCgkJCWJvb2xSZXR2YWwgPSB0aGlzLmhpZ2hsaWdodEl0ZW1JbnRlcm5hbChmcmFtZXNbaV0uY29udGVudERvY3VtZW50LHN0cklkLGJvb2xNb2RlKTsNCgkJCWlmIChib29sUmV0dmFsKQ0KCQkJCXJldHVybjsNCgkJfQ0KCQkNCgkJdmFyIGZyYW1lcyA9IG9ialBhZ2VEb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaXJhbWUiKTsNCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBmcmFtZXMubGVuZ3RoOyBpKyspDQoJCXsNCgkJCWJvb2xSZXR2YWwgPSB0aGlzLmhpZ2hsaWdodEl0ZW1JbnRlcm5hbChmcmFtZXNbaV0uY29udGVudERvY3VtZW50LHN0cklkLGJvb2xNb2RlKTsNCgkJCWlmIChib29sUmV0dmFsKQ0KCQkJCXJldHVybjsNCgkJfQ0KCQkNCgl9DQp9')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUF0dGlsYSBHZXJlbmRpDQpQdXJwb3NlOglUaGUgQ2xhc3NGaWxlSGFuZGxlcg0KKi8NCg0KLyoNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBzcGVjaWFsX3BhdGggPT09PT09PT09PT09PT09PT09PT09PT09PQ0KUHJvZkQgCQkgPSBwcm9maWxlIGRpcmVjdG9yeQ0KRGVmUHJvZlJ0IAkgPSB1c2VyIChlLmcuLCAvcm9vdC8ubW96aWxsYSkNClVDaHJtCQkgPSAlcHJvZmlsZSUvY2hyb21lDQpEZWZSdCAJCSA9ICVpbnN0YWxsYXRpb24lL2RlZmF1bHRzDQpQcmZEZWYgCQkgPSAlaW5zdGFsbGF0aW9uJS9kZWZhdWx0cy9wcmVmDQpQcm9mRGVmTm9Mb2MgPSAlaW5zdGFsbGF0aW9uJS9kZWZhdWx0cy9wcm9maWxlDQpBUGx1Z25zIAkgPSAlaW5zdGFsbGF0aW9uJS9wbHVnaW5zDQpBQ2hyb20gCQkgPSAlaW5zdGFsbGF0aW9uJS9jaHJvbWUNCkNvbXNEIAkJID0gJWluc3RhbGxhdGlvbiUvY29tcG9uZW50cw0KQ3VyUHJvY0QgCSA9IGluc3RhbGxhdGlvbiAodXN1YWxseSkNCkhvbWUgCQkgPSBPUyByb290IChlLmcuLCAvcm9vdCkNClRtcEQgCQkgPSBPUyB0bXAgKGUuZy4sIC90bXApDQpyZXNvdXJjZTphcHAgPSBhcHBsaWNhdGlvbiBkaXJlY3RvcnkgaW4gYSBYVUxSdW5uZXIgYXBwDQoqLw0KDQpmdW5jdGlvbiBDbGFzc0ZpbGVIYW5kbGVyKCkNCnsNCgl0aGlzLnN0clBhdGhTZXBhcmF0b3IJPSAiXFwiOw0KCQ0KCXRoaXMuZGV0ZWN0T3NGaWxlU2VwYXJhdG9yQnlIYW5kbGluZ0ZpbGVzIAk9IGRldGVjdE9zRmlsZVNlcGFyYXRvckJ5SGFuZGxpbmdGaWxlczsNCgl0aGlzLmNyZWF0ZURpcmVjdG9yeQkJCQkJCT0gY3JlYXRlRGlyZWN0b3J5Ow0KCXRoaXMuc2F2ZVRleHRGaWxlCQkJCQkJCT0gc2F2ZVRleHRGaWxlOw0KCXRoaXMubG9hZFRleHRGcm9tTG9jYWxVUkkJCQkJCT0gbG9hZFRleHRGcm9tTG9jYWxVUkk7DQoJdGhpcy5sb2FkVGV4dEZpbGUJCQkJCQkJPSBsb2FkVGV4dEZpbGU7DQoJdGhpcy5nZXRGaWxlCQkJCQkJCQk9IGdldEZpbGU7DQoJDQoJdGhpcy5kZXRlY3RPc0ZpbGVTZXBhcmF0b3JCeUhhbmRsaW5nRmlsZXMoKTsNCglpZiAodGhpcy5zdHJQYXRoU2VwYXJhdG9yID09ICIiKSB0aGlzLnN0clBhdGhTZXBhcmF0b3IgPSAiXFwiOw0KCQ0KCWZ1bmN0aW9uIGdldEZpbGUoc3RyTmFtZSwgc3RyU3BlY2lhbFBhdGgpDQoJew0KCQl0cnkNCgkJew0KCQkJaWYoKHN0clNwZWNpYWxQYXRoID09IG51bGwpIHx8IChzdHJTcGVjaWFsUGF0aCA9PSAiIikpDQoJCQl7DQoJCQkJZmlsZSA9IENvbXBvbmVudHMuY2xhc3Nlc1siQG1vemlsbGEub3JnL2ZpbGUvbG9jYWw7MSJdDQoJCQkJCS5jcmVhdGVJbnN0YW5jZShDb21wb25lbnRzLmludGVyZmFjZXMubnNJTG9jYWxGaWxlKTsNCgkJCQlmaWxlLmluaXRXaXRoUGF0aChzdHJOYW1lKTsNCgkJCX0NCgkJCWVsc2UNCgkJCXsNCgkJCQl2YXIgZmlsZSA9IENvbXBvbmVudHMuY2xhc3Nlc1snQG1vemlsbGEub3JnL2ZpbGUvZGlyZWN0b3J5X3NlcnZpY2U7MSddDQoJCQkJCQkuZ2V0U2VydmljZShDb21wb25lbnRzLmludGVyZmFjZXMubnNJUHJvcGVydGllcykNCgkJCQkJCS5nZXQoc3RyU3BlY2lhbFBhdGgsIENvbXBvbmVudHMuaW50ZXJmYWNlcy5uc0lGaWxlKTsNCg0KCQkJCXZhciBzdHJTZXBhcmF0b3IgPSAiXFwiOwkJDQoJCQkJdmFyIGFycmF5UGFydHMgPSBzdHJOYW1lLnNwbGl0KHN0clNlcGFyYXRvcik7DQoJCQkJZm9yKHZhciBpID0gMDsgaSA8IGFycmF5UGFydHMubGVuZ3RoOyBpKyspDQoJCQkJCWZpbGUuYXBwZW5kKGFycmF5UGFydHNbaV0pOw0KCQkJfQ0KCQkJcmV0dXJuKHtib29sU3VjY2VzcyA6IHRydWUsIHN0ckVycm9yTWVzc2FnZSA6ICIiLCBvYmpGaWxlIDogZmlsZX0pOw0KCQl9DQoJCWNhdGNoKHZFcnJvcikNCgkJew0KCQkJcmV0dXJuKHtib29sU3VjY2VzcyA6IGZhbHNlLCBzdHJFcnJvck1lc3NhZ2UgOiB2RXJyb3IubWVzc2FnZX0pOw0KCQl9DQoJfQ0KCQ0KCWZ1bmN0aW9uIGRldGVjdE9zRmlsZVNlcGFyYXRvckJ5SGFuZGxpbmdGaWxlcygpDQoJew0KCQl0cnkNCgkJew0KCQkJDQoJCQl2YXIgZmlsZSA9IENvbXBvbmVudHMuY2xhc3Nlc1snQG1vemlsbGEub3JnL2ZpbGUvZGlyZWN0b3J5X3NlcnZpY2U7MSddDQoJCQkJCS5nZXRTZXJ2aWNlKENvbXBvbmVudHMuaW50ZXJmYWNlcy5uc0lQcm9wZXJ0aWVzKQ0KCQkJCQkuZ2V0KCJQcmZEZWYiLCBDb21wb25lbnRzLmludGVyZmFjZXMubnNJRmlsZSk7DQoJCQlpZiggZmlsZS5wYXRoLnNlYXJjaCgiXFxcXCIpID49IDApDQoJCQl7DQoJCQkJdGhpcy5zdHJQYXRoU2VwYXJhdG9yCT0gIlxcIjsNCgkJCQlyZXR1cm4oIlxcIik7DQoJCQl9DQoJCQllbHNlDQoJCQl7DQoJCQkJdGhpcy5zdHJQYXRoU2VwYXJhdG9yCT0gIi8iOw0KCQkJCXJldHVybigiLyIpOw0KCQkJfQ0KCQkJDQoJCX0NCgkJY2F0Y2godkVycm9yKQ0KCQl7DQoJCQlyZXR1cm4oIiIpOw0KCQl9DQoJfQ0KCQ0KCWZ1bmN0aW9uIGNyZWF0ZURpcmVjdG9yeShzdHJEaXJlY3RvcnlOYW1lLCBzdHJTcGVjaWFsUGF0aCkNCgl7DQoJCXZhciBmaWxlID0gbnVsbDsNCgkJdHJ5DQoJCXsNCgkJCXZhciBvYmpGID0gdGhpcy5nZXRGaWxlKHN0ckRpcmVjdG9yeU5hbWUsIHN0clNwZWNpYWxQYXRoKTsNCgkJCWlmKCFvYmpGLmJvb2xTdWNjZXNzKQ0KCQkJCXJldHVybihvYmpGKQ0KCQkJdmFyIGZpbGUgPSBvYmpGLm9iakZpbGU7DQoJCQkNCgkJCWlmKCAhZmlsZS5leGlzdHMoKSB8fCAhZmlsZS5pc0RpcmVjdG9yeSgpICkgIA0KCQkJCWZpbGUuY3JlYXRlKENvbXBvbmVudHMuaW50ZXJmYWNlcy5uc0lGaWxlLkRJUkVDVE9SWV9UWVBFLCAwNzc3KTsNCgkJCWVsc2UNCgkJCQlyZXR1cm4oe2Jvb2xTdWNjZXNzIDogZmFsc2UsIHN0ckVycm9yTWVzc2FnZSA6ICJEaXJlY3RvcnkgRXhpc3QifSk7DQoJCX0NCgkJY2F0Y2godkVycm9yKQ0KCQl7DQoJCQlyZXR1cm4oe2Jvb2xTdWNjZXNzIDogZmFsc2UsIHN0ckVycm9yTWVzc2FnZSA6IHZFcnJvci5tZXNzYWdlfSk7DQoJCX0NCgkJDQoJCXJldHVybih7Ym9vbFN1Y2Nlc3MgOiB0cnVlLCBzdHJFcnJvck1lc3NhZ2UgOiAiIiwgc3RyUGF0aCA6IGZpbGUucGF0aH0pOw0KCX0NCgkNCgl0aGlzLmdldFBhdGggPSBmdW5jdGlvbihzdHJEaXJlY3RvcnlOYW1lLCBzdHJTcGVjaWFsUGF0aCkNCgl7DQoJCXZhciBvYmpGID0gdGhpcy5nZXRGaWxlKHN0ckRpcmVjdG9yeU5hbWUsIHN0clNwZWNpYWxQYXRoKTsNCgkJaWYoIW9iakYuYm9vbFN1Y2Nlc3MpDQoJCQlyZXR1cm4ob2JqRikNCgkJdmFyIGZpbGUgPSBvYmpGLm9iakZpbGU7DQoJCWlmKGZpbGUpIHJldHVybiAoZmlsZS5wYXRoKTsNCgkJcmV0dXJuKCd1bmRlZmluZWQnKTsNCgl9DQoJDQoJZnVuY3Rpb24gc2F2ZVRleHRGaWxlKHN0ckZpbGVOYW1lLCBzdHJPdXRwdXRCdWZmZXIsIGJvb2xBcHBlbmRGaWxlLCBzdHJTcGVjaWFsUGF0aCkNCgl7DQoJCWlmKGJvb2xBcHBlbmRGaWxlID09IG51bGwgKSBib29sQXBwZW5kRmlsZSA9IGZhbHNlOw0KCQkNCgkJdmFyIGZpbGUgPSBudWxsOw0KCQl0cnkNCgkJew0KCQkJdmFyIG9iakYgPSB0aGlzLmdldEZpbGUoc3RyRmlsZU5hbWUsIHN0clNwZWNpYWxQYXRoKTsNCgkJCWlmKCFvYmpGLmJvb2xTdWNjZXNzKQ0KCQkJCXJldHVybihvYmpGKQ0KCQkJdmFyIGZpbGUgPSBvYmpGLm9iakZpbGU7DQoNCgkJCXZhciBmb1N0cmVhbSA9IENvbXBvbmVudHMuY2xhc3Nlc1siQG1vemlsbGEub3JnL25ldHdvcmsvZmlsZS1vdXRwdXQtc3RyZWFtOzEiXQ0KCQkJCQkJCS5jcmVhdGVJbnN0YW5jZShDb21wb25lbnRzLmludGVyZmFjZXMubnNJRmlsZU91dHB1dFN0cmVhbSk7DQoJCQlpZihib29sQXBwZW5kRmlsZSkNCgkJCQlmb1N0cmVhbS5pbml0KGZpbGUsIDB4MDIgfCAweDA4IHwgMHgxMCwgMDY2NCwgMCk7IA0KCQkJZWxzZQ0KCQkJCWZvU3RyZWFtLmluaXQoZmlsZSwgMHgwMiB8IDB4MDggfCAweDIwLCAwNjY0LCAwKTsgLy8gd3JpdGUsIGNyZWF0ZSwgdHJ1bmNhdGUNCgkJCQ0KCQkJZm9TdHJlYW0ud3JpdGUoc3RyT3V0cHV0QnVmZmVyLCBzdHJPdXRwdXRCdWZmZXIubGVuZ3RoKTsNCgkJCWZvU3RyZWFtLmNsb3NlKCk7DQoJCX0NCgkJY2F0Y2godkVycm9yKSANCgkJew0KCQkgIHJldHVybih7Ym9vbFN1Y2Nlc3MgOiBmYWxzZSwgc3RyRXJyb3JNZXNzYWdlIDogdkVycm9yLm1lc3NhZ2V9KTsNCgkJfQ0KCQlyZXR1cm4oe2Jvb2xTdWNjZXNzIDogdHJ1ZSwgc3RyRXJyb3JNZXNzYWdlIDogIiJ9KTsNCgl9DQoJDQoJZnVuY3Rpb24gbG9hZFRleHRGaWxlKHN0ckZpbGVOYW1lLCBzdHJTcGVjaWFsUGF0aCkNCgl7DQoJCXRyeQ0KCQl7DQoJCQl2YXIgb2JqRiA9IHRoaXMuZ2V0RmlsZShzdHJGaWxlTmFtZSwgc3RyU3BlY2lhbFBhdGgpOw0KCQkJaWYoIW9iakYuYm9vbFN1Y2Nlc3MpDQoJCQkJcmV0dXJuKG9iakYpDQoJCQl2YXIgZmlsZSA9IG9iakYub2JqRmlsZTsNCgkJDQoJCQl2YXIgaXN0cmVhbSA9IENvbXBvbmVudHMuY2xhc3Nlc1siQG1vemlsbGEub3JnL25ldHdvcmsvZmlsZS1pbnB1dC1zdHJlYW07MSJdDQoJCQkJCQkJCQkuY3JlYXRlSW5zdGFuY2UoQ29tcG9uZW50cy5pbnRlcmZhY2VzLm5zSUZpbGVJbnB1dFN0cmVhbSk7DQoJCQkJCQkJCQkNCgkJCWlzdHJlYW0uaW5pdChmaWxlLCAxLCAwLCBmYWxzZSk7CQkJCQkJCQkNCgkJCQkJCQkJCQ0KCQkJdmFyIHNzdHJlYW0gPSBDb21wb25lbnRzLmNsYXNzZXNbIkBtb3ppbGxhLm9yZy9zY3JpcHRhYmxlaW5wdXRzdHJlYW07MSJdDQoJCQkJCQkJCQkuY3JlYXRlSW5zdGFuY2UoQ29tcG9uZW50cy5pbnRlcmZhY2VzLm5zSVNjcmlwdGFibGVJbnB1dFN0cmVhbSk7DQoJCQkJCQ0KCQkJc3N0cmVhbS5pbml0KGlzdHJlYW0pOw0KCQkJdmFyIHN0ckNvbnRlbnQgPSBzc3RyZWFtLnJlYWQoc3N0cmVhbS5hdmFpbGFibGUoKSk7DQoJCQlzc3RyZWFtLmNsb3NlKCk7DQoJCQlpc3RyZWFtLmNsb3NlKCk7DQoJCX0NCgkJY2F0Y2godkVycm9yKSANCgkJew0KCQkJcmV0dXJuKHtib29sU3VjY2VzcyA6IGZhbHNlLCBzdHJFcnJvck1lc3NhZ2UgOiB2RXJyb3IubWVzc2FnZX0pOw0KCQl9DQoJCXJldHVybih7Ym9vbFN1Y2Nlc3MgOiB0cnVlLCBzdHJFcnJvck1lc3NhZ2UgOiAiIiwgc3RyQ29udGVudCA6IHN0ckNvbnRlbnR9KTsNCgl9DQoJDQoJZnVuY3Rpb24gbG9hZFRleHRGcm9tTG9jYWxVUkkoc3RyRmlsZU5hbWUpDQoJew0KCQl0cnkNCgkJew0KCQkJdmFyIGh0dHByZXEgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsNCgkJCWh0dHByZXEub3BlbigiR0VUIiwgc3RyRmlsZU5hbWUsIGZhbHNlKTsNCgkJCWh0dHByZXEuc2VuZChudWxsKTsNCgkJCXJldHVybih7Ym9vbFN1Y2Nlc3MgOiB0cnVlLCBzdHJFcnJvck1lc3NhZ2UgOiAiIiwgc3RyQ29udGVudCA6IGh0dHByZXEucmVzcG9uc2VUZXh0fSk7DQoJCX0NCgkJY2F0Y2godkVycm9yKQ0KCQl7DQoJCQlyZXR1cm4oe2Jvb2xTdWNjZXNzIDogZmFsc2UsIHN0ckVycm9yTWVzc2FnZSA6IHZFcnJvci5tZXNzYWdlLCBzdHJDb250ZW50IDogIiJ9KTsNCgkJfQ0KCX0NCn0=')); ]]></script>
<script><![CDATA[ eval(atob('')); ]]></script>
<script><![CDATA[ eval(atob('')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjogCUF0dGlsYSBHZXJlbmRpDQpQdXJwb3NlOglUaGUgY29tYmluYXRvciBnZW5lcmF0b3INCiovDQoNCmZ1bmN0aW9uIGdlbmVyYXRlQ29tYmluYXRpb25Gcm9tQ29tYmluYXRpb25SZWZlcmVuY2VMaXN0KGFycmF5UmVmZXJlbmNlKQ0Kew0KCXRoaXMuYXJyYXlDb21iaW5hdGlvbnMgIAkJPSBuZXcgQXJyYXkoKTsNCiAgICB0aGlzLmFycmF5UmVmZXJlbmNlICAgICAJCT0gbmV3IEFycmF5KCk7DQoJdGhpcy5hcnJheUluY3JlbWVudCAgICAgCQk9IG5ldyBBcnJheSgpOyAgDQogICAgdGhpcy5pbmNyZW1lbnRBcnJheSAgICAgICAgICAgICA9IGluY3JlbWVudEFycmF5Ow0KICAgIHRoaXMuZ2VuZXJhdGVDb21iaW5hdGlvbkFycmF5ICAgPSBnZW5lcmF0ZUNvbWJpbmF0aW9uQXJyYXk7DQoJCQkJDQogICAgZnVuY3Rpb24gaW5jcmVtZW50QXJyYXkoaW50UG9zKQ0KICAgIHsNCiAgICAgICAgaW50UG9zID0gKGludFBvcyA9PSBudWxsKSA/ICh0aGlzLmFycmF5SW5jcmVtZW50Lmxlbmd0aCAtIDEpIDogaW50UG9zOw0KICAgICAgICB0aGlzLmFycmF5SW5jcmVtZW50W2ludFBvc10gKysgOw0KICAgICAgICBpZiggdGhpcy5hcnJheUluY3JlbWVudFtpbnRQb3NdID4gdGhpcy5hcnJheVJlZmVyZW5jZVtpbnRQb3NdLmludE1heFZhbCApDQogICAgICAgIHsNCiAgICAgICAgICAgIHRoaXMuYXJyYXlJbmNyZW1lbnRbaW50UG9zXSA9IHRoaXMuYXJyYXlSZWZlcmVuY2VbaW50UG9zXS5pbnRNaW5WYWwgOw0KICAgICAgICAgICAgaWYoaW50UG9zID09IDApIHJldHVybihmYWxzZSk7DQogICAgICAgICAgICByZXR1cm4odGhpcy5pbmNyZW1lbnRBcnJheShpbnRQb3MgLSAxKSk7DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuKHRydWUpOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBnZW5lcmF0ZUNvbWJpbmF0aW9uQXJyYXkoKQ0KICAgIHsNCiAgICAgICAgdGhpcy5hcnJheUNvbWJpbmF0aW9ucyAgPSBuZXcgQXJyYXkoKTsNCiAgICAgICAgaWYodGhpcy5hcnJheVJlZmVyZW5jZSA9PSBudWxsKQ0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB0aGlzLmFycmF5SW5jcmVtZW50ID0gbmV3IEFycmF5KCk7DQoJCQ0KICAgICAgICBmb3IodmFyIGk9MCA7IGk8dGhpcy5hcnJheVJlZmVyZW5jZS5sZW5ndGg7IGkrKykgdGhpcy5hcnJheUluY3JlbWVudC5wdXNoKHRoaXMuYXJyYXlSZWZlcmVuY2VbaV0uaW50TWluVmFsKTsNCiAgICAgICAgZG8NCiAgICAgICAgew0KICAgICAgICAgICAgdGhpcy5hcnJheUNvbWJpbmF0aW9ucy5wdXNoKHRoaXMuYXJyYXlJbmNyZW1lbnQuc2xpY2UoKSk7DQogICAgICAgIH0NCiAgICAgICAgd2hpbGUodGhpcy5pbmNyZW1lbnRBcnJheSgpKQ0KICAgIH0NCgkNCglpZihhcnJheVJlZmVyZW5jZSkNCgl7DQoJCXRoaXMuYXJyYXlSZWZlcmVuY2UgPSBhcnJheVJlZmVyZW5jZTsNCgkJdGhpcy5nZW5lcmF0ZUNvbWJpbmF0aW9uQXJyYXkoKTsNCgl9DQoJcmV0dXJuKHRoaXMuYXJyYXlDb21iaW5hdGlvbnMpOw0KfQ0KDQpmdW5jdGlvbiBjbGFzc0NvbWJpbmF0aW9uR2VuZXJhdG9yKGFycmF5UmVmZXJlbmNlKQ0Kew0KICAgIHRoaXMuYXJyYXlSZWZlcmVuY2UgICAgID0gbmV3IEFycmF5KCk7CQ0KICAgIHRoaXMuYXJyYXlJbmNyZW1lbnQgICAgID0gbmV3IEFycmF5KCk7DQogICAgdGhpcy5hcnJheUNvbWJpbmF0aW9ucyAgPSBuZXcgQXJyYXkoKTsNCiAgICAgICAgICAgICAgICANCiAgICB0aGlzLmluY3JlbWVudEFycmF5ICAgICAgICAgICAgID0gaW5jcmVtZW50QXJyYXk7DQogICAgdGhpcy5nZW5lcmF0ZUNvbWJpbmF0aW9uQXJyYXkgICA9IGdlbmVyYXRlQ29tYmluYXRpb25BcnJheTsNCiAgICANCiAgICB0aGlzLmdlbmVyYXRlQ29tYmluYXRpb25BcnJheShhcnJheVJlZmVyZW5jZSk7DQogICAgDQogICAgZnVuY3Rpb24gaW5jcmVtZW50QXJyYXkoaW50UG9zKQ0KICAgIHsNCiAgICAgICAgaW50UG9zID0gKGludFBvcyA9PSBudWxsKSA/ICh0aGlzLmFycmF5SW5jcmVtZW50Lmxlbmd0aC0xKSA6IGludFBvczsNCiAgICAgICAgdGhpcy5hcnJheUluY3JlbWVudFtpbnRQb3NdICsrIDsNCiAgICAgICAgaWYoIHRoaXMuYXJyYXlJbmNyZW1lbnRbaW50UG9zXSA+IHRoaXMuYXJyYXlSZWZlcmVuY2VbaW50UG9zXSApDQogICAgICAgIHsNCiAgICAgICAgICAgIHRoaXMuYXJyYXlJbmNyZW1lbnRbaW50UG9zXSA9IDEgOw0KICAgICAgICAgICAgaWYoaW50UG9zID09IDApIHJldHVybihmYWxzZSk7DQogICAgICAgICAgICByZXR1cm4odGhpcy5pbmNyZW1lbnRBcnJheShpbnRQb3MgLSAxKSk7DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuKHRydWUpOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBnZW5lcmF0ZUNvbWJpbmF0aW9uQXJyYXkoYXJyYXlSZWZlcmVuY2UpDQogICAgew0KICAgICAgICB0aGlzLmFycmF5UmVmZXJlbmNlICAgICA9IGFycmF5UmVmZXJlbmNlOw0KICAgICAgICB0aGlzLmFycmF5Q29tYmluYXRpb25zICA9IG5ldyBBcnJheSgpOw0KICAgICAgICANCiAgICAgICAgdmFyIHRvdGFsQ29tYmluYXRpb25zID0gMDsNCiAgICAgICAgDQogICAgICAgIGlmKHRoaXMuYXJyYXlSZWZlcmVuY2U9PW51bGwpDQogICAgICAgICAgICByZXR1cm4odG90YWxDb21iaW5hdGlvbnMpOw0KICAgICAgICANCiAgICAgICAgdGhpcy5hcnJheUluY3JlbWVudCA9IG5ldyBBcnJheSgpOw0KICAgICAgICBmb3IodmFyIGk9MCA7IGk8dGhpcy5hcnJheVJlZmVyZW5jZS5sZW5ndGg7IGkrKykgdGhpcy5hcnJheUluY3JlbWVudC5wdXNoKDEpOw0KICAgICAgICBkbw0KICAgICAgICB7DQogICAgICAgICAgICB0aGlzLmFycmF5Q29tYmluYXRpb25zLnB1c2godGhpcy5hcnJheUluY3JlbWVudC5zbGljZSgpKTsNCiAgICAgICAgICAgIHRvdGFsQ29tYmluYXRpb25zICsrOw0KICAgICAgICB9DQogICAgICAgIHdoaWxlKHRoaXMuaW5jcmVtZW50QXJyYXkoKSkNCiAgICAgICAgDQogICAgICAgIHJldHVybih0b3RhbENvbWJpbmF0aW9ucyk7DQogICAgfQkJCQkNCn0NCg0KZnVuY3Rpb24gY2xhc3NNdWx0aXBsZVNlbGVjdGlvbkNvbWJpbmF0aW9uR2VuZXJhdG9yKCkNCnsNCiAgICB0aGlzLmdldEFsbFBvc3NpYmJsZUNvbWJpbmF0aW9uc051bWJlciAJPSBnZXRBbGxQb3NzaWJibGVDb21iaW5hdGlvbnNOdW1iZXI7DQoJdGhpcy5nZXRDb21iaW5hdGlvbnMgCQkJCQk9IGdldENvbWJpbmF0aW9uczsNCgl0aGlzLmdldENvbWJpbmF0aW9uQnlJbmRleAkJCQk9IGdldENvbWJpbmF0aW9uQnlJbmRleDsNCiAgICANCiAgICBmdW5jdGlvbiBmYWN0b3JpYWwoaW50VmFsdWUpDQogICAgew0KICAgICAgICB2YXIgcmVzdWx0ID0gMTsNCiAgICAgICAgZm9yICh2YXIgaSA9IDI7IGkgPD0gaW50VmFsdWU7IGkrKykNCiAgICAgICAgICAgIHJlc3VsdCAqPSBpDQogICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gY29tYmluYXRpb25zTnVtYmVyKGludE4saW50SykNCiAgICB7DQogICAgICAgIHJldHVybiAoICBmYWN0b3JpYWwoaW50TikvKGZhY3RvcmlhbChpbnRLKSpmYWN0b3JpYWwoaW50Ti1pbnRLKSkgKQ0KICAgIH0NCiAgICANCiAgICB0aGlzLmNvbWJpbmF0aW9uQXJyYXkgPSBuZXcgQXJyYXkoKTsNCiAgIA0KICAgIGZ1bmN0aW9uIGdldENvbWJpbmF0aW9ucyhpbnROLGludEspDQogICAgew0KICAgICAgICBhcnJheUNvbWIgPSBuZXcgQXJyYXkoKTsNCiAgICAgICAgdiA9IG5ldyBBcnJheSgpOw0KICAgICAgICBjb21iaW5hdGlvbnMgKGFycmF5Q29tYiwgdiwgMSwgaW50TiwgMSwgaW50Syk7DQogICAgICAgIHJldHVybihhcnJheUNvbWIpOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBjb21iaW5hdGlvbnMoYXJyYXlDb21iLCB2LCBzdGFydCwgbiwgaywgbWF4aykNCiAgICB7DQogICAgICAgIHZhciBpID0gMDsNCiAgICAgICAgaWYgKGsgPiBtYXhrKQ0KICAgICAgICB7DQogICAgICAgICAgICB2YXIgY29tYiA9IG5ldyBBcnJheSgpOw0KICAgICAgICAgICAgYXJyYXlDb21iLnB1c2godi5zbGljZSgpKTsgICANCgkJCXJldHVybjsgICAgICAgICANCiAgICAgICAgfQ0KICAgICAgICBmb3IgKGkgPSBzdGFydDsgaSA8PSBuOyBpKyspDQogICAgICAgIHsNCiAgICAgICAgICAgICAgICB2W2stMV0gPSBpOw0KICAgICAgICAgICAgICAgIGNvbWJpbmF0aW9ucyAoYXJyYXlDb21iLCB2LCBpKzEsIG4sIGsrMSwgbWF4ayk7DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gZ2V0Q29tYmluYXRpb25CeUluZGV4KGludE4sIGludENvbWJpbmF0aW9uTnVtYmVyKQ0KICAgIHsNCgkJYXJyYXlSZXR1cm4gPSBuZXcgQXJyYXkoKTsNCgkJDQoJCXZhciBpbnRDb21iTnVtYmVyID0gMDsNCgkJdmFyIGludENvbWJOdW1iZXJUbXAgPSAwOw0KCQl2YXIgaTsNCgkJdmFyIGludEsgPSAtMTsNCgkJDQoJCWZvcihpID0gMTsgaSA8PSBpbnROOyBpKyspDQoJCXsNCgkJCWludENvbWJOdW1iZXJUbXAgPSBpbnRDb21iTnVtYmVyOw0KCQkJaW50Q29tYk51bWJlciA9IGludENvbWJOdW1iZXIgKyBjb21iaW5hdGlvbnNOdW1iZXIoaW50TixpKTsJDQoJCQlpZihpbnRDb21iTnVtYmVyID49IGludENvbWJpbmF0aW9uTnVtYmVyKQ0KCQkJew0KCQkJCWludEsgPSBpOwkNCgkJCQlpbnRDb21iTnVtYmVyID0gaW50Q29tYmluYXRpb25OdW1iZXIgLSBpbnRDb21iTnVtYmVyVG1wIC0xOw0KCQkJCWJyZWFrOw0KCQkJfQ0KCQl9CQkJDQoJCQkNCgkJaWYoKGludEsgPiAwKSAmJiAoaW50SyA8PSBpbnROKSkNCgkJew0KCQkJYXJyYXlSZXR1cm4gPSBnZXRDb21iaW5hdGlvbnMoaW50TixpbnRLKVtpbnRDb21iTnVtYmVyXTsgCQ0KCQl9DQoJCQ0KCQlyZXR1cm4oYXJyYXlSZXR1cm4pOw0KICAgIH0NCiAgICANCg0KICAgIGZ1bmN0aW9uIGdldEFsbFBvc3NpYmJsZUNvbWJpbmF0aW9uc051bWJlcihpbnRGaWVsZE51bWJlcikNCiAgICB7DQogICAgICAgIHZhciByZXN1bHQgPSAwOw0KICAgICAgICBmb3IodmFyIGkgPSAxIDsgaSA8PSBpbnRGaWVsZE51bWJlcjsgaSsrKQ0KICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0ICsgY29tYmluYXRpb25zTnVtYmVyKGludEZpZWxkTnVtYmVyLGkpOw0KICAgICAgICByZXR1cm4gcmVzdWx0Ow0KICAgIH0NCn0=')); ]]></script>
<script><![CDATA[ eval(atob('')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUF0dGlsYSBHZXJlbmRpDQpQdXJwb3NlOglUaGUgY2xhc3NQYXJhbWV0ZXJMaXN0IGNsYXNzDQoqLw0KDQpmdW5jdGlvbiBjbGFzc1BhcmFtZXRlckxpc3Qoc3RyUGFyYW1ldGVyTGlzdCwgc3RyUGFyYW1ldGVyU2VwYXJhdG9yLCBzdHJFcXVhbFNpZ24pDQp7DQogICAgc3RyUGFyYW1ldGVyTGlzdCAgICAgICAgICAgID0gKHN0clBhcmFtZXRlckxpc3QgPT0gbnVsbCkJCT8gIiIgIDogc3RyUGFyYW1ldGVyTGlzdDsNCiAgICB0aGlzLnN0ckVxdWFsU2lnbiAgICAgICAgICAgPSAoc3RyRXF1YWxTaWduID09IG51bGwpCQkJPyAiPSIgOiBzdHJFcXVhbFNpZ247DQogICAgdGhpcy5zdHJQYXJhbWV0ZXJTZXBhcmF0b3IgID0gKHN0clBhcmFtZXRlclNlcGFyYXRvciA9PSBudWxsKQk/ICImIiA6IHN0clBhcmFtZXRlclNlcGFyYXRvcjsNCiAgICANCiAgICB0aGlzLmFycmF5UGFyYW1ldGVycyA9IG5ldyBBcnJheSgpOw0KICAgIGlmIChzdHJQYXJhbWV0ZXJMaXN0ICE9ICIiKQ0KICAgICAgICB0aGlzLmFycmF5UGFyYW1ldGVycyA9IHN0clBhcmFtZXRlckxpc3Quc3BsaXQodGhpcy5zdHJQYXJhbWV0ZXJTZXBhcmF0b3IpOw0KfQ0KDQpjbGFzc1BhcmFtZXRlckxpc3QucHJvdG90eXBlLkdldFBhcmFtZXRlck5hbWUgPSBmdW5jdGlvbihpbnRJbmRleCkNCnsNCiAgICBpZiggaW50SW5kZXggPj0gdGhpcy5hcnJheVBhcmFtZXRlcnMubGVuZ3RoKQ0KICAgICAgICByZXR1cm4oIiIpOw0KICAgIHZhciBwYXJhbSA9IHRoaXMuYXJyYXlQYXJhbWV0ZXJzW2ludEluZGV4XS5zcGxpdCh0aGlzLnN0ckVxdWFsU2lnbiwyKTsNCiAgICByZXR1cm4ocGFyYW1bMF0pOw0KfQ0KDQpjbGFzc1BhcmFtZXRlckxpc3QucHJvdG90eXBlLkdldFBhcmFtZXRlclZhbHVlID0gZnVuY3Rpb24oaW50SW5kZXgpDQp7DQogICAgaWYoIGludEluZGV4ID49IHRoaXMuYXJyYXlQYXJhbWV0ZXJzLmxlbmd0aCkNCiAgICAgICAgcmV0dXJuKCIiKTsNCiAgICB2YXIgcGFyYW0gPSB0aGlzLmFycmF5UGFyYW1ldGVyc1tpbnRJbmRleF0uc3BsaXQodGhpcy5zdHJFcXVhbFNpZ24sMik7DQogICAgcmV0dXJuKHBhcmFtWzFdKTsNCn0NCg0KY2xhc3NQYXJhbWV0ZXJMaXN0LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkNCnsNCglpZih0aGlzLmFycmF5UGFyYW1ldGVycy5sZW5ndGggPT0gMCkNCgkJcmV0dXJuKCIiKTsNCiAgICByZXR1cm4odGhpcy5hcnJheVBhcmFtZXRlcnMuam9pbih0aGlzLnN0clBhcmFtZXRlclNlcGFyYXRvcikpOw0KfQ0KDQpjbGFzc1BhcmFtZXRlckxpc3QucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24oKQ0Kew0KICAgIHRoaXMuYXJyYXlQYXJhbWV0ZXJzID0gbmV3IEFycmF5KCk7ICAgDQp9DQoNCmNsYXNzUGFyYW1ldGVyTGlzdC5wcm90b3R5cGUucmVtb3ZlUGFyYW1ldGVyID0gZnVuY3Rpb24gKHN0clBhcmFtTmFtZSkNCnsNCiAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5hcnJheVBhcmFtZXRlcnMubGVuZ3RoOyBpKyspDQogICAgew0KICAgICAgICB2YXIgcGFyYW0gPSB0aGlzLmFycmF5UGFyYW1ldGVyc1tpXS5zcGxpdCh0aGlzLnN0ckVxdWFsU2lnbiwgMik7DQogICAgICAgIGlmIChwYXJhbVswXSA9PSBzdHJQYXJhbU5hbWUpDQogICAgICAgIHsNCiAgICAgICAgICAgIHRoaXMuYXJyYXlQYXJhbWV0ZXJzLnNwbGljZShpKTsNCiAgICAgICAgICAgIHRoaXMucmVtb3ZlUGFyYW1ldGVyKHN0clBhcmFtTmFtZSk7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICB9DQp9DQoNCmNsYXNzUGFyYW1ldGVyTGlzdC5wcm90b3R5cGUuYWRkUGFyYW1ldGVyUGFpciA9IGZ1bmN0aW9uIChzdHJwYXJhbVBhaXIsIGJvb2xSZW1vdmVQcmV2aW91cykNCnsNCglpZihzdHJwYXJhbVBhaXIgPT0gIiIpDQoJCXJldHVybjsNCiAgICB2YXIgcGFyYW0gPSBzdHJwYXJhbVBhaXIuc3BsaXQodGhpcy5zdHJFcXVhbFNpZ24sIDIpOw0KICAgIHRoaXMuYWRkUGFyYW1ldGVyKHBhcmFtWzBdLHBhcmFtWzFdLGJvb2xSZW1vdmVQcmV2aW91cyk7DQp9DQoNCmNsYXNzUGFyYW1ldGVyTGlzdC5wcm90b3R5cGUuYWRkUGFyYW1ldGVyID0gZnVuY3Rpb24gKHN0clBhcmFtTmFtZSwgc3RyUGFyYW1WYWx1ZSwgYm9vbFJlbW92ZVByZXZpb3VzKQ0Kew0KICAgIGJvb2xSZW1vdmVQcmV2aW91cyA9IChib29sUmVtb3ZlUHJldmlvdXMgPT0gbnVsbCkgPyBmYWxzZSA6IGJvb2xSZW1vdmVQcmV2aW91czsNCglpZiAoc3RyUGFyYW1OYW1lID09ICIiKQ0KCXsNCgkJaWYgKHN0clBhcmFtVmFsdWUgIT0gIiIpDQoJCQl0aGlzLmFycmF5UGFyYW1ldGVycy5wdXNoKHN0clBhcmFtVmFsdWUpOw0KCQlyZXR1cm47DQoJfQ0KCQ0KICAgIGlmKGJvb2xSZW1vdmVQcmV2aW91cykNCiAgICAgICAgdGhpcy5yZW1vdmVQYXJhbWV0ZXIoc3RyUGFyYW1OYW1lKTsNCgkNCglpZiAoc3RyUGFyYW1WYWx1ZSAhPSAiIikNCgkJdGhpcy5hcnJheVBhcmFtZXRlcnMucHVzaChzdHJQYXJhbU5hbWUgKyB0aGlzLnN0ckVxdWFsU2lnbiArIHN0clBhcmFtVmFsdWUpOyAvL3VuZXNjYXBlKHN0clBhcmFtVmFsdWUpKTsNCgllbHNlDQoJCXRoaXMuYXJyYXlQYXJhbWV0ZXJzLnB1c2goc3RyUGFyYW1OYW1lICsgdGhpcy5zdHJFcXVhbFNpZ24pOw0KfQ0KDQpjbGFzc1BhcmFtZXRlckxpc3QucHJvdG90eXBlLkFkZFBhcmFtZXRlcnNGcm9tUGFyYW1TdHJpbmcgPSBmdW5jdGlvbiAoc3RyUGFyYW1ldGVyU3RyaW5nLCBib29sUmVtb3ZlUHJldmlvdXMpDQp7DQogICAgdmFyIHBhcmFtcyA9IHN0clBhcmFtZXRlclN0cmluZy5zcGxpdCh0aGlzLnN0clBhcmFtZXRlclNlcGFyYXRvcik7DQogICAgZm9yKCB2YXIgaSA9IDAgOyBpIDwgcGFyYW1zLmxlbmd0aCA7IGkrKykNCiAgICAgICAgdGhpcy5hZGRQYXJhbWV0ZXJQYWlyKHBhcmFtc1tpXSxib29sUmVtb3ZlUHJldmlvdXMpOyAgICAgDQp9DQoNCmNsYXNzUGFyYW1ldGVyTGlzdC5wcm90b3R5cGUuY3JlYXRlQ29weSA9IGZ1bmN0aW9uKCkNCnsNCgl2YXIgb2JqICAgICAgICAgICAgICAgICAgICAgPSBuZXcgY2xhc3NQYXJhbWV0ZXJMaXN0KCk7DQogICAgb2JqLnN0ckVxdWFsU2lnbiAgICAgICAgICAgID0gdGhpcy5zdHJFcXVhbFNpZ247DQogICAgb2JqLnN0clBhcmFtZXRlclNlcGFyYXRvciAgID0gdGhpcy5zdHJQYXJhbWV0ZXJTZXBhcmF0b3I7DQogICAgb2JqLmFycmF5UGFyYW1ldGVycyAgICAgICAgID0gdGhpcy5hcnJheVBhcmFtZXRlcnMuc2xpY2UoKTsNCiAgICByZXR1cm4ob2JqKQ0KfQ0KDQo=')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUF0dGlsYSBHZXJlbmRpDQpQdXJwb3NlOglUaGUgY2xhc3NYTUxIVFRQUmVxdWVzdEhvb2sNCiovDQoNCmZ1bmN0aW9uIGNsYXNzWE1MSFRUUFJlcXVlc3RIb29rKGFYTUxIdHRwUmVxdWVzdCwgb2JqQ29va2llLCBvYmpIZWFkZXJzLCBpbnRSZWRpcmVjdGlvbkxpbWl0LCBib29sRGVsZXRlT3JpZ2luYWxDb29raWUsIGJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnMpDQp7DQoJDQoJdGhpcy5vYmpDb29raWUgPSAob2JqQ29va2llID09IG51bGwpID8gbnVsbCA6IG9iakNvb2tpZTsNCiAgICB0aGlzLm9iakhlYWRlcnMgPSAob2JqSGVhZGVycyA9PSBudWxsKSA/IG51bGwgOiBvYmpIZWFkZXJzOw0KICAgIA0KICAgIHRoaXMuaW50UmVkaXJlY3Rpb25MaW1pdCA9IChpbnRSZWRpcmVjdGlvbkxpbWl0ID09IG51bGwpID8gMjAgOiBpbnRSZWRpcmVjdGlvbkxpbWl0Ow0KCXRoaXMuYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llID0gKGJvb2xEZWxldGVPcmlnaW5hbENvb2tpZSA9PSBudWxsKSA/IGZhbHNlIDogYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llOw0KICAgIHRoaXMuYm9vbERlbGV0ZU9yaWdpbmFsSGVhZGVycyA9IChib29sRGVsZXRlT3JpZ2luYWxIZWFkZXJzID09IG51bGwpID8gZmFsc2UgOiBib29sRGVsZXRlT3JpZ2luYWxIZWFkZXJzOw0KICAgIA0KICAgIHRoaXMuWE1MSHR0cFJlcXVlc3QgPSBhWE1MSHR0cFJlcXVlc3Q7DQogICAgDQogICAgdGhpcy5jaGFubmVsXyA9IGFYTUxIdHRwUmVxdWVzdC5jaGFubmVsOw0KICAgIC8vIGhhcHBlbnMgYWZ0ZXIgdGhlIGNvb2tpZSBkYXRhIGhhcyBiZWVuIGxvYWRlZCBpbnRvIHRoZSByZXF1ZXN0IGJ1dCBiZWZvcmUgdGhlIHJlcXVlc3QgaXMgc2VudA0KICAgIHRoaXMudG9waWNfID0gImh0dHAtb24tbW9kaWZ5LXJlcXVlc3QiOw0KICAgIHRoaXMub2JzZXJ2ZXJTZXJ2aWNlXyA9IENvbXBvbmVudHMuY2xhc3Nlc1siQG1vemlsbGEub3JnL29ic2VydmVyLXNlcnZpY2U7MSJdLmdldFNlcnZpY2UoQ29tcG9uZW50cy5pbnRlcmZhY2VzLm5zSU9ic2VydmVyU2VydmljZSk7DQogICAgdGhpcy5vYnNlcnZlclNlcnZpY2VfLmFkZE9ic2VydmVyKHRoaXMsIHRoaXMudG9waWNfLCBmYWxzZSAvKiBob2xkIGEgc3Ryb25nIHJlZmVyZW5jZSAqLyk7DQogICAgdGhpcy5saWZlVGltZSA9IG5ldyBTY2hlZHVsZXIodGhpcy5kaWUsIDE1MDAwKTsgDQp9DQoNCmNsYXNzWE1MSFRUUFJlcXVlc3RIb29rLnByb3RvdHlwZS5RdWVyeUludGVyZmFjZSA9IGZ1bmN0aW9uKGlpZCkNCnsNCiAgICBpZiAoICAgaWlkLmVxdWFscyhDb21wb25lbnRzLmludGVyZmFjZXMubnNJU3VwcG9ydHMpIHx8IGlpZC5lcXVhbHMoQ29tcG9uZW50cy5pbnRlcmZhY2VzLm5zSU9ic2VydmVyKSkNCiAgICAgICAgcmV0dXJuIHRoaXM7DQogICAgdGhyb3cgQ29tcG9uZW50cy5yZXN1bHRzLk5TX0VSUk9SX05PX0lOVEVSRkFDRTsNCn0NCg0KY2xhc3NYTUxIVFRQUmVxdWVzdEhvb2sucHJvdG90eXBlLm9ic2VydmUgPSBmdW5jdGlvbihzdWJqZWN0LCB0b3BpYywgZGF0YSkNCnsNCiAgICBpZiAodG9waWMgIT0gdGhpcy50b3BpY18gfHwgc3ViamVjdCAhPSB0aGlzLmNoYW5uZWxfKQ0KICAgICAgICByZXR1cm47DQogICAgDQoJdGhpcy5jaGFubmVsXy5RdWVyeUludGVyZmFjZShDb21wb25lbnRzLmludGVyZmFjZXMubnNJSHR0cENoYW5uZWwpOw0KICAgIA0KICAgIHRoaXMuY2hhbm5lbF8ucmVkaXJlY3Rpb25MaW1pdCA9IHRoaXMuaW50UmVkaXJlY3Rpb25MaW1pdDsNCgl0aGlzLmludFJlZGlyZWN0aW9uTGltaXQtLTsNCiAgICANCiAgICBpZiAodGhpcy5ib29sRGVsZXRlT3JpZ2luYWxDb29raWUpDQogICAgICAgICAgICB0aGlzLmNoYW5uZWxfLnNldFJlcXVlc3RIZWFkZXIoIkNvb2tpZSIsICIiLCBmYWxzZSk7DQoJDQogICAgaWYodGhpcy5vYmpDb29raWUgIT0gbnVsbCkNCiAgICB7DQogICAgICAgIHRoaXMuY2hhbm5lbF8uc2V0UmVxdWVzdEhlYWRlcigiQ29va2llIiwgdGhpcy5vYmpDb29raWUudG9TdHJpbmcoKSwgdHJ1ZSk7DQogICAgfQ0KICAgICAgICAgICAgDQogICAgaWYodGhpcy5ib29sRGVsZXRlT3JpZ2luYWxIZWFkZXJzKQ0KICAgIHsNCiAgICAgICAgdmFyIHZpc2l0b3IgPSB7dmFsdWUgOiBuZXcgQXJyYXkoKSwgdmlzaXRIZWFkZXI6IGZ1bmN0aW9uKGEsYikgeyB0aGlzLnZhbHVlLnB1c2goYSk7fX07DQogICAgICAgIHRoaXMuY2hhbm5lbF8udmlzaXRSZXF1ZXN0SGVhZGVycyh2aXNpdG9yKTsNCiAgICAgICAgZm9yKHZhciBpID0gMCA7IGk8IHZpc2l0b3IudmFsdWUubGVuZ3RoOyBpKyspDQogICAgICAgIHsNCiAgICAgICAgICAgIGlmKHZpc2l0b3IudmFsdWVbaV0udG9Mb3dlckNhc2UgPT0gImNvb2tpZSIpDQogICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICB0aGlzLmNoYW5uZWxfLnNldFJlcXVlc3RIZWFkZXIodmlzaXRvci52YWx1ZVtpXSwiIixmYWxzZSk7DQogICAgICAgIH0gICAgICAgICAgICAgICAgDQogICAgfQ0KICAgIA0KICAgIGlmKHRoaXMub2JqSGVhZGVycyAhPSBudWxsKQ0KICAgIHsNCiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHRoaXMub2JqSGVhZGVycy5hcnJheVBhcmFtZXRlcnMubGVuZ3RoOyBpKyspDQogICAgICAgICAgICB0aGlzLmNoYW5uZWxfLnNldFJlcXVlc3RIZWFkZXIodGhpcy5vYmpIZWFkZXJzLkdldFBhcmFtZXRlck5hbWUoaSksIHRoaXMub2JqSGVhZGVycy5HZXRQYXJhbWV0ZXJWYWx1ZShpKSwgZmFsc2UpOw0KICAgIH0NCiAgICAgICAgDQogICAgdmlzaXRvciA9IHt2YWx1ZSA6IG5ldyBTdHJpbmcoKSwgdmlzaXRIZWFkZXI6IGZ1bmN0aW9uKGEsYikgeyB0aGlzLnZhbHVlID0gdGhpcy52YWx1ZSArIGEgKyAnOiAnICsgYiArICdcclxuJzt9fTsNCiAgICB0aGlzLmNoYW5uZWxfLnZpc2l0UmVxdWVzdEhlYWRlcnModmlzaXRvcik7DQogICAgdGhpcy5YTUxIdHRwUmVxdWVzdC5zdHJSZXF1ZXN0SGVhZGVycyA9IHZpc2l0b3IudmFsdWU7DQoJCQkNCiAgICB0aGlzLmxpZmVUaW1lLnN0b3AoKTsNCiAgICB0aGlzLmRpZSgpOw0KfQ0KDQpjbGFzc1hNTEhUVFBSZXF1ZXN0SG9vay5wcm90b3R5cGUuZGllID0gZnVuY3Rpb24oKQ0Kew0KICAgIHRoaXMub2JzZXJ2ZXJTZXJ2aWNlXy5yZW1vdmVPYnNlcnZlcih0aGlzLCB0aGlzLnRvcGljXyk7IC8vIGF2b2lkIG1lbW9yeSBsZWFrcw0KICAgIGRlbGV0ZSh0aGlzLmNoYW5uZWxfKTsNCiAgICBkZWxldGUodGhpcy5sdW5jaFRpbWVfKTsNCiAgICBkZWxldGUodGhpcy5vYnNlcnZlclNlcnZpY2VfKTsNCn0NCg0KLyoNCiAgICBBIHNjaGVkdWxlciBmb3IgZXhlY3V0aW5nIGEgZnVuY3Rpb24gKGNhbGxiYWNrKSBhZnRlciBhIHNwZWNpZmllZCBhbW91bnQgb2YgdGltZS4NCiAgICBGaXJzdCBwYXJhbWV0ZXI6ICAgIGZ1bmN0aW9uIHZhcmlhYmxlLCBleGVjdXRpbmcgb24gZXZlcnkgYmVhdA0KICAgIFNlY29uZCBwYXJhbWV0ZXI6ICAgdGltZSAoaW4gbXMpIGFmdGVyIHdoaWNoIHRoZSBzdXBwbGllZCBmdW5jdGlvbiBpcyBjYWxsZWQNCiovDQpmdW5jdGlvbiBTY2hlZHVsZXIoY2FsbGJhY2ssIGNhbGxBZnRlcl9NUykNCnsNCiAgICB0aGlzLmNhbGxiYWNrXyA9IGNhbGxiYWNrOw0KDQogICAgLy8gZ2V0IGEgdGltZXINCiAgICB0aGlzLnRpbWVyXyA9IENvbXBvbmVudHMuY2xhc3Nlc1siQG1vemlsbGEub3JnL3RpbWVyOzEiXS5jcmVhdGVJbnN0YW5jZShDb21wb25lbnRzLmludGVyZmFjZXMubnNJVGltZXIpOw0KDQogICAgLy8gd2Ugd2FudCB0byBzdG9wIHRoZSBiZWF0IG9uIHNodXRkb3duDQogICAgdmFyIG9ic2VydmVyU2VydmljZSA9IENvbXBvbmVudHMuY2xhc3Nlc1siQG1vemlsbGEub3JnL29ic2VydmVyLXNlcnZpY2U7MSJdLmdldFNlcnZpY2UoQ29tcG9uZW50cy5pbnRlcmZhY2VzLm5zSU9ic2VydmVyU2VydmljZSk7DQogICAgb2JzZXJ2ZXJTZXJ2aWNlLmFkZE9ic2VydmVyKHRoaXMsICJ4cGNvbS1zaHV0ZG93biIsIGZhbHNlKTsNCg0KICAgIC8vIGluaXRpYWxpemUgdGhlIHRpbWVyIHRvIGZpcmUgYWZ0ZXIgdGhlIGdpdmVuIG1zIGludGVydmFsDQogICAgdGhpcy50aW1lcl8uaW5pdFdpdGhDYWxsYmFjayh0aGlzLCBjYWxsQWZ0ZXJfTVMsIHRoaXMudGltZXJfLlRZUEVfT05FX1NIT1QpOw0KfQ0KDQoNClNjaGVkdWxlci5wcm90b3R5cGUuUXVlcnlJbnRlcmZhY2UgPSBmdW5jdGlvbihpaWQpDQp7DQogICAgaWYgKCAgIGlpZC5lcXVhbHMoQ29tcG9uZW50cy5pbnRlcmZhY2VzLm5zSVN1cHBvcnRzKQ0KICAgICAgICB8fCBpaWQuZXF1YWxzKENvbXBvbmVudHMuaW50ZXJmYWNlcy5uc0lUaW1lckNhbGxiYWNrKQ0KICAgICAgICB8fCBpaWQuZXF1YWxzKENvbXBvbmVudHMuaW50ZXJmYWNlcy5uc0lPYnNlcnZlcikpDQogICAgICAgIHJldHVybiB0aGlzOw0KICAgIHRocm93IENvbXBvbmVudHMucmVzdWx0cy5OU19FUlJPUl9OT19JTlRFUkZBQ0U7DQp9DQoNClNjaGVkdWxlci5wcm90b3R5cGUub2JzZXJ2ZSA9IGZ1bmN0aW9uKGFTdWJqZWN0LCBhVG9waWMsIGFEYXRhKQ0Kew0KICAgIC8vIHN0b3AgdGhlIGJlYXQgb24gc2h1dGRvd24gKHNlZSBodHRwOi8vd2lraS5tb3ppbGxhLm9yZy9YUENPTV9TaHV0ZG93bikNCiAgICBpZiAoYVRvcGljID09ICJ4cGNvbS1zaHV0ZG93biIpDQogICAgICAgIHRoaXMuc3RvcCgpOw0KfQ0KDQpTY2hlZHVsZXIucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbigpDQp7DQogICAgaWYgKHRoaXMudGltZXJfKSB7DQogICAgICAgIC8vIHN0b3AgdGhlIHRpbWViZWF0IGFuZCByZW1vdmUgdGhlIG9ic2VydmVyDQogICAgICAgIHRoaXMudGltZXJfLmNhbmNlbCgpOw0KICAgICAgICB0aGlzLnRpbWVyXyA9IG51bGw7DQogICAgICAgIHRoaXMuY2FsbGJhY2tfID0gbnVsbDsNCiAgICAgICAgdmFyIG9ic2VydmVyU2VydmljZSA9IENvbXBvbmVudHMuY2xhc3Nlc1siQG1vemlsbGEub3JnL29ic2VydmVyLXNlcnZpY2U7MSJdLmdldFNlcnZpY2UoQ29tcG9uZW50cy5pbnRlcmZhY2VzLm5zSU9ic2VydmVyU2VydmljZSk7DQogICAgICAgIG9ic2VydmVyU2VydmljZS5yZW1vdmVPYnNlcnZlcih0aGlzLCAieHBjb20tc2h1dGRvd24iKTsNCiAgICB9DQp9DQoNClNjaGVkdWxlci5wcm90b3R5cGUubm90aWZ5ID0gZnVuY3Rpb24oYVRpbWVyKQ0Kew0KICAgIHRoaXMuY2FsbGJhY2tfKCk7DQogICAgdGhpcy5zdG9wKCk7DQp9')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUF0dGlsYSBHZXJlbmRpDQpQdXJwb3NlOglUaGUgY2xhc3NSZXF1ZXN0Q29sZWN0aW9uLCB0aGlzIGNsYXNzIGltcGxlbWVudHMgdGhlIHJlcXVlc3QgY29sbGVjdGlvbiBmcm9tIHRoZSB0ZXN0ZWQgcGFnZQ0KKi8NCg0KZnVuY3Rpb24gY2xhc3NSZXF1ZXN0Q29sZWN0aW9uKCkNCnsNCgl0aGlzLmFycmF5UmVxdWVzdHMgPSBuZXcgQXJyYXkoKTsNCg0KCXRoaXMuZ2V0UmVxdWVzdFBhcmFtZXRlcldpdGhHaXZlbklkID0gZnVuY3Rpb24oaW50SUQpDQoJew0KCQl2YXIgcmVxdWVzdFBhcmFtID0gbnVsbDsNCgkJZm9yKHZhciBpID0gMDsgaSA8IGFjdW5ldGl4d2Vic2Nhbm5lci5vYmpSZXF1ZXN0Q29sbGVjdGlvbi5hcnJheVJlcXVlc3RzLmxlbmd0aDsgaSsrKQ0KCQl7DQoJCQlyZXF1ZXN0UGFyYW0gPSBhY3VuZXRpeHdlYnNjYW5uZXIub2JqUmVxdWVzdENvbGxlY3Rpb24uYXJyYXlSZXF1ZXN0c1tpXS5nZXRQYXJhbWV0ZXJXaXRoR2l2ZW5JRChpbnRJRCk7DQoJCQlpZiAocmVxdWVzdFBhcmFtICE9IG51bGwpIA0KCQkJCWJyZWFrOw0KCQl9DQoJCXJldHVybihyZXF1ZXN0UGFyYW0pDQoJfQ0KCQ0KCXRoaXMuc2F2ZVJlcXVlc3QgPSBmdW5jdGlvbihvYmpSZXF1ZXN0KQ0KCXsNCgkJaWYoISBhY3VuZXRpeHdlYnNjYW5uZXIub2JqTW96UHJlZnMuZ2V0Qm9vbFByZWYoImJvb2xFeGNsdWRlRXF1aXZhbGVudFJlcXVlc3QiKSkNCgkJew0KCQkJdGhpcy5hcnJheVJlcXVlc3RzLnB1c2gob2JqUmVxdWVzdCk7DQoJCQlyZXR1cm4odHJ1ZSk7DQoJCX0NCgkJDQoJCWZvcih2YXIgaSA9IDAgOyBpIDwgdGhpcy5hcnJheVJlcXVlc3RzLmxlbmd0aCA7IGkrKykNCgkJew0KCQkJaWYgKHRoaXMuYXJyYXlSZXF1ZXN0c1tpXS5jb21wYXJlV2l0aChvYmpSZXF1ZXN0KSA9PSAiZXF1aXZhbGVudCIpDQoJCQl7DQoJCQkJLy90b2RvOiBtYXliZSBJIGNhbiBwdXQgYSBuZXcgb3B0aW9ucyBoZXJlIGluc3RlYWQgY29tcHJlc3NpbmcgcGFyYW1ldGVycw0KCQkJCWlmKGFjdW5ldGl4d2Vic2Nhbm5lci5vYmpNb3pQcmVmcy5nZXRCb29sUHJlZigiYm9vbEVuYWJsZUFsbENvbWJpbmF0aW9uIikpDQoJCQkJew0KCQkJCQlmb3IodmFyIGogPSAwOyBqIDwgb2JqUmVxdWVzdC5hcnJheVBhcmFtZXRlcnMubGVuZ3RoOyBqKyspDQoJCQkJCXsNCgkJCQkJCXZhciBpbmRleCA9IHRoaXMuYXJyYXlSZXF1ZXN0c1tpXS5oYXZlUmVxdWVzdFBhcmFtZXRlcihvYmpSZXF1ZXN0LmFycmF5UGFyYW1ldGVyc1tqXSk7DQoJCQkJCQlpZihpbmRleCA+PSAwKQ0KCQkJCQkJCXRoaXMuYXJyYXlSZXF1ZXN0c1tpXS5hcnJheVBhcmFtZXRlcnNbaW5kZXhdLmNvbXBhY3RQYXJhbWV0ZXJzKG9ialJlcXVlc3QuYXJyYXlQYXJhbWV0ZXJzW2pdKTsNCgkJCQkJfQ0KCQkJCX0NCgkJCQlyZXR1cm4oZmFsc2UpOw0KCQkJfQ0KCQl9DQoJCXRoaXMuYXJyYXlSZXF1ZXN0cy5wdXNoKG9ialJlcXVlc3QpOw0KCQlyZXR1cm4odHJ1ZSk7DQoJfQ0KDQoJdGhpcy5leHRyYWN0UmVxdWVzdENvbGxlY3Rpb25Gcm9tUGFnZSA9IGZ1bmN0aW9uKG9ialBhZ2VEb2N1bWVudCwgb2JqT3JpZ2luYWxQYWdlRG9jdW1lbnQpDQoJew0KCQlsb2dUb0ZpbGUoImNsYXNzUmVxdWVzdENvbGVjdGlvbi9leHRyYWN0UmVxdWVzdENvbGxlY3Rpb25Gcm9tUGFnZSIpOw0KCQkNCgkJaWYgKG9iak9yaWdpbmFsUGFnZURvY3VtZW50ID09IG51bGwpIC8vZmlyc3QgZW50cnkgc28gd2UgaGF2ZSB0byBzYXZlIHRoZSBvcmlnaW5hbCBwYWdlRG9jdW1lbnQNCgkJCW9iak9yaWdpbmFsUGFnZURvY3VtZW50ID0gb2JqUGFnZURvY3VtZW50Ow0KCQkNCgkJdmFyIGZyYW1lcyA9IG9ialBhZ2VEb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiZnJhbWUiKTsNCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBmcmFtZXMubGVuZ3RoOyBpKyspIA0KCQkJdGhpcy5leHRyYWN0UmVxdWVzdENvbGxlY3Rpb25Gcm9tUGFnZShmcmFtZXNbaV0uY29udGVudERvY3VtZW50LCBvYmpPcmlnaW5hbFBhZ2VEb2N1bWVudCk7DQoJCQkNCgkJdmFyIGZyYW1lcyA9IG9ialBhZ2VEb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaWZyYW1lIik7DQoJCWZvciAodmFyIGkgPSAwOyBpIDwgZnJhbWVzLmxlbmd0aDsgaSsrKSANCgkJCXRoaXMuZXh0cmFjdFJlcXVlc3RDb2xsZWN0aW9uRnJvbVBhZ2UoZnJhbWVzW2ldLmNvbnRlbnREb2N1bWVudCwgb2JqT3JpZ2luYWxQYWdlRG9jdW1lbnQpOw0KDQoJCWlmKGFjdW5ldGl4d2Vic2Nhbm5lci5vYmpNb3pQcmVmcy5nZXRCb29sUHJlZigiYm9vbFJlcXVlc3RFeHRyYWN0b3JSdWxlRXh0cmFjdEZvcm1zIikpDQoJCXsNCgkJCXZhciBlbGVtZW50cyA9IG9ialBhZ2VEb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiZm9ybSIpOwkJDQoJCQlmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1lbnRzLmxlbmd0aDsgaSsrKSANCgkJCXsNCgkJCQl2YXIgcmVxdWVzdCA9IG5ldyBjbGFzc1JlcXVlc3RDb250YWluZXIob2JqUGFnZURvY3VtZW50LCBvYmpPcmlnaW5hbFBhZ2VEb2N1bWVudCk7DQoJCQkJcmVxdWVzdC5mZWVkQ29udGFpbmVyRnJvbUZvcm0oZWxlbWVudHNbaV0pOw0KCQkJCWlmIChyZXF1ZXN0LmFycmF5UGFyYW1ldGVycy5sZW5ndGggPiAwKQ0KCQkJCQl0aGlzLnNhdmVSZXF1ZXN0KHJlcXVlc3QpOw0KCQkJfQ0KCQl9DQoNCgkJaWYoYWN1bmV0aXh3ZWJzY2FubmVyLm9iak1velByZWZzLmdldEJvb2xQcmVmKCJib29sUmVxdWVzdEV4dHJhY3RvclJ1bGVFeHRyYWN0QW5jaG9ycyIpKQ0KCQl7DQoJCQl2YXIgZWxlbWVudHMgPSBvYmpQYWdlRG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKTsNCgkJCWZvciAodmFyIGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIA0KCQkJew0KCQkJCXZhciByZXF1ZXN0ID0gbmV3IGNsYXNzUmVxdWVzdENvbnRhaW5lcihvYmpQYWdlRG9jdW1lbnQsIG9iak9yaWdpbmFsUGFnZURvY3VtZW50KTsNCgkJCQlyZXF1ZXN0LmZlZWRDb250YWluZXJGcm9tRWxlbWVudFdpdGhSZWZlcmVuY2UoZWxlbWVudHNbaV0sImhyZWYiLCJhIik7DQoJCQkJaWYgKHJlcXVlc3QuYXJyYXlQYXJhbWV0ZXJzLmxlbmd0aCA+IDApDQoJCQkJCXRoaXMuc2F2ZVJlcXVlc3QocmVxdWVzdCk7DQoJCQl9DQoJCX0NCgkJDQoJCWlmKGFjdW5ldGl4d2Vic2Nhbm5lci5vYmpNb3pQcmVmcy5nZXRCb29sUHJlZigiYm9vbFJlcXVlc3RFeHRyYWN0b3JSdWxlRXh0cmFjdEltYWdlcyIpKQ0KCQl7DQoJCQl2YXIgZWxlbWVudHMgPSBvYmpQYWdlRG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImltZyIpOw0KCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKykgDQoJCQl7DQoJCQkJdmFyIHJlcXVlc3QgPSBuZXcgY2xhc3NSZXF1ZXN0Q29udGFpbmVyKG9ialBhZ2VEb2N1bWVudCwgb2JqT3JpZ2luYWxQYWdlRG9jdW1lbnQpOw0KCQkJCXJlcXVlc3QuZmVlZENvbnRhaW5lckZyb21FbGVtZW50V2l0aFJlZmVyZW5jZShlbGVtZW50c1tpXSwic3JjIiwiaW1nIik7DQoJCQkJaWYgKHJlcXVlc3QuYXJyYXlQYXJhbWV0ZXJzLmxlbmd0aCA+IDApDQoJCQkJCXRoaXMuc2F2ZVJlcXVlc3QocmVxdWVzdCk7DQoJCQl9DQoJCX0NCg0KCQlpZihhY3VuZXRpeHdlYnNjYW5uZXIub2JqTW96UHJlZnMuZ2V0Qm9vbFByZWYoImJvb2xSZXF1ZXN0RXh0cmFjdG9yUnVsZUV4dHJhY3RTY3JpcHRzIikpDQoJCXsNCgkJCXZhciBlbGVtZW50cyA9IG9ialBhZ2VEb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0Iik7DQoJCQlmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1lbnRzLmxlbmd0aDsgaSsrKSANCgkJCXsNCgkJCQl2YXIgcmVxdWVzdCA9IG5ldyBjbGFzc1JlcXVlc3RDb250YWluZXIob2JqUGFnZURvY3VtZW50LCBvYmpPcmlnaW5hbFBhZ2VEb2N1bWVudCk7DQoJCQkJcmVxdWVzdC5mZWVkQ29udGFpbmVyRnJvbUVsZW1lbnRXaXRoUmVmZXJlbmNlKGVsZW1lbnRzW2ldLCJzcmMiLCJzY3JpcHQiKTsNCgkJCQlpZiAocmVxdWVzdC5hcnJheVBhcmFtZXRlcnMubGVuZ3RoID4gMCkNCgkJCQkJdGhpcy5zYXZlUmVxdWVzdChyZXF1ZXN0KTsNCgkJCX0NCgkJfQ0KCX0JDQoJDQoJdGhpcy5kZWxldGVDaGlsZE5vZGVzID0gZnVuY3Rpb24oY29udGFpbmVyKQ0KCXsNCgkJdmFyIHRtcEVsZW0sIGVsZW0gPSBjb250YWluZXIuZmlyc3RDaGlsZDsNCgkJd2hpbGUoZWxlbSkNCgkJew0KCQkJdG1wRWxlbSA9IGVsZW07DQoJCQllbGVtID0gZWxlbS5uZXh0U2libGluZzsNCgkJCWlmICh0bXBFbGVtLm5vZGVOYW1lID09ICJncm91cGJveCIpDQoJCQkJY29udGFpbmVyLnJlbW92ZUNoaWxkKHRtcEVsZW0pOw0KCQl9DQoJfQ0KDQoJdGhpcy5nZXRSZXF1ZXN0V2l0aEdpdmVuSUQgPSBmdW5jdGlvbihzdHJJZCkNCgl7DQoJCWZvciggaSA9IDA7IGkgPCB0aGlzLmFycmF5UmVxdWVzdHMubGVuZ3RoOyBpKyspDQoJCQlpZih0aGlzLmFycmF5UmVxdWVzdHNbaV0uc3RySWQgPT0gc3RySWQpDQoJCQkJcmV0dXJuKHRoaXMuYXJyYXlSZXF1ZXN0c1tpXSk7DQoJCXJldHVybihudWxsKTsNCgl9DQoJDQoJdGhpcy5yZW5kZXJSZXF1ZXN0ID0gZnVuY3Rpb24oY29udGFpbmVyLGl0ZW1zKQ0KCXsNCgkJaXRlbXMgPSAoaXRlbXMgPT0gbnVsbCkgPyB0aGlzLmFycmF5UmVxdWVzdHMgOiBpdGVtczsNCgkJdmFyIGksIHJldHZhbDsNCgkJdGhpcy5kZWxldGVDaGlsZE5vZGVzKGNvbnRhaW5lcik7DQoJCXZhciByZXF1ZXN0Qm94ZXMgPSBjb250YWluZXIuZ2V0RWxlbWVudEJ5DQoJCWZvcihpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKQ0KCQl7DQoJCQlyZXR2YWwgPSBpdGVtc1tpXS5yZW5kZXIoKTsNCgkJCWlmIChyZXR2YWwgIT0gIiIpDQoJCQkJYWRkWFVMRWxlbWVudHNDaGlsZHNGcm9tU3RyaW5nKGNvbnRhaW5lcixyZXR2YWwpOw0KCQl9DQoJfQ0KfQ==')); ]]></script>
<script><![CDATA[ eval(atob('')); ]]></script>
<script><![CDATA[ eval(atob('')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUF0dGlsYSBHZXJlbmRpDQpQdXJwb3NlOglUaGUgQ2xhc3NUZXN0UmVxdWVzdCwgdGhlIGJhc2Ugb2YgYWxsIHBhcmFtZXRlciBtYW5uaXB1bGF0aW9uIHRlc3QNCiovDQoNCmZ1bmN0aW9uIENsYXNzVGVzdFJlcXVlc3QoKQ0Kew0KCXRoaXMuc3RyUmVxdWVzdFVSTAkJCQk9ICIiOw0KCXRoaXMuc3RyUmVxdWVzdE1ldGhvZAkJCT0gIiINCgl0aGlzLnN0clVzZXJuYW1lCQkJCT0gIiI7DQoJdGhpcy5zdHJQYXNzd29yZAkJCQk9ICIiOw0KCXRoaXMuYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llCT0gZmFsc2U7DQoJdGhpcy5ib29sRGVsZXRlT3JpZ2luYWxIZWFkZXJzCT0gZmFsc2U7DQoJdGhpcy5pbnRSZWRpcmVjdGlvbkxpbWl0CQk9IDIwOw0KCQ0KCXRoaXMuYXJyYXlBY2NlcHRlZENvbnRlbnRUeXBlcwk9IG5ldyBBcnJheSgpOw0KDQoJdGhpcy5vYmpHZXRQYXJhbXMJCQkJPSBuZXcgY2xhc3NQYXJhbWV0ZXJMaXN0KCIiLCImIik7DQoJdGhpcy5vYmpQb3N0UGFyYW1zCQkJCT0gbmV3IGNsYXNzUGFyYW1ldGVyTGlzdCgiIiwiJiIpOw0KCXRoaXMub2JqQ29va2llUGFyYW1zCQkJPSBuZXcgY2xhc3NQYXJhbWV0ZXJMaXN0KCIiLCI7Iik7DQoJdGhpcy5vYmpIZWFkZXJzCQkJCQk9IG5ldyBjbGFzc1BhcmFtZXRlckxpc3QoIiIsIlxyXG4iKTsNCgkNCgl0aGlzLmJvb2xBc2luY3JvblJlcXVlc3RBYm9ydGVkID0gMDsNCgl0aGlzLmJvb2xIZWFkZXJzUmVjb3JkZWQJCT0gZmFsc2U7DQoJdGhpcy5vYmpDYWxsZXJDbGFzcyAJCQk9IG51bGw7DQoJdGhpcy5vYmpIVFRQUmVxIAkJCQk9IG51bGw7DQoJDQoJdGhpcy5pbnRSZXRyeU51bWJlcgkJCQk9IDA7DQoJdGhpcy5ib29sRW5hYmxlUmV0cnkJCQk9IHRydWU7DQoJDQoJdGhpcy50b1N0cmluZwkJCQkJPSB0b1N0cmluZzsNCgl0aGlzLmNyZWF0ZUNvcHkJCQkJCT0gY3JlYXRlQ29weTsNCgl0aGlzLmRvQXNpbmNyb25SZXF1ZXN0CQkJPSBkb0FzaW5jcm9uUmVxdWVzdDsNCgkNCglmdW5jdGlvbiBhYm9ydEN1cnJlbnRSZXF1ZXN0KCkNCgl7DQoJCXRoaXMuYm9vbEFzaW5jcm9uUmVxdWVzdEFib3J0ZWQgPSAxOw0KCQlhY3VuZXRpeHdlYnNjYW5uZXIuZ2VuZXJhbFRpbWVyLmNhbmNlbCgpOw0KCQl0aGlzLm9iakhUVFBSZXEuYWJvcnQoKTsNCgl9DQoJDQoJLyoNCglpbnRFcnJvckNvZGUgPT0gLTEgYWJvcnRlZCBieSBlcnJvcg0KCWludEVycm9yQ29kZSA9PSAxIGFib3J0ZWQgYnkgdXNlcg0KCWludEVycm9yQ29kZSA9PSAyIGFib3J0ZWQgYnkgdGltZW91dA0KCWludEVycm9yQ29kZSA9PSAzIGFib3J0ZWQgYnkgZXJyb3IgKG51IHByZWEgY3JlZCBjYSBpZXNlIHBlIGFpY2kgdnJlb2RhdGEpDQoJaW50RXJyb3JDb2RlID09IDQgYWJvcnRlZCBiZWNhdXNlIGxlbmd0aA0KCWludEVycm9yQ29kZSA9PSA1IGFib3J0ZWQgYmVjYXVzZSBjb250ZW50IHR5cGUNCgkqLwkNCgkNCglmdW5jdGlvbiBkb0FzaW5jcm9uUmVxdWVzdChvYmpDYWxsZXJDbGFzcykNCgl7DQoJCXRoaXMuYm9vbEFzaW5jcm9uUmVxdWVzdEFib3J0ZWQgPSAwOw0KCQl0aGlzLmJvb2xIZWFkZXJzUmVjb3JkZWQJCT0gZmFsc2U7DQoJCQ0KCQlpZihvYmpDYWxsZXJDbGFzcyAhPSBudWxsKQ0KCQl7DQoJCQl0aGlzLm9iakNhbGxlckNsYXNzID0gb2JqQ2FsbGVyQ2xhc3M7DQoJCX0NCgkJDQoJCXZhciBzdHJSZXF1ZXN0VVJMIAk9IHRoaXMuc3RyUmVxdWVzdFVSTDsNCgkJdGhpcy5vYmpIVFRQUmVxCQk9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOw0KCQkNCgkJDQoJCWZ1bmN0aW9uIG9ucmVhZHlzdGF0ZWNoYW5nZSgpDQoJCXsNCgkJCQkJCQ0KCQkJLy90aGlzLnBhcmVudC5vYmpIVFRQUmVxLmFib3J0KCk7IHdpbGwgcmV0cmlnZ2VyIHRoaXMgZnVuY3Rpb24sIG5leHQgdGltZSB3ZSB3aWxsIGp1c3QgZXhpdA0KCQkJaWYodGhpcy5wYXJlbnQuYm9vbEFzaW5jcm9uUmVxdWVzdEFib3J0ZWQgPT0gMSkNCgkJCQlyZXR1cm47DQoJCQkNCgkJCWlmKHRoaXMucGFyZW50Lm9iakNhbGxlckNsYXNzLm9iakNhbGxlckNsYXNzLmJvb2xUZXN0ZXJNYXJrZWRUb0RpZSkNCgkJCS8vaWYoYWN1bmV0aXh3ZWJzY2FubmVyLm9ialNjYW5uaW5nUHJvY2Vzc1N0YXR1cy5ib29sQWJvcnRTY2FuKQ0KCQkJew0KCQkJCWxvZ1RvRmlsZSgiL2RvQXNpbmNyb25SZXF1ZXN0L29ucmVhZHlzdGF0ZWNoYW5nZSA9PiB1c2VyQWJvcnRSZXF1ZXN0IGRldGVjdGVkIChib29sQWJvcnRTY2FuID0gdHJ1ZSkiKTsNCgkJCQl0aGlzLnBhcmVudC5ib29sQXNpbmNyb25SZXF1ZXN0QWJvcnRlZCA9IDE7DQoJCQkJYWN1bmV0aXh3ZWJzY2FubmVyLmdlbmVyYWxUaW1lci5jYW5jZWwoKTsNCgkJCQl0aGlzLnBhcmVudC5vYmpIVFRQUmVxLmFib3J0KCk7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJDQoJCQlpZiAodGhpcy5wYXJlbnQuYm9vbEFzaW5jcm9uUmVxdWVzdEFib3J0ZWQgPiAwKQ0KCQkJew0KCQkJCWxvZ1RvRmlsZSgiL2RvQXNpbmNyb25SZXF1ZXN0L29ucmVhZHlzdGF0ZWNoYW5nZSA9PiBhYm9ydGVkOiAiICsgdGhpcy5wYXJlbnQuYm9vbEFzaW5jcm9uUmVxdWVzdEFib3J0ZWQpOw0KCQkJCXN3aXRjaCh0aGlzLnBhcmVudC5ib29sQXNpbmNyb25SZXF1ZXN0QWJvcnRlZCkNCgkJCQl7DQoJCQkJCWNhc2UgMTogLy8gYWJvcnRlZCBieSB1c2VyDQoJCQkJCQl0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LmludEVycm9yQ29kZQkJCT0gdGhpcy5wYXJlbnQuYm9vbEFzaW5jcm9uUmVxdWVzdEFib3J0ZWQ7DQoJCQkJCQl0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LnN0ckVycm9yVGV4dAkJCT0gIkFib3J0ZWQiOw0KCQkJCQkJYnJlYWs7DQoJCQkJCWNhc2UgMzogLy8gdGhpcyBjYXNlIChlcnJvciBnZW5lcmF0ZWQgaW4gdGhlIHJlcXVlc3QgdHJ5IGNhdGNoKSBpcyBhbHJlYWR5IGhhbmRsZWQNCgkJCQkJCXJldHVybjsNCgkJCQkJY2FzZSAyOiAvLyBhYm9ydGVkIGJ5IHRpbWVvdXQNCgkJCQkJCWlmKCh0aGlzLnBhcmVudC5ib29sRW5hYmxlUmV0cnkpICYmICh0aGlzLnBhcmVudC5pbnRSZXRyeU51bWJlciA8IGFjdW5ldGl4d2Vic2Nhbm5lci5vYmpNb3pQcmVmcy5nZXRJbnRQcmVmKCJpbnRNYXhpbXVtUmV0cnkiKSkpDQoJCQkJCQl7DQoJCQkJCQkJdGhpcy5wYXJlbnQuaW50UmV0cnlOdW1iZXIgKys7DQoJCQkJCQkJbG9nVG9GaWxlKCIvZG9Bc2luY3JvblJlcXVlc3Qvb25yZWFkeXN0YXRlY2hhbmdlID0+IFJldHJpaW5nIGJ5IHRpbWVvdXQ6ICIgKyB0aGlzLnBhcmVudC5pbnRSZXRyeU51bWJlcik7DQoJCQkJCQkJdGhpcy5wYXJlbnQuZG9Bc2luY3JvblJlcXVlc3QoKTsNCgkJCQkJCQlyZXR1cm47CQ0KCQkJCQkJfQ0KCQkJCQkJdGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3Mub2JqVGFza1Jlc3VsdC5pbnRFcnJvckNvZGUJCQk9IC0xOw0KCQkJCQkJdGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3Mub2JqVGFza1Jlc3VsdC5zdHJFcnJvclRleHQJCQk9ICJUaW1lb3V0ICgiICsgYWN1bmV0aXh3ZWJzY2FubmVyLm9iak1velByZWZzLmdldEludFByZWYoImludFJlcXVlc3RUaW1lT3V0IikgKyAiKSI7DQoJCQkJCQlhY3VuZXRpeHdlYnNjYW5uZXIub2JqU2Nhbm5pbmdQcm9jZXNzU3RhdHVzLm9uZU1vcmVFcnJvckZvdW5kKCk7DQoJCQkJCQlicmVhazsNCgkJCQkJZGVmYXVsdDogLy9hYm9ydGVkIGJ5IGZpbHRlcnMNCgkJCQkJCWJyZWFrOw0KCQkJCX0NCgkJCQlpZiAodGhpcy5wYXJlbnQuYm9vbEFzaW5jcm9uUmVxdWVzdEFib3J0ZWQgPT0gMykgLy8gdGhpcyBjYXNlIChlcnJvciBnZW5lcmF0ZWQgaW4gcmVxdWVzdCB0cnkgY2F0Y2gpIGlzIGFscmVhZHkgaGFuZGxlZA0KCQkJCQlyZXR1cm47DQoJCQkJDQoJCQkJLy9FWElUUE9JTlQNCgkJCQlhY3VuZXRpeHdlYnNjYW5uZXIub2JqU2Nhbm5pbmdQcm9jZXNzU3RhdHVzLm9uZU1vcmVSZXF1ZXN0SGFuZGxlZCgpIDsNCgkJCQlhY3VuZXRpeHdlYnNjYW5uZXIuZ2VuZXJhbFRpbWVyLmluaXRXaXRoQ2FsbGJhY2sodGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3MuZm5jVGFza0NhbGxCYWNrLCBhY3VuZXRpeHdlYnNjYW5uZXIub2JqTW96UHJlZnMuZ2V0SW50UHJlZigiaW50U3RhdHVzTWFjaGluZVJldHJpZ2dlclRpbWUiKSAsIENvbXBvbmVudHMuaW50ZXJmYWNlcy5uc0lUaW1lci5UWVBFX09ORV9TSE9UKTsNCgkJCQlyZXR1cm47CQkJCQ0KCQkJfQ0KCQkJZWxzZQ0KCQkJew0KCQkJCWlmKHRoaXMucGFyZW50Lm9iakhUVFBSZXEucmVhZHlTdGF0ZSA9PSAxKQ0KCQkJCXsNCgkJCQkJLy9sb2dUb0ZpbGUoIj0+IGRvQXNpbmNyb25SZXF1ZXN0ID0+IG9ucmVhZHlzdGF0ZWNoYW5nZSA9PiByZWFkeVN0YXRlID0gMSIpOw0KCQkJCX0NCgkJCQllbHNlDQoJCQkJaWYodGhpcy5wYXJlbnQub2JqSFRUUFJlcS5yZWFkeVN0YXRlID09IDIpDQoJCQkJew0KCQkJCQkvL2hlcmUgd2UgaGF2ZSB0aGUgcmVxdWVzdCBoZWFkZXIgZm9ybWVkIA0KCQkJCQlsb2dUb0ZpbGUoIj0+IGRvQXNpbmNyb25SZXF1ZXN0ID0+IG9ucmVhZHlzdGF0ZWNoYW5nZSA9PiByZWFkeVN0YXRlID0gMiIpOw0KCQkJCQl2YXIgc3RyUmVxdWVzdEhlYWRlciA9IHRoaXMucGFyZW50LnN0clJlcXVlc3RNZXRob2QgKyAnICc7DQoJCQkJCXN0clJlcXVlc3RIZWFkZXIgPSBzdHJSZXF1ZXN0SGVhZGVyICsgdGhpcy5wYXJlbnQuc3RyUmVxdWVzdFVSTDsNCgkJCQkJaWYoIHRoaXMucGFyZW50Lm9iakdldFBhcmFtcy50b1N0cmluZygpICE9ICIiKQ0KCQkJCQkJc3RyUmVxdWVzdEhlYWRlciA9IHN0clJlcXVlc3RIZWFkZXIgKyAiPyIgKyB0aGlzLnBhcmVudC5vYmpHZXRQYXJhbXMudG9TdHJpbmcoKTsNCgkJCQkJc3RyUmVxdWVzdEhlYWRlciA9IHN0clJlcXVlc3RIZWFkZXIgKyAnIEhUVFAvMS4xXHJcbicgKyB0aGlzLnBhcmVudC5vYmpIVFRQUmVxLnN0clJlcXVlc3RIZWFkZXJzICsgJ1xyXG4nOw0KCQkJCQlpZih0aGlzLnBhcmVudC5zdHJSZXF1ZXN0TWV0aG9kID09ICdQT1NUJykNCgkJCQkJew0KCQkJCQkJc3RyUmVxdWVzdEhlYWRlciA9IHN0clJlcXVlc3RIZWFkZXIgKyB0aGlzLnBhcmVudC5vYmpQb3N0UGFyYW1zLnRvU3RyaW5nKCk7DQoJCQkJCX0NCgkJCQkJdGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3Mub2JqVGFza1Jlc3VsdC5zdHJSZXF1ZXN0SGVhZGVyCT0gc3RyUmVxdWVzdEhlYWRlcjsNCgkJCQl9DQoJCQkJZWxzZQ0KCQkJCWlmKHRoaXMucGFyZW50Lm9iakhUVFBSZXEucmVhZHlTdGF0ZSA9PSAzKQ0KCQkJCXsNCgkJCQkJLy8gaGVyZSB3ZSBoYXZlIHJlc3BvbnNlLCBhbmQgdGhlIHJlc3BvbnNlIGhlYWRlciBmb3JtZWQNCgkJCQkJbG9nVG9GaWxlKCI9PiBkb0FzaW5jcm9uUmVxdWVzdCA9PiBvbnJlYWR5c3RhdGVjaGFuZ2UgPT4gcmVhZHlTdGF0ZSA9IDMiKTsJCQ0KCQkJCQl2YXIgc3RyUmVzcG9uc2VIZWFkZXIgPSAnSFRUUC8xLjEgJyArIHRoaXMucGFyZW50Lm9iakhUVFBSZXEuc3RhdHVzICsgJyAnICsgdGhpcy5wYXJlbnQub2JqSFRUUFJlcS5zdGF0dXNUZXh0ICsgJ1xyXG4nICsgdGhpcy5wYXJlbnQub2JqSFRUUFJlcS5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKTsNCgkJCQkJdGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3Mub2JqVGFza1Jlc3VsdC5zdHJSZXNwb25zZUhlYWRlcgk9IHN0clJlc3BvbnNlSGVhZGVyOw0KCQkJCQl0aGlzLnBhcmVudC5ib29sSGVhZGVyc1JlY29yZGVkID0gdHJ1ZTsNCgkJCQkJDQoJCQkJCXZhciBsZW5ndGggPSB0aGlzLnBhcmVudC5vYmpIVFRQUmVxLmdldFJlc3BvbnNlSGVhZGVyKCJDb250ZW50LUxlbmd0aCIpOw0KCQkJCQlpZiggbGVuZ3RoID4gYWN1bmV0aXh3ZWJzY2FubmVyLm9iak1velByZWZzLmdldEludFByZWYoImludE1heGltdW1SZXNwb25zZUFsb3dlZCIpKQ0KCQkJCQl7DQoJCQkJCQlsb2dUb0ZpbGUoIi9kb0FzaW5jcm9uUmVxdWVzdC9vbnJlYWR5c3RhdGVjaGFuZ2UgPT4gQWJvcnRpbmc6IHJlc3BvbnNlIHRvbyBiaWciKTsNCgkJCQkJCXRoaXMucGFyZW50Lm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQuc3RyUmVzcG9uc2VUZXh0ID0gIltSRVNQT05TRSBERUxFVEVEIChUb28gQmlnKV0iDQoJCQkJCQl0aGlzLnBhcmVudC5ib29sQXNpbmNyb25SZXF1ZXN0QWJvcnRlZCA9IDQ7DQoJCQkJCQlhY3VuZXRpeHdlYnNjYW5uZXIuZ2VuZXJhbFRpbWVyLmNhbmNlbCgpOw0KCQkJCQkJdGhpcy5wYXJlbnQub2JqSFRUUFJlcS5hYm9ydCgpOw0KCQkJCQl9DQoJCQkJCQ0KCQkJCQl2YXIgY29udGVudFR5cGUgPSB0aGlzLnBhcmVudC5vYmpIVFRQUmVxLmdldFJlc3BvbnNlSGVhZGVyKCJDb250ZW50LVR5cGUiKTsNCgkJCQkJdmFyIGJvb2xGb3VuZCA9IGZhbHNlOw0KCQkJCQkNCgkJCQkJaWYgKCh0aGlzLnBhcmVudC5hcnJheUFjY2VwdGVkQ29udGVudFR5cGVzID09IG51bGwpIHx8ICh0aGlzLnBhcmVudC5hcnJheUFjY2VwdGVkQ29udGVudFR5cGVzLmxlbmd0aCA9PSAwKSkNCgkJCQkJCWJvb2xGb3VuZCA9IHRydWU7DQoJCQkJCWVsc2UNCgkJCQkJew0KCQkJCQkJZm9yKHZhciBpID0gMDsgaSA8IHRoaXMucGFyZW50LmFycmF5QWNjZXB0ZWRDb250ZW50VHlwZXMubGVuZ3RoOyBpKyspDQoJCQkJCQl7DQoJCQkJCQkJaWYoY29udGVudFR5cGUuc2VhcmNoKHRoaXMucGFyZW50LmFycmF5QWNjZXB0ZWRDb250ZW50VHlwZXNbaV0pICE9IC0xKQ0KCQkJCQkJCXsNCgkJCQkJCQkJYm9vbEZvdW5kID0gdHJ1ZTsNCgkJCQkJCQkJYnJlYWs7DQoJCQkJCQkJfQ0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCWlmKCFib29sRm91bmQpDQoJCQkJCXsNCgkJCQkJCWxvZ1RvRmlsZSgiL2RvQXNpbmNyb25SZXF1ZXN0L29ucmVhZHlzdGF0ZWNoYW5nZSA9PiBBYm9ydGluZzogY29udGVudCB0eXBlIG5vdCBhbG93ZWQgKCIgKyBjb250ZW50VHlwZSArICIpIik7DQoJCQkJCQl0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LnN0clJlc3BvbnNlVGV4dCA9ICJbUkVTUE9OU0UgREVMRVRFRCAoQ29udGVudC1UeXBlIE5vdCBBbG93ZWQpXSINCgkJCQkJCXRoaXMucGFyZW50LmJvb2xBc2luY3JvblJlcXVlc3RBYm9ydGVkID0gNTsNCgkJCQkJCWFjdW5ldGl4d2Vic2Nhbm5lci5nZW5lcmFsVGltZXIuY2FuY2VsKCk7DQoJCQkJCQl0aGlzLnBhcmVudC5vYmpIVFRQUmVxLmFib3J0KCk7DQoJCQkJCX0NCgkJCQl9DQoJCQkJZWxzZQ0KCQkJCWlmKHRoaXMucGFyZW50Lm9iakhUVFBSZXEucmVhZHlTdGF0ZSA9PSA0KQ0KCQkJCXsNCgkJCQkJYWN1bmV0aXh3ZWJzY2FubmVyLmdlbmVyYWxUaW1lci5jYW5jZWwoKTsNCgkJCQkJDQoJCQkJCWxvZ1RvRmlsZSgiZG9Bc2luY3JvblJlcXVlc3Qvb25yZWFkeXN0YXRlY2hhbmdlID0+IHJlYWR5U3RhdGUgPSBPSyAoNCkiKTsNCgkJCQkJCQkJDQoJCQkJCXRyeSAvL3dlIG5lZWQgdG8gaGFuZGxlIHRoaXMgd2F5IGJlY2F1c2UgZmlyZWZveCB3ZWlyZCBiZWhhdmlvciB0byBpbiBjYXNlIG9mIGVycm9yIGZpcnN0IGNhbGwgb25yZWFkeVN0YXRlIHdpdGggcmVhZHlTdGF0ZSA9IDQgYWZ0ZXIgdGhhdCBvbmVycm9yLi4uLg0KCQkJCQl7DQoJCQkJCQlpZiAoIXRoaXMucGFyZW50LmJvb2xIZWFkZXJzUmVjb3JkZWQpDQoJCQkJCQl7DQoJCQkJCQkJdmFyIHN0clJlc3BvbnNlSGVhZGVyID0gJ0hUVFAvMS4xICcgKyB0aGlzLnBhcmVudC5vYmpIVFRQUmVxLnN0YXR1cyArICcgJyArIHRoaXMucGFyZW50Lm9iakhUVFBSZXEuc3RhdHVzVGV4dCArICdcclxuJyArIHRoaXMucGFyZW50Lm9iakhUVFBSZXEuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCk7DQoJCQkJCQkJdGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3Mub2JqVGFza1Jlc3VsdC5zdHJSZXNwb25zZUhlYWRlcgk9IHN0clJlc3BvbnNlSGVhZGVyOw0KCQkJCQkJfQ0KCQkJCQkJDQoJCQkJCQl0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LmludEVycm9yQ29kZQkJPSAwOw0KCQkJCQkJdGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3Mub2JqVGFza1Jlc3VsdC5zdHJFcnJvclRleHQJCT0gIiI7DQoJCQkJCQl0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LmludFJlcG9uc2VTdGF0dXMJPSB0aGlzLnBhcmVudC5vYmpIVFRQUmVxLnN0YXR1czsNCgkJCQkJCXRoaXMucGFyZW50Lm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQuc3RyUmVzcG9uc2VUZXh0CT0gdGhpcy5wYXJlbnQub2JqSFRUUFJlcS5yZXNwb25zZVRleHQ7CQkJCQkJDQoJCQkJCX0NCgkJCQkJY2F0Y2goZSkNCgkJCQkJew0KCQkJCQkJaWYoKHRoaXMucGFyZW50LmJvb2xFbmFibGVSZXRyeSkgJiYgKHRoaXMucGFyZW50LmludFJldHJ5TnVtYmVyIDwgYWN1bmV0aXh3ZWJzY2FubmVyLm9iak1velByZWZzLmdldEludFByZWYoImludE1heGltdW1SZXRyeSIpKSkNCgkJCQkJCXsNCgkJCQkJCQl0aGlzLnBhcmVudC5pbnRSZXRyeU51bWJlciArKzsNCgkJCQkJCQlsb2dUb0ZpbGUoIi9kb0FzaW5jcm9uUmVxdWVzdC9vbnJlYWR5c3RhdGVjaGFuZ2UgPT4gUmV0cnlpbmcgYnkgdGltZW91dDogIiArIHRoaXMucGFyZW50LmludFJldHJ5TnVtYmVyKTsNCgkJCQkJCQl0aGlzLnBhcmVudC5kb0FzaW5jcm9uUmVxdWVzdCgpOw0KCQkJCQkJCXJldHVybjsJDQoJCQkJCQl9DQoJCQkJCQl0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LmludEVycm9yQ29kZQkJPSAtMTsNCgkJCQkJCXRoaXMucGFyZW50Lm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQuc3RyRXJyb3JUZXh0CQk9IGU7DQoJCQkJCQkNCgkJCQkJCWFjdW5ldGl4d2Vic2Nhbm5lci5vYmpTY2FubmluZ1Byb2Nlc3NTdGF0dXMub25lTW9yZUVycm9yRm91bmQoKTsNCgkJCQkJCQ0KCQkJCQkJbG9nVG9GaWxlKCI9PiBkb0FzaW5jcm9uUmVxdWVzdCA9PiBvbnJlYWR5c3RhdGVjaGFuZ2UgPT4gY29ubmVjdGlvbiBlcnJvciBvciAiICsgZSk7DQoJCQkJCX0NCgkJCQkJCQkJCQkNCgkJCQkJLy9FWElUUE9JTlQNCgkJCQkJYWN1bmV0aXh3ZWJzY2FubmVyLm9ialNjYW5uaW5nUHJvY2Vzc1N0YXR1cy5vbmVNb3JlUmVxdWVzdEhhbmRsZWQoKSA7DQoJCQkJCWFjdW5ldGl4d2Vic2Nhbm5lci5nZW5lcmFsVGltZXIuaW5pdFdpdGhDYWxsYmFjayh0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5mbmNUYXNrQ2FsbEJhY2ssIGFjdW5ldGl4d2Vic2Nhbm5lci5vYmpNb3pQcmVmcy5nZXRJbnRQcmVmKCJpbnRTdGF0dXNNYWNoaW5lUmV0cmlnZ2VyVGltZSIpICwgQ29tcG9uZW50cy5pbnRlcmZhY2VzLm5zSVRpbWVyLlRZUEVfT05FX1NIT1QpOw0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJCQ0KCQl2YXIgdGltZW91dENhbGxCYWNrID0NCgkJew0KCQkJbm90aWZ5OiBmdW5jdGlvbih0aW1lcikNCgkJCXsNCgkJCQlsb2dUb0ZpbGUoIi9kb0FzaW5jcm9uUmVxdWVzdC90aW1lb3V0Q2FsbEJhY2siKTsNCgkJCQl0aGlzLnBhcmVudC5ib29sQXNpbmNyb25SZXF1ZXN0QWJvcnRlZCA9IDI7DQoJCQkJYWN1bmV0aXh3ZWJzY2FubmVyLmdlbmVyYWxUaW1lci5jYW5jZWwoKTsNCgkJCQl0aGlzLnBhcmVudC5vYmpIVFRQUmVxLmFib3J0KCk7DQoJCQl9DQoJCX0NCg0KCQlpZiggdGhpcy5vYmpHZXRQYXJhbXMudG9TdHJpbmcoKSAhPSAiIikNCgkJCXN0clJlcXVlc3RVUkwgPSBzdHJSZXF1ZXN0VVJMICsgIj8iICsgdGhpcy5vYmpHZXRQYXJhbXMudG9TdHJpbmcoKTsNCgkJCQ0KCQl0aGlzLm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQuaW50UmVwb25zZVN0YXR1cwkJPSAiIjsNCgkJdGhpcy5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LnN0clJlc3BvbnNlVGV4dAkJPSAiIjsNCgkJdGhpcy5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LnN0clJlc3BvbnNlSGVhZGVyCQk9ICIiOw0KCQl0aGlzLm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQuc3RyUmVxdWVzdEhlYWRlcgkJPSAiIjsNCgkJdGhpcy5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LnN0clJlcXVlc3RVUkwJCQk9IHRoaXMuc3RyUmVxdWVzdFVSTDsNCgkJCQ0KCQl0cnkNCgkJewkNCgkJCXRoaXMub2JqSFRUUFJlcS5vcGVuKHRoaXMuc3RyUmVxdWVzdE1ldGhvZCwgc3RyUmVxdWVzdFVSTCwgdHJ1ZSwgdGhpcy5zdHJVc2VybmFtZSwgdGhpcy5zdHJQYXNzd29yZCk7ICAgICAgICAgICAgDQoJCQluZXcgY2xhc3NYTUxIVFRQUmVxdWVzdEhvb2sodGhpcy5vYmpIVFRQUmVxLCB0aGlzLm9iakNvb2tpZVBhcmFtcywgdGhpcy5vYmpIZWFkZXJzLCB0aGlzLmludFJlZGlyZWN0aW9uTGltaXQsIHRoaXMuYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llLCB0aGlzLmJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnMpOw0KCQkJCQ0KCQkJb25yZWFkeXN0YXRlY2hhbmdlLnBhcmVudCAJPSB0aGlzOw0KCQkJLy8gZm9yIHNvbWUgcmVhc29uIGluIHRoZSBmaXJlZm94IDMuMCB0aGUgcGFyZW50IGlzIGxvc2VkIGlmIHdlIHVzZSBsaWtlIGFib3ZlLCBzbyB3ZSBhbHNvIGFkIHRoaXMgdG8gdGhlIHhtbEhUVFBSZXF1ZXN0IG9iamVjdA0KCQkJdGhpcy5vYmpIVFRQUmVxLnBhcmVudCAJCT0gdGhpczsNCgkJCQ0KCQkJdGltZW91dENhbGxCYWNrLnBhcmVudCAJCT0gdGhpczsNCgkJCQ0KCQkJdGhpcy5vYmpIVFRQUmVxLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG9ucmVhZHlzdGF0ZWNoYW5nZTsNCgkJCS8vdGhpcy5vYmpIVFRQUmVxLm9uZXJyb3IgPSBvbkVycm9yOw0KCQkJDQoJCQlhY3VuZXRpeHdlYnNjYW5uZXIuZ2VuZXJhbFRpbWVyLmluaXRXaXRoQ2FsbGJhY2sodGltZW91dENhbGxCYWNrLCBhY3VuZXRpeHdlYnNjYW5uZXIub2JqTW96UHJlZnMuZ2V0SW50UHJlZigiaW50UmVxdWVzdFRpbWVPdXQiKSAsIENvbXBvbmVudHMuaW50ZXJmYWNlcy5uc0lUaW1lci5UWVBFX09ORV9TSE9UKTsNCgkJCWlmICh0aGlzLnN0clJlcXVlc3RNZXRob2QudG9VcHBlckNhc2UoKSA9PSAiUE9TVCIpDQoJCQl7DQoJCQkJdGhpcy5vYmpIVFRQUmVxLnNldFJlcXVlc3RIZWFkZXIoJ0NvbnRlbnQtVHlwZScsJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcpOyAgICAgDQoJCQkJdGhpcy5vYmpIVFRQUmVxLnNlbmQodGhpcy5vYmpQb3N0UGFyYW1zLnRvU3RyaW5nKCkpOw0KCQkJfQ0KCQkJZWxzZQ0KCQkJCXRoaXMub2JqSFRUUFJlcS5zZW5kKG51bGwpOw0KCQl9DQoJCWNhdGNoKGUpDQoJCXsNCgkJCWxvZ1RvRmlsZSgiL2RvQXNpbmNyb25SZXF1ZXN0L0Vycm9yIGludCB0aGUgWE1MSFRUUFJlcXVlc3QgY29yZSAoQWJvcnRpbmcgdGhpcyBvbmUpIik7DQoJCQl0aGlzLmJvb2xBc2luY3JvblJlcXVlc3RBYm9ydGVkID0gMzsNCgkJCWFjdW5ldGl4d2Vic2Nhbm5lci5nZW5lcmFsVGltZXIuY2FuY2VsKCk7DQoJCQl0aGlzLm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQuc3RyRXJyb3JUZXh0ID0gZTsNCgkJCXRoaXMub2JqQ2FsbGVyQ2xhc3Mub2JqVGFza1Jlc3VsdC5pbnRFcnJvckNvZGUgPSAtMTsNCgkJCS8vdGhpcyBpcyBhIHJlcXVlc3QgbWVjaGFuaXptIGVycm9yIHNvIHdlIGFyZSBub3QgcmV0aWluZyB0aGlzIG9uZSEhDQoJCQkNCgkJCS8vRVhJVFBPSU5UDQoJCQlhY3VuZXRpeHdlYnNjYW5uZXIub2JqU2Nhbm5pbmdQcm9jZXNzU3RhdHVzLm9uZU1vcmVFcnJvckZvdW5kKCk7DQoJCQlhY3VuZXRpeHdlYnNjYW5uZXIub2JqU2Nhbm5pbmdQcm9jZXNzU3RhdHVzLm9uZU1vcmVSZXF1ZXN0SGFuZGxlZCgpIDsNCgkJCWFjdW5ldGl4d2Vic2Nhbm5lci5nZW5lcmFsVGltZXIuaW5pdFdpdGhDYWxsYmFjayh0aGlzLm9iakNhbGxlckNsYXNzLmZuY1Rhc2tDYWxsQmFjaywgYWN1bmV0aXh3ZWJzY2FubmVyLm9iak1velByZWZzLmdldEludFByZWYoImludFN0YXR1c01hY2hpbmVSZXRyaWdnZXJUaW1lIikgLCBDb21wb25lbnRzLmludGVyZmFjZXMubnNJVGltZXIuVFlQRV9PTkVfU0hPVCk7DQoJCX0NCgkJDQoJfQ0KCQ0KCWZ1bmN0aW9uIHRvU3RyaW5nKCkNCgl7DQoJCXJlc3VsdCA9ICIiOzsNCgkJcmVzdWx0ID0gcmVzdWx0ICsgIlJlcXVlc3Q6XHRodHRwOi8vIjsNCgkJaWYoKHRoaXMuc3RyVXNlcm5hbWUgIT0gIiIpJiYodGhpcy5zdHJQYXNzd29yZCAhPSAiIikpDQoJCQlyZXN1bHQgPSByZXN1bHQgKyB0aGlzLnN0clVzZXJuYW1lICsgIkAiICsgdGhpcy5zdHJQYXNzd29yZDsNCgkJcmVzdWx0ID0gcmVzdWx0ICsgdGhpcy5zdHJSZXF1ZXN0VVJMICsgIlxyXG4iOw0KCQlyZXN1bHQgPSByZXN1bHQgKyAiR2V0UGFyYW1zOlx0IiArIHRoaXMub2JqR2V0UGFyYW1zICsgIlxyXG4iOw0KCQlyZXN1bHQgPSByZXN1bHQgKyAiUG9zdFBhcmFtczpcdCIgKyB0aGlzLm9ialBvc3RQYXJhbXMgKyAiXHJcbiI7DQoJCXJlc3VsdCA9IHJlc3VsdCArICJDb29raWU6XHQiICsgdGhpcy5vYmpDb29raWVQYXJhbXMgKyAiXHJcbiI7DQoJCXJlc3VsdCA9IHJlc3VsdCArICJIZWFkZXJzOlx0IiArIHRoaXMub2JqSGVhZGVycyArICJcclxuIjsNCgkJcmV0dXJuKHJlc3VsdCk7DQoJfQ0KDQoJZnVuY3Rpb24gY3JlYXRlQ29weSgpDQoJew0KCQlvYmoJCQkJCQkJCT0gbmV3IENsYXNzVGVzdFJlcXVlc3QoKTsNCgkJb2JqLnN0clJlcXVlc3RVUkwJCQkJPSB0aGlzLnN0clJlcXVlc3RVUkw7DQoJCW9iai5zdHJSZXF1ZXN0TWV0aG9kCQkJPSB0aGlzLnN0clJlcXVlc3RNZXRob2Q7DQoJCW9iai5zdHJQYXNzd29yZAkJCQkJPSB0aGlzLnN0clBhc3N3b3JkOw0KCQlvYmouYm9vbERlbGV0ZU9yaWdpbmFsSGVhZGVycwk9IHRoaXMuYm9vbERlbGV0ZU9yaWdpbmFsSGVhZGVyczsNCgkJb2JqLmJvb2xEZWxldGVPcmlnaW5hbENvb2tpZQk9IHRoaXMuYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llOw0KCQlvYmouaW50UmVkaXJlY3Rpb25MaW1pdAkJCT0gdGhpcy5pbnRSZWRpcmVjdGlvbkxpbWl0Ow0KCQlvYmoub2JqR2V0UGFyYW1zCQkJCT0gdGhpcy5vYmpHZXRQYXJhbXMuY3JlYXRlQ29weSgpOw0KCQlvYmoub2JqUG9zdFBhcmFtcwkJCQk9IHRoaXMub2JqUG9zdFBhcmFtcy5jcmVhdGVDb3B5KCk7DQoJCW9iai5vYmpDb29raWVQYXJhbXMJCQkJPSB0aGlzLm9iakNvb2tpZVBhcmFtcy5jcmVhdGVDb3B5KCk7DQoJCW9iai5vYmpIZWFkZXJzCQkJCQk9IHRoaXMub2JqSGVhZGVycy5jcmVhdGVDb3B5KCk7DQoJCXJldHVybihvYmopDQoJfQ0KfQ0KDQovLyB0aGlzIGlzIHRoZSBURVNURVIgY2xhc3MgcGFyZW50LCBldmVyeSB0ZXN0IHNob3VsZCBkZXJpdmF0ZSBmcm9tIHRoaXMgYW5kIGV4cG9ydCB0aGUgc2FtZSBwcm9wZXJ0eS1lcyBhbmQgbWV0aG9kcw0KZnVuY3Rpb24gY2xhc3NHZW5lcmljVGVzdGVyKCkNCnsNCgkNCgl0aGlzLm9iakNhbGxlckNsYXNzCQk9IG51bGw7DQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2sJPSBudWxsOw0KCXRoaXMub2JqVGFza1Jlc3VsdAkJPSB7fTsNCgkNCgl0aGlzLnN0clhVTE1lbnVJZAkJCT0gIiINCgl0aGlzLnN0clhVTE1lbnVUZXh0CQkJPSAiIg0KCXRoaXMuc3RyWFVMTWVudUhpbnQJCQk9ICIiDQoJdGhpcy5zdHJYVUxNZW51QWNjZXNza2V5CT0gIiINCgl0aGlzLnN0clR5cGUJCQkJPSAiIjsNCgl0aGlzLnN0clRlc3ROYW1lCQkJPSAiIjsNCgl0aGlzLnNldmVyaXR5CQkJCT0gIiI7DQoJdGhpcy5zdHJEZXNjcmlwdGlvbgkJCT0gIiI7DQoJCQ0KCXRoaXMubXllc2NhcGUgPSBmdW5jdGlvbihzdHJUb0VzY2FwZVN0cmluZyxpbnRFc2NhcGVNZXRob2QpDQoJew0KCQlzd2l0Y2goaW50RXNjYXBlTWV0aG9kKQ0KCQl7DQoJCQljYXNlIDI6DQoJCQkJcmV0dXJuKGVzY2FwZShzdHJUb0VzY2FwZVN0cmluZykpOw0KCQkJY2FzZSAxOg0KCQkJCXZhciByZXR2YWwgPSAiIjsNCgkJCQlmb3IodmFyIGkgPSAwOyBpIDwgc3RyVG9Fc2NhcGVTdHJpbmcubGVuZ3RoOyBpKyspDQoJCQkJew0KCQkJCQlpZiggKChzdHJUb0VzY2FwZVN0cmluZ1tpXSA+PSAnMCcpICYmIChzdHJUb0VzY2FwZVN0cmluZ1tpXSA8PSAnOScpKSB8fA0KCQkJCQkJKChzdHJUb0VzY2FwZVN0cmluZ1tpXSA+PSAnQScpICYmIChzdHJUb0VzY2FwZVN0cmluZ1tpXSA8PSAnWicpKSB8fA0KCQkJCQkJKChzdHJUb0VzY2FwZVN0cmluZ1tpXSA+PSAnYScpICYmIChzdHJUb0VzY2FwZVN0cmluZ1tpXSA8PSAneicpKQ0KCQkJCQkJKQ0KCQkJCQkJcmV0dmFsID0gcmV0dmFsICsgc3RyVG9Fc2NhcGVTdHJpbmdbaV07DQoJCQkJCWVsc2UNCgkJCQkJew0KCQkJCQkJdmFyIGMgPSBzdHJUb0VzY2FwZVN0cmluZy5jaGFyQ29kZUF0KGkpLnRvU3RyaW5nKDE2KTsNCgkJCQkJCWlmIChjLmxlbmd0aCA8IDIpIGMgPSAiMCIgKyBjOw0KCQkJCQkJcmV0dmFsID0gcmV0dmFsICsgIiUiICsgYzsNCgkJCQkJfQ0KCQkJCX0NCgkJCQlyZXR1cm4ocmV0dmFsKTsNCgkJCS8vdG9kbzogSW1wbGVtZW50IG1vcmUgZXNjYXBpbmcgbWV0aG9kcw0KCQkJZGVmYXVsdDoNCgkJCQlyZXR1cm4oc3RyVG9Fc2NhcGVTdHJpbmcpOw0KCQl9DQoJfQ0KCQ0KCXRoaXMuaHRtbFBhcnNlclRlc3RGb3JUYWcgPSBmdW5jdGlvbihzdHJUYWdOYW1lLCBhcnJheVRlc3RTdHJpbmdzKQ0KCXsNCgkJZnVuY3Rpb24gY29tcGFyYXRpb24oc3RyVmFsdWUxLCBzdHJDb21wYXJhdGlvbiwgc3RyVmFsdWUyKQ0KCQl7DQoJCQlpZiAoc3RyVmFsdWUxID09IG51bGwpIHN0clZhbHVlMSA9ICIiOw0KCQkJaWYgKHN0clZhbHVlMiA9PSBudWxsKSBzdHJWYWx1ZTIgPSAiIjsNCgkJCXN3aXRjaChzdHJDb21wYXJhdGlvbikNCgkJCXsNCgkJCQljYXNlICI+IjogLy8gdmFsdWUyIGluY2x1ZGVkIGluIHZhbHVlMQ0KCQkJCQlpZihzdHJWYWx1ZTEudG9Mb3dlckNhc2UoKS5tYXRjaChzdHJWYWx1ZTIudG9Mb3dlckNhc2UoKSkpDQoJCQkJCQlyZXR1cm4odHJ1ZSk7DQoJCQkJY2FzZSAiPCI6IC8vIHZhbHVlMSBpbmNsdWRlZCBpbiB2YWx1ZTINCgkJCQkJaWYoc3RyVmFsdWUyLnRvTG93ZXJDYXNlKCkubWF0Y2goc3RyVmFsdWUxLnRvTG93ZXJDYXNlKCkpKQ0KCQkJCQkJcmV0dXJuKHRydWUpOw0KCQkJCWNhc2UgIj0iOiANCgkJCQkJaWYoc3RyVmFsdWUyLnRvTG93ZXJDYXNlKCkgPT0gc3RyVmFsdWUxLnRvTG93ZXJDYXNlKCkpDQoJCQkJCQlyZXR1cm4odHJ1ZSk7DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2UgIiEiOiANCgkJCQkJaWYoc3RyVmFsdWUyLnRvTG93ZXJDYXNlKCkgIT0gc3RyVmFsdWUxLnRvTG93ZXJDYXNlKCkpDQoJCQkJCQlyZXR1cm4odHJ1ZSk7DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2UgIiMiOg0KCQkJCQl0cnkNCgkJCQkJew0KCQkJCQkJdmFyIHJlZ2V4cCA9IHJlZ2V4cC5jb21waWxlKHN0clZhbHVlMik7DQoJCQkJCQlpZihyZWdleHAuZXhlYyhzdHJWYWx1ZTEpKQ0KCQkJCQkJCXJldHVybih0cnVlKTsNCgkJCQkJfQ0KCQkJCQljYXRjaChlKXt9DQoJCQkJCWJyZWFrOw0KCQkJfQ0KCQkJcmV0dXJuKGZhbHNlKTsNCgkJfQ0KCQkNCgkJdmFyIG9iakJyb3dzZXJDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYWN1bmV0aXhfYXBwY29udGVudF9icm93c2VyQ29udGFpbmVyIik7DQoJCWlmIChvYmpCcm93c2VyQ29udGFpbmVyKQ0KCQl7DQoJCQl2YXIgb2JqVGFnICA9IG9iakJyb3dzZXJDb250YWluZXIuY29udGVudERvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKHN0clRhZ05hbWUpOw0KCQkJaWYob2JqVGFnKQ0KCQkJew0KCQkJCWZvcih2YXIgaiA9IDAgOyBqIDwgb2JqVGFnLmxlbmd0aDsgaisrKQ0KCQkJCXsNCgkJCQkJdmFyIGJvb2xyZXR2YWwgPSB0cnVlOw0KCQkJCQlmb3IoIHZhciBpID0gMDsgaSA8IGFycmF5VGVzdFN0cmluZ3MubGVuZ3RoOyBpKyspDQoJCQkJCXsNCgkJCQkJCXZhciByZWdleCA9IC8oLio/KShbPTw+I10pKC4qKS87DQoJCQkJCQl2YXIgbWF0Y2hlcyA9IHJlZ2V4LmV4ZWMoYXJyYXlUZXN0U3RyaW5nc1tpXSk7DQoJCQkJCQlpZigobWF0Y2hlcykgJiYgKG1hdGNoZXMubGVuZ3RoID0gNCkpDQoJCQkJCQl7DQoJCQkJCQkJc3dpdGNoKG1hdGNoZXNbMV0pDQoJCQkJCQkJew0KCQkJCQkJCQljYXNlICJ0ZXh0d2l0aGluIjoNCgkJCQkJCQkJCWJvb2xyZXR2YWwgPSBib29scmV0dmFsICYmIGNvbXBhcmF0aW9uKG9ialRhZ1tqXS5jb250ZW50LCBtYXRjaGVzWzJdLCBtYXRjaGVzWzNdKTsNCgkJCQkJCQkJCWJyZWFrOw0KCQkJCQkJCQlkZWZhdWx0Og0KCQkJCQkJCQkJYm9vbHJldHZhbCA9IGJvb2xyZXR2YWwgJiYgY29tcGFyYXRpb24ob2JqVGFnW2pdLmdldEF0dHJpYnV0ZShtYXRjaGVzWzFdKSwgbWF0Y2hlc1syXSwgbWF0Y2hlc1szXSk7DQoJCQkJCQkJfQ0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCWlmIChib29scmV0dmFsKSByZXR1cm4odHJ1ZSk7DQoJCQkJfQ0KCQkJCXJldHVybihmYWxzZSk7DQoJCQl9DQoJCQllbHNlDQoJCQkJcmV0dXJuKGZhbHNlKTsNCgkJfQ0KCQlyZXR1cm4oZmFsc2UpOw0KCX0NCgkNCgl0aGlzLnRlc3RYc3NHZW5lcmF0aW9uQnlJRCA9IGZ1bmN0aW9uKHRlc3RJZCkNCiAgICB7DQogICAgICAgIHZhciBvYmpCcm93c2VyQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImFjdW5ldGl4X2FwcGNvbnRlbnRfYnJvd3NlckNvbnRhaW5lciIpOw0KICAgICAgICBpZiAob2JqQnJvd3NlckNvbnRhaW5lcikNCiAgICAgICAgew0KICAgICAgICAgICAgdmFyIHhzc0VsZW1lbnRzICA9IG9iakJyb3dzZXJDb250YWluZXIuY29udGVudERvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJYU1NUZXN0RWxlbWVudCIpOw0KICAgICAgICAgICAgZm9yKHZhciBpID0gMCA7IGkgPCB4c3NFbGVtZW50cy5sZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBpZiAoeHNzRWxlbWVudHNbaV0ubmFtZSA9PSB0ZXN0SWQpDQogICAgICAgICAgICAgICAgICAgIHJldHVybih0cnVlKTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4oZmFsc2UpOw0KICAgIH0NCgkNCgl0aGlzLmxvYWRTdHJpbmdJblRvVGhlSFRNTFBhcnNlciA9IGZ1bmN0aW9uKHN0clZhbHVlLCBhcnJheUZpbHRlcnMpDQoJew0KCQkvL3RoaXMgZnVuY3Rpb24gd2lsbCBiZSBpbmplY3RlZCBpbiBldmVyeSB0ZXN0ZWQgcGFnZSwgaWYgaXQgaXMgZXhlY3V0ZWQgYW4gWFNTVGVzdEVsZW1lbnQgd2lsbCBiZSBjcmVhdGVkIHdpdGggdGhlIG5hbWUgPSB2YWx1ZQ0KCQlmdW5jdGlvbiBYU1NzZ24odmFsdWUpDQoJCXsNCgkJCXZhciBYU1NUZXN0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIlhTU1Rlc3RFbGVtZW50Iik7DQoJCQlYU1NUZXN0RWxlbWVudC5uYW1lID0gdmFsdWU7DQoJCQlkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoWFNTVGVzdEVsZW1lbnQpOw0KCQl9DQoJCQ0KCQlpZihzdHJWYWx1ZSkNCgkJew0KCQkJdmFyIG9iakJyb3dzZXJDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYWN1bmV0aXhfYXBwY29udGVudF9icm93c2VyQ29udGFpbmVyIik7DQoJCQlpZihvYmpCcm93c2VyQ29udGFpbmVyKQ0KCQkJew0KCQkJCWlmKGFycmF5RmlsdGVycy5pbmRleE9mKCJmaWx0ZXJTY3JpcHQiKSA+PSAwICkNCgkJCQl7DQoJCQkJCXN0clZhbHVlID0gc3RyVmFsdWUucmVwbGFjZSgvc2NyaXB0L2ksInNjcmlwdHgiKTsNCgkJCQl9DQoJCQkJDQoJCQkJaWYoYXJyYXlGaWx0ZXJzLmluZGV4T2YoImluc2VydFhzc1Rlc3RlciIpID49IDAgKQ0KCQkJCXsNCgkJCQkJc3RyVmFsdWUgPSAgIjxzY3JpcHQ+IiArIFhTU3NnbiArICI8L3NjcmlwdD4iICsgc3RyVmFsdWU7DQoJCQkJfQ0KCQkJCQ0KCQkJCWlmKGFycmF5RmlsdGVycy5pbmRleE9mKCJzaWxlbnRBbGVydCIpID49IDAgKQ0KCQkJCXsNCgkJCQkJc3RyVmFsdWUgPSAiPHNjcmlwdD5hbGVydCA9IGZ1bmN0aW9uKGEpe3JldHVybiBmYWxzZTt9PC9zY3JpcHQ+IiArIHN0clZhbHVlOw0KCQkJCX0NCgkJCQkNCgkJCQlpZihhcnJheUZpbHRlcnMuaW5kZXhPZigiZmlsdGVyUmVkaXJlY3QiKSA+PSAwICkNCgkJCQl7CQ0KCQkJCQlzdHJWYWx1ZSA9IHN0clZhbHVlLnJlcGxhY2UoL21ldGEvaSwibWV0YXgiKTsNCgkJCQl9DQoJCQkJDQoJCQkJb2JqQnJvd3NlckNvbnRhaW5lci5jb250ZW50RG9jdW1lbnQub3BlbigpOw0KCQkJCW9iakJyb3dzZXJDb250YWluZXIuY29udGVudERvY3VtZW50LndyaXRlKHN0clZhbHVlKTsNCgkJCQlvYmpCcm93c2VyQ29udGFpbmVyLmNvbnRlbnREb2N1bWVudC5jbG9zZSgpOw0KCQkJCXJldHVybih0cnVlKTsNCgkJCX0NCgkJfQ0KCQlyZXR1cm4oZmFsc2UpOw0KCX0NCgkNCgkNCgl0aGlzLmRvUmVxdWVzdEpzb24gPSBmdW5jdGlvbihvYmpJbnB1dCkNCgl7DQoJCS8qDQoJCXBhcmFtZXRlciBtYW5uaXB1bGFpb24gcmVxdWVzdCBvYmplY3QgZGVmZmluaXRpb246DQoJCXsNCgkJCW9iakNhbGxlckNsYXNzIAkJOiByZXF1aXJlZCwgdGhlIGNhbGxlciBjbGFzcw0KCQkJc3RyVGVzdFN0cmluZwkJOiByZXF1aXJlZA0KCQkJDQoJCQlhcnJheUFjY2VwdGVkQ29udGVudFR5cGVzCToJb3B0aW9uYWwgZGVmYXVsdCAoInRleHQvaHRtbCIsInRleHQveG1sIiwiYXBwbGljYXRpb24veGh0bWwreG1sIikNCgkJCWludFJlZGlyZWN0aW9uTGltaXQJCQk6IAlvcHRpb25hbCBkZWZhdWx0IDIwDQoJCQlib29sRGVsZXRlT3JpZ2luYWxDb29raWUJOglvcHRpb25hbCBkZWZhdWx0IGZhbHNlDQoJCQlib29sRGVsZXRlT3JpZ2luYWxIZWFkZXJzCTogCW9wdGlvbmFsIGRlZmF1bHQgZmFsc2UNCgkJCWludEVzY2FwZU1ldGhvZAkJCQk6IAlvcHRpb25hbCBkZWZhdWx0IDAgKG5vIGVzY2FwaW5nIGZvciB0aGUgdGVzdGVkIHN0clRlc3RTdHJpbmcpDQoJCX0gDQoJCSovDQoJCWlmIChvYmpJbnB1dC5ib29sRW5hYmxlUmV0cnkgPT0gbnVsbCkNCgkJCW9iaklucHV0LmJvb2xFbmFibGVSZXRyeSA9IHRydWU7DQoJCQ0KCQlpZiAob2JqSW5wdXQuaW50UmVkaXJlY3Rpb25MaW1pdCA9PSBudWxsICkNCgkJCW9iaklucHV0LmludFJlZGlyZWN0aW9uTGltaXQgPT0gMjA7DQoJCQkNCgkJaWYgKG9iaklucHV0LmJvb2xEZWxldGVPcmlnaW5hbENvb2tpZSA9PSBudWxsKQ0KCQkJb2JqSW5wdXQuYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llID0gZmFsc2U7DQoJCQkNCgkJaWYgKG9iaklucHV0LmJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnMgPT0gbnVsbCkNCgkJCW9iaklucHV0LmJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnMgPSBmYWxzZTsNCgkJDQoJCWlmIChvYmpJbnB1dC5pbnRFc2NhcGVNZXRob2QgPT0gbnVsbCkNCgkJCW9iaklucHV0LmludEVzY2FwZU1ldGhvZCA9IDA7DQoJCQ0KCQkvL25vcm1hbGwgcmVxdWVzdCBmcm9tIHBhcmFtZXRlciBtYW5pcHVsYXRpb24gdHlwZSB0ZXN0CQ0KCQlpZiAoKG9iaklucHV0Lm9iakNhbGxlckNsYXNzICE9IG51bGwpKQ0KCQl7DQoJCQl2YXIgb2JqUmVxdWVzdENsYXNzCT0gb2JqSW5wdXQub2JqQ2FsbGVyQ2xhc3Mub2JqQ2FsbGVyQ2xhc3Mub2JqUmVxdWVzdDsNCgkJCXZhciBjaW5kZXggPSBvYmpJbnB1dC5vYmpDYWxsZXJDbGFzcy5vYmpDYWxsZXJDbGFzcy5pbnRDb21iaW5hdGlvbkluZGV4Ow0KCQkJDQoJCQlvYmpJbnB1dC5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LnN0ckluamVjdGVkVmFsdWUgPSBvYmpJbnB1dC5zdHJUZXN0U3RyaW5nOw0KCQkJDQoJCQl2YXIgb2JqUmVxdWVzdAkJCQkJCT0gbmV3IENsYXNzVGVzdFJlcXVlc3QoKTsNCgkJCW9ialJlcXVlc3QuYm9vbEVuYWJsZVJldHJ5CQkJPSBvYmpJbnB1dC5ib29sRW5hYmxlUmV0cnk7Ow0KCQkJb2JqUmVxdWVzdC5ib29sRGVsZXRlT3JpZ2luYWxDb29raWUJPSBvYmpJbnB1dC5ib29sRGVsZXRlT3JpZ2luYWxDb29raWU7DQoJCQlvYmpSZXF1ZXN0LmJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnM9IG9iaklucHV0LmJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnM7DQoJCQkNCgkJCW9ialJlcXVlc3Quc3RyUmVxdWVzdFVSTAkJCT0gb2JqUmVxdWVzdENsYXNzLm9iakFjdGlvbi5nZXRVUkwoZmFsc2UpOw0KCQkJb2JqUmVxdWVzdC5zdHJSZXF1ZXN0TWV0aG9kCQkJPSBvYmpSZXF1ZXN0Q2xhc3Muc3RyUmVxdWVzdE1ldGhvZDsNCgkJCW9ialJlcXVlc3Quc3RyVXNlcm5hbWUJCQkJPSBvYmpSZXF1ZXN0Q2xhc3Mub2JqQWN0aW9uLnN0clVzZXJuYW1lOw0KCQkJb2JqUmVxdWVzdC5zdHJQYXNzd29yZAkJCQk9IG9ialJlcXVlc3RDbGFzcy5vYmpBY3Rpb24uc3RyUGFzc3dvcmQ7DQoJCQlvYmpSZXF1ZXN0LmludFJlZGlyZWN0aW9uTGltaXQJCT0gb2JqSW5wdXQuaW50UmVkaXJlY3Rpb25MaW1pdDsNCgkJCW9ialJlcXVlc3QuYXJyYXlBY2NlcHRlZENvbnRlbnRUeXBlcz0gb2JqSW5wdXQuYXJyYXlBY2NlcHRlZENvbnRlbnRUeXBlczsNCgkJCQkNCgkJCWZvcih2YXIgaSA9IDAgOyAgaSA8IG9ialJlcXVlc3RDbGFzcy5hcnJheU9mR2VuZXJhdGVkVGVzdENvbWJpbmF0aW9uc1tjaW5kZXhdLmFycmF5UGFyYW1ldGVycy5sZW5ndGg7IGkrKykNCgkJCXsNCgkJCQl2YXIgc3RyTmFtZSA9IG9ialJlcXVlc3RDbGFzcy5hcnJheVBhcmFtZXRlcnNbb2JqUmVxdWVzdENsYXNzLmFycmF5T2ZHZW5lcmF0ZWRUZXN0Q29tYmluYXRpb25zW2NpbmRleF0uYXJyYXlQYXJhbWV0ZXJzW2ldLnBhcmFtXS5zdHJOYW1lOw0KCQkJCQ0KCQkJCXZhciBzdHJWYWx1ZSA9ICIiOw0KCQkJCQ0KCQkJCWlmKG9ialJlcXVlc3RDbGFzcy5hcnJheU9mR2VuZXJhdGVkVGVzdENvbWJpbmF0aW9uc1tjaW5kZXhdLmludFRlc3RlZFBhcmFtZXRlckluZGV4ID09IG9ialJlcXVlc3RDbGFzcy5hcnJheU9mR2VuZXJhdGVkVGVzdENvbWJpbmF0aW9uc1tjaW5kZXhdLmFycmF5UGFyYW1ldGVyc1tpXS5wYXJhbSkNCgkJCQl7DQoJCQkJCXN0clZhbHVlID0gdGhpcy5teWVzY2FwZSAob2JqSW5wdXQuc3RyVGVzdFN0cmluZywgb2JqSW5wdXQuaW50RXNjYXBlTWV0aG9kKTsNCgkJCQl9DQoJCQkJZWxzZQ0KCQkJCXsNCgkJCQkJc3RyVmFsdWUgPSB0aGlzLm15ZXNjYXBlICgNCgkJCQkJCQkJCW9ialJlcXVlc3RDbGFzcy5hcnJheVBhcmFtZXRlcnNbb2JqUmVxdWVzdENsYXNzLmFycmF5T2ZHZW5lcmF0ZWRUZXN0Q29tYmluYXRpb25zW2NpbmRleF0uYXJyYXlQYXJhbWV0ZXJzW2ldLnBhcmFtXS5hcnJheVNlbGVjdGFibGVWYWx1ZXNbb2JqUmVxdWVzdENsYXNzLmFycmF5T2ZHZW5lcmF0ZWRUZXN0Q29tYmluYXRpb25zW2NpbmRleF0uYXJyYXlQYXJhbWV0ZXJzW2ldLmluZGV4XSwNCgkJCQkJCQkJCW9ialJlcXVlc3RDbGFzcy5hcnJheVBhcmFtZXRlcnNbb2JqUmVxdWVzdENsYXNzLmFycmF5T2ZHZW5lcmF0ZWRUZXN0Q29tYmluYXRpb25zW2NpbmRleF0uYXJyYXlQYXJhbWV0ZXJzW2ldLnBhcmFtXS5pbnRFc2NhcGVNZXRob2QpOw0KCQkJCX0NCgkNCgkJCQlpZihvYmpSZXF1ZXN0Q2xhc3MuYXJyYXlQYXJhbWV0ZXJzW29ialJlcXVlc3RDbGFzcy5hcnJheU9mR2VuZXJhdGVkVGVzdENvbWJpbmF0aW9uc1tjaW5kZXhdLmFycmF5UGFyYW1ldGVyc1tpXS5wYXJhbV0uc3RyUmVxdWVzdFR5cGUgPT0gJ0dFVCcpDQoJCQkJCW9ialJlcXVlc3Qub2JqR2V0UGFyYW1zLmFkZFBhcmFtZXRlcihzdHJOYW1lLHN0clZhbHVlKTsNCgkJCQlpZihvYmpSZXF1ZXN0Q2xhc3MuYXJyYXlQYXJhbWV0ZXJzW29ialJlcXVlc3RDbGFzcy5hcnJheU9mR2VuZXJhdGVkVGVzdENvbWJpbmF0aW9uc1tjaW5kZXhdLmFycmF5UGFyYW1ldGVyc1tpXS5wYXJhbV0uc3RyUmVxdWVzdFR5cGUgPT0gJ1BPU1QnKQ0KCQkJCQlvYmpSZXF1ZXN0Lm9ialBvc3RQYXJhbXMuYWRkUGFyYW1ldGVyKHN0ck5hbWUsc3RyVmFsdWUpOw0KCQkJCWlmKG9ialJlcXVlc3RDbGFzcy5hcnJheVBhcmFtZXRlcnNbb2JqUmVxdWVzdENsYXNzLmFycmF5T2ZHZW5lcmF0ZWRUZXN0Q29tYmluYXRpb25zW2NpbmRleF0uYXJyYXlQYXJhbWV0ZXJzW2ldLnBhcmFtXS5zdHJSZXF1ZXN0VHlwZSA9PSAnQ09PS0lFJykNCgkJCQkJb2JqUmVxdWVzdC5vYmpDb29raWVQYXJhbXMuYWRkUGFyYW1ldGVyKHN0ck5hbWUsc3RyVmFsdWUpOw0KCQkJCWlmKG9ialJlcXVlc3RDbGFzcy5hcnJheVBhcmFtZXRlcnNbb2JqUmVxdWVzdENsYXNzLmFycmF5T2ZHZW5lcmF0ZWRUZXN0Q29tYmluYXRpb25zW2NpbmRleF0uYXJyYXlQYXJhbWV0ZXJzW2ldLnBhcmFtXS5zdHJSZXF1ZXN0VHlwZSA9PSAnSEVBREVSUycpDQoJCQkJCW9ialJlcXVlc3Qub2JqSGVhZGVycy5hZGRQYXJhbWV0ZXIoc3RyTmFtZSxzdHJWYWx1ZSk7DQoJCQl9DQoJCQlvYmpSZXF1ZXN0LmRvQXNpbmNyb25SZXF1ZXN0KG9iaklucHV0Lm9iakNhbGxlckNsYXNzKTsNCgkJfQ0KCQllbHNlDQoJCXsNCgkJCS8vc2VyaW91cyBlcnJvcg0KCQkJYWxlcnQoIkFjdW5ldGl4IFNjYW5uZXIgSW50ZXJuYWwgZXJyb3IgMDEiKTsNCgkJCS8vdG9kbzogdGhpcyBpcyBhIHNlcmlvdXMgZXJyb3Igc28gaGVyZSB3ZSBjYW4gYW5kIG5lZWQgdG8gYWJvcnQgdGhlIHNjYW5uaW5nIHByb2Nlc3MhIQ0KCQl9DQoJCQ0KCX0NCgkJDQoJdGhpcy5yZWdpc3RlciA9IGZ1bmN0aW9uKCkNCgl7DQoJCWxvZ1RvRmlsZSgiY2xhc3NHZW5lcmljVGVzdGVyL3JlZ2lzdGVyIik7DQoJCQ0KCQlhY3VuZXRpeHdlYnNjYW5uZXIuYXJyYXlPZlRlc3RQcm9jZWR1cmVzLnB1c2godGhpcyk7DQoJCQ0KCQkvL2luY3JlYXNlIHJlZ2lzdGVyZWQgdGVzdCBudW1iZXINCgkJYWN1bmV0aXh3ZWJzY2FubmVyLm9iak1velByZWZzLnNldEludFByZWYoImludFJlZ2lzdGVyZWRUZXN0TnVtYmVyIiwgYWN1bmV0aXh3ZWJzY2FubmVyLmFycmF5T2ZUZXN0UHJvY2VkdXJlcy5sZW5ndGgpOw0KCQkNCgkJYWN1bmV0aXh3ZWJzY2FubmVyLm9iak1velByZWZzLnNldEJvb2xQcmVmKCJib29sVGVzdERlbW8iICsgYWN1bmV0aXh3ZWJzY2FubmVyLmFycmF5T2ZUZXN0UHJvY2VkdXJlcy5sZW5ndGgsICF0aGlzLmVuYWJsZWQpOw0KCQkNCgkJLy9yZWdpc3RlciB0aGUgdGVzdCBidXQgd2l0aCBjYXJlIGlmIGFscmVhZHkgcmVnaXN0ZXJlZCB0byBub3QgcmVzZXQgaGlzIHNldHRpbmdzDQoJCXZhciBzdHJMYXN0VGVzdE5hbWUgPSBhY3VuZXRpeHdlYnNjYW5uZXIub2JqTW96UHJlZnMuZ2V0Q2hhclByZWYoInN0clRlc3ROYW1lIiArIGFjdW5ldGl4d2Vic2Nhbm5lci5hcnJheU9mVGVzdFByb2NlZHVyZXMubGVuZ3RoKTsNCgkJaWYoc3RyTGFzdFRlc3ROYW1lID09IHRoaXMuc3RyVGVzdE5hbWUpDQoJCQlyZXR1cm47DQoJCQ0KCQlhY3VuZXRpeHdlYnNjYW5uZXIub2JqTW96UHJlZnMuc2V0Qm9vbFByZWYoImJvb2xUZXN0RW5hYmxlZCIgKyBhY3VuZXRpeHdlYnNjYW5uZXIuYXJyYXlPZlRlc3RQcm9jZWR1cmVzLmxlbmd0aCwgdGhpcy5lbmFibGVkKTsNCgkJYWN1bmV0aXh3ZWJzY2FubmVyLm9iak1velByZWZzLnNldENoYXJQcmVmKCJzdHJUZXN0TmFtZSIgKyBhY3VuZXRpeHdlYnNjYW5uZXIuYXJyYXlPZlRlc3RQcm9jZWR1cmVzLmxlbmd0aCwgdGhpcy5zdHJUZXN0TmFtZSk7DQoJfQ0KCQ0KCS8vdGVzdCBleGl0IGZ1bmN0aW9uLCB0aGlzIGZ1bmN0aW9uIHdpbGwgY2FsbCB0aGUgcGFyZW50IGNhbGxiY2FrDQoJdGhpcy5mbmNFeGl0VGVzdCA9IGZ1bmN0aW9uKGJvb2xWdWxuZXJhYmxlLCBzdHJUZXN0TmFtZSkNCgl7CQkJDQoJCXRoaXMub2JqQ2FsbGVyQ2xhc3Mub2JqVGFza1Jlc3VsdC5ib29sSXNWdWxlbnJhYmxlID0gYm9vbFZ1bG5lcmFibGU7DQoJCWlmKGJvb2xWdWxuZXJhYmxlKQ0KCQl7DQoJCQl0aGlzLm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQuc3RySW5qZWN0ZWRWYWx1ZQk9IHRoaXMub2JqVGFza1Jlc3VsdC5zdHJJbmplY3RlZFZhbHVlOw0KCQkJdGhpcy5vYmpDYWxsZXJDbGFzcy5vYmpUYXNrUmVzdWx0LnN0clRlc3ROYW1lCQk9IHN0clRlc3ROYW1lOw0KCQl9DQoJCWFjdW5ldGl4d2Vic2Nhbm5lci5nZW5lcmFsVGltZXIuaW5pdFdpdGhDYWxsYmFjayh0aGlzLm9iakNhbGxlckNsYXNzLmZuY1Rhc2tDYWxsQmFjaywgYWN1bmV0aXh3ZWJzY2FubmVyLm9iak1velByZWZzLmdldEludFByZWYoImludFN0YXR1c01hY2hpbmVSZXRyaWdnZXJUaW1lIikgLCBDb21wb25lbnRzLmludGVyZmFjZXMubnNJVGltZXIuVFlQRV9PTkVfU0hPVCk7CQ0KCX0sDQoNCgl0aGlzLmRvVGVzdCA9IGZ1bmN0aW9uKG9iakNhbGxlckNsYXNzKQ0KCXsNCgkJLy90aGlzIHRlc3Qgd2lsbCBiZSBvdmVyd3JpdHRlZA0KCQkvLyBtYW5kYXRvcnkgdGhpcyBmdW5jdGlvbiB3aWxsIGhhdmUgdG8gY2FsbCB0aGUgcmV0dXJuIHRpbWVyIG9uY2UgYW5kIG9ubHkgb25jZQ0KCQlhY3VuZXRpeHdlYnNjYW5uZXIuZ2VuZXJhbFRpbWVyLmluaXRXaXRoQ2FsbGJhY2sodGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3MuZm5jVGFza0NhbGxCYWNrLCBhY3VuZXRpeHdlYnNjYW5uZXIub2JqTW96UHJlZnMuZ2V0SW50UHJlZigiaW50U3RhdHVzTWFjaGluZVJldHJpZ2dlclRpbWUiKSAsIENvbXBvbmVudHMuaW50ZXJmYWNlcy5uc0lUaW1lci5UWVBFX09ORV9TSE9UKTsNCgl9DQoJDQoJdGhpcy5nZXRPcmlnaW5hbFZhbHVlT2ZUZXN0ZWRJdGVtID0gZnVuY3Rpb24ob2JqQ2FsbGVyQ2xhc3MpDQoJew0KCQl2YXIgb2JqUmVxdWVzdENsYXNzCT0gb2JqQ2FsbGVyQ2xhc3Mub2JqQ2FsbGVyQ2xhc3Mub2JqUmVxdWVzdDsNCgkJdmFyIGNpbmRleCA9IG9iakNhbGxlckNsYXNzLm9iakNhbGxlckNsYXNzLmludENvbWJpbmF0aW9uSW5kZXg7DQoJCXZhciBwaW5kZXggPSBvYmpSZXF1ZXN0Q2xhc3MuYXJyYXlPZkdlbmVyYXRlZFRlc3RDb21iaW5hdGlvbnNbY2luZGV4XS5pbnRUZXN0ZWRQYXJhbWV0ZXJJbmRleDsNCgkJDQoJCXZhciBzdHJSZXR2YWwgPSAiIjsNCgkJDQoJCWZvcih2YXIgaSA9IDA7IGkgPCBvYmpSZXF1ZXN0Q2xhc3MuYXJyYXlPZkdlbmVyYXRlZFRlc3RDb21iaW5hdGlvbnNbY2luZGV4XS5hcnJheVBhcmFtZXRlcnMubGVuZ3RoOyBpICsrKQ0KCQkJaWYob2JqUmVxdWVzdENsYXNzLmFycmF5T2ZHZW5lcmF0ZWRUZXN0Q29tYmluYXRpb25zW2NpbmRleF0uaW50VGVzdGVkUGFyYW1ldGVySW5kZXggPT0gb2JqUmVxdWVzdENsYXNzLmFycmF5T2ZHZW5lcmF0ZWRUZXN0Q29tYmluYXRpb25zW2NpbmRleF0uYXJyYXlQYXJhbWV0ZXJzW2ldLnBhcmFtKQ0KCQkJCXN0clJldHZhbCA9IG9ialJlcXVlc3RDbGFzcy5hcnJheVBhcmFtZXRlcnNbcGluZGV4XS5hcnJheVNlbGVjdGFibGVWYWx1ZXNbb2JqUmVxdWVzdENsYXNzLmFycmF5T2ZHZW5lcmF0ZWRUZXN0Q29tYmluYXRpb25zW2NpbmRleF0uYXJyYXlQYXJhbWV0ZXJzW2ldLmluZGV4XTsNCgkJDQoJCXJldHVybihzdHJSZXR2YWwpOw0KCX0NCn0NCg0KDQoNCg==')); ]]></script>
<script><![CDATA[ eval(atob('')); ]]></script>
<script><![CDATA[ eval(atob('')); ]]></script>
<script><![CDATA[ eval(atob('')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUJsYWRlDQpQdXJwb3NlOglDUkxGIGluamVjdGlvbiB0ZXN0DQoqLw0KDQp2YXIgQ1JMRkluamVjdGlvblRlc3RlcgkJCQkJPSBuZXcgY2xhc3NHZW5lcmljVGVzdGVyKCk7DQpDUkxGSW5qZWN0aW9uVGVzdGVyLnN0clhVTE1lbnVJZAkJPSAiYWN1bmV0aXhfdGVzdHR5cGVfQ1JMRkluamVjdGlvbiI7DQpDUkxGSW5qZWN0aW9uVGVzdGVyLnN0clhVTE1lbnVUZXh0CQk9ICJDUkxGIEluamVjdGlvbiI7DQpDUkxGSW5qZWN0aW9uVGVzdGVyLnN0clhVTE1lbnVIaW50CQk9ICJTY2FuIGZvciBDUkxGIEluamVjdGlvbiBWdWxuZXJhYmlsaXRpZXMiOw0KQ1JMRkluamVjdGlvblRlc3Rlci5zdHJYVUxNZW51QWNjZXNza2V5CT0gIkMiOw0KQ1JMRkluamVjdGlvblRlc3Rlci5zdHJUeXBlCQkJCT0gIkNSTEYgSW5qZWN0aW9uIjsNCkNSTEZJbmplY3Rpb25UZXN0ZXIuc3RyVGVzdE5hbWUJCQk9ICJDUkxGIEluamVjdGlvbiI7DQpDUkxGSW5qZWN0aW9uVGVzdGVyLnNldmVyaXR5CQkJPSAiTWVkaXVtIjsNCkNSTEZJbmplY3Rpb25UZXN0ZXIuc3RyRGVzY3JpcHRpb24JCT0gImh0dHA6Ly93d3cuYWN1bmV0aXguY29tL3dlYnNpdGVzZWN1cml0eS8iOw0KQ1JMRkluamVjdGlvblRlc3Rlci53dnNDb3JlbGF0aW9uSUQJCT0gIkNSTEZfaW5qZWN0aW9uLnhtbCI7DQpDUkxGSW5qZWN0aW9uVGVzdGVyLmVuYWJsZWQJCQkJPSBmYWxzZTsNCi8qSU1QTEVNRU5UQVRJT04qLw0KQ1JMRkluamVjdGlvblRlc3Rlci5lbmFibGVkCQkJCT0gdHJ1ZTsNCg0KDQpmdW5jdGlvbiBzZWFyY2hGb3JDUkxGSW5qZWN0aW9uKHN0cklucHV0VGV4dCwgYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IpDQp7DQoJaWYgKGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yID09IG51bGwpIGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yID0gZmFsc2U7DQoJdmFyIHJldHZhbCA9IG5ldyBBcnJheSgpOw0KCQ0KCWFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnMgPSBuZXcgQXJyYXkNCgkoDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvXG4oU29tZUN1c3RvbUluamVjdGVkSGVhZGVyXHMqOlxzKmluamVjdGVkX2J5X3d2cykvaSwgY29uZGl0aW9uIDogdHJ1ZX0pDQoJCQ0KCSk7DQoJCQkJICANCglmb3IoIHZhciBpID0gMDsgaSA8IGFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnMubGVuZ3RoOyBpKyspDQoJew0KCQl2YXIgYm9vbEJvbmRpdGlvbiA9IHRydWU7DQoJCWZvcih2YXIgaiA9IDA7IGogPCBhcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zW2ldLmxlbmd0aDsgaisrKQ0KCQl7DQoJCQl2YXIgbWF0Y2ggPSAoYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9uc1tpXVtqXS5yZWdleC5leGVjKHN0cklucHV0VGV4dCkgIT0gbnVsbCk7DQoJCQlpZihtYXRjaCAhPSBhcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zW2ldW2pdLmNvbmRpdGlvbikNCgkJCXsNCgkJCQlib29sQm9uZGl0aW9uID0gZmFsc2U7DQoJCQkJYnJlYWs7DQoJCQl9DQoJCX0NCgkJDQoJCWlmIChib29sQm9uZGl0aW9uKQ0KCQl7DQoJCQlpZiAoYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IpDQoJCQkJcmV0dXJuKHRydWUpOw0KCQkJcmV0dmFsLnB1c2goaSk7DQoJCX0NCgl9DQoJaWYgKGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yKQ0KCQlyZXR1cm4oZmFsc2UpOw0KCWVsc2UNCgkJcmV0dXJuKHJldHZhbCk7DQp9DQoNCg0KDQoNCkNSTEZJbmplY3Rpb25UZXN0ZXIuZG9UZXN0ID0gZnVuY3Rpb24ob2JqQ2FsbGVyQ2xhc3MpDQp7DQoJdGhpcy5vYmpDYWxsZXJDbGFzcwkJPSBvYmpDYWxsZXJDbGFzczsNCgkNCgkvL2luamVjdGVkIHZhbHVlcwkJCQkgIA0KCXRoaXMuYXJyYXlDUkxGSW5qZWN0aW9uVGVzdFZhbHVlcyA9IG5ldyBBcnJheQ0KCSgNCgkJIiUwYVNvbWVDdXN0b21JbmplY3RlZEhlYWRlciUzQWluamVjdGVkX2J5X3d2cyIsDQoJCSIlMGQlMGFTb21lQ3VzdG9tSW5qZWN0ZWRIZWFkZXIlM0FpbmplY3RlZF9ieV93dnMiDQoJKQ0KCQ0KCQkNCgkvL3JlcXVlc3QgcmVzdWx0IGNvbnRhaW5lcgkNCgl0aGlzLm9ialRhc2tSZXN1bHQgPSB0aGlzLm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQ7DQoNCgkNCgkvL3RoZSB0YXNjayBjYWxiYWNrIGNsYXNzIHdpdGggbm90aWZ5IGZ1bmN0aW9uIGZvciBiZSB1c2VkIHdpdGggdGltZXIgY2FsbA0KCXRoaXMuZm5jVGFza0NhbGxCYWNrID0NCgl7DQoJCWludFN0ZXAJCQkJOiAwLA0KCQlib29sUmVxdWVzdFBoYXNlCTogdHJ1ZSwNCgkJc3RyVGVzdFN0cmluZwkJOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTM0NTY3MCksDQoJCQkJDQoJCW5vdGlmeSAJOiBmdW5jdGlvbih0aW1lcikNCgkJew0KCQkJdGhpcy5kb1Rlc3QoKTsNCgkJfSwNCgkJDQoJCWRvVGVzdCA6IGZ1bmN0aW9uKCkNCgkJew0KCQkJaWYodGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3MuYm9vbFRlc3Rlck1hcmtlZFRvRGllKQ0KCQkJew0KCQkJCWxvZ1RvRmlsZSgiPT4gc3FsSW5qZWN0aW9uVGVzdGVyID0+IGRvVGVzdDogdXNlckFib3J0UmVxdWVzdCBkZXRlY3RlZCAoYm9vbEFib3J0U2NhbiA9IHRydWUpIik7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJDQoJCQlpZih0aGlzLmJvb2xSZXF1ZXN0UGhhc2UpDQoJCQl7DQoJCQkJdGhpcy5ib29sUmVxdWVzdFBoYXNlID0gZmFsc2U7DQoJCQkJdGhpcy5wYXJlbnQuZG9SZXF1ZXN0SnNvbigNCgkJCQkJew0KCQkJCQkJb2JqQ2FsbGVyQ2xhc3MgCQkJCTogdGhpcy5wYXJlbnQsDQoJCQkJCQlzdHJUZXN0U3RyaW5nCQkJCTogdGhpcy5wYXJlbnQuYXJyYXlDUkxGSW5qZWN0aW9uVGVzdFZhbHVlc1t0aGlzLmludFN0ZXBdLA0KCQkJCQkJYXJyYXlBY2NlcHRlZENvbnRlbnRUeXBlcyAJOiBuZXcgQXJyYXkoInRleHQvaHRtbCIsInRleHQveG1sIiwiYXBwbGljYXRpb24veGh0bWwreG1sIiksDQoJCQkJCQlpbnRSZWRpcmVjdGlvbkxpbWl0CQkJOiAwLA0KCQkJCQkJYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llCTogdHJ1ZSwNCgkJCQkJCWJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnMJOiBmYWxzZSwNCgkJCQkJCWludEVzY2FwZU1ldGhvZAkJCQk6IDANCgkJCQkJfSk7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJZWxzZQ0KCQkJew0KCQkJCUxvZ0hUVFBUb0ZpbGUodGhpcy5wYXJlbnQub2JqVGFza1Jlc3VsdCwgZmFsc2UpOw0KCQkJCQ0KCQkJCWlmKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQuaW50RXJyb3JDb2RlID09IDApDQoJCQkJew0KCQkJCQlpZihzZWFyY2hGb3JDUkxGSW5qZWN0aW9uKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQuc3RyUmVzcG9uc2VIZWFkZXIsdHJ1ZSkpDQoJCQkJCXsNCgkJCQkJCXRoaXMucGFyZW50LmZuY0V4aXRUZXN0KHRydWUsIHRoaXMucGFyZW50LnN0clhVTE1lbnVUZXh0KTsNCgkJCQkJCXJldHVybjsNCgkJCQkJfQ0KDQoJCQkJfQ0KCQkJCQ0KCQkJCXRoaXMuYm9vbFJlcXVlc3RQaGFzZSA9IHRydWU7DQoJCQkJdGhpcy5pbnRTdGVwICsrOw0KCQkJCWlmKHRoaXMuaW50U3RlcCA+PSB0aGlzLnBhcmVudC5hcnJheUNSTEZJbmplY3Rpb25UZXN0VmFsdWVzLmxlbmd0aCkNCgkJCQl7DQoJCQkJCXRoaXMucGFyZW50LmZuY0V4aXRUZXN0KGZhbHNlKTsNCgkJCQkJcmV0dXJuOw0KCQkJCX0NCgkJCQkvL3JldHJpZ2dlciB0aGUgdGVzdCBwcm9jZWR1cmUNCgkJCQl0aGlzLmRvVGVzdCgpOw0KCQkJCXJldHVybjsNCgkJCX0NCgkJfQ0KCX0NCgkNCgkvL3dlIGhhdmUgdG8gc3BlY2lmeSBmbmNUYXNrQ2FsbEJhY2sgcGFycmVudCBzaW5jZSBpdCB3aWxsIGJlIGNhbGxlZCBmcm9tIG90aGVyIHNjb3BlDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2sucGFyZW50CT0gdGhpczsNCgkNCgkvL2luaXRpYWxpemUgdGhlIHRlc3QgcHJvY2VkdXJlDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2suZG9UZXN0KCk7DQoJDQp9DQoNCg0KDQoNCg0KDQovL3JlZ2lzdGVyIHRoZSB0ZXN0ZXIgb2JqZWN0DQpDUkxGSW5qZWN0aW9uVGVzdGVyLnJlZ2lzdGVyKCk7DQo=')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUJsYWRlDQpQdXJwb3NlOglUaGUgZmlsZSBpbmNsdXNpb24gdGVzdA0KKi8NCg0KdmFyIEZpbGVJbmNsdXNpb25UZXN0ZXIJCQkJCT0gbmV3IGNsYXNzR2VuZXJpY1Rlc3RlcigpOw0KRmlsZUluY2x1c2lvblRlc3Rlci5zdHJYVUxNZW51SWQJCT0gImFjdW5ldGl4X3Rlc3R0eXBlX0ZpbGVJbmNsdXNpb24iOw0KRmlsZUluY2x1c2lvblRlc3Rlci5zdHJYVUxNZW51VGV4dAkJPSAiRmlsZSBJbmNsdXNpb24iOw0KRmlsZUluY2x1c2lvblRlc3Rlci5zdHJYVUxNZW51SGludAkJPSAiU2NhbiBmb3IgRmlsZSBJbmNsdXNpb24gVnVsbmVyYWJpbGl0aWVzIjsNCkZpbGVJbmNsdXNpb25UZXN0ZXIuc3RyWFVMTWVudUFjY2Vzc2tleQk9ICJJIjsNCkZpbGVJbmNsdXNpb25UZXN0ZXIuc3RyVHlwZQkJCQk9ICJGaWxlIEluY2x1c2lvbiI7DQpGaWxlSW5jbHVzaW9uVGVzdGVyLnN0clRlc3ROYW1lCQkJPSAiRmlsZSBJbmNsdXNpb24iOw0KRmlsZUluY2x1c2lvblRlc3Rlci5zZXZlcml0eQkJCT0gIkhpZ2giOw0KRmlsZUluY2x1c2lvblRlc3Rlci5zdHJEZXNjcmlwdGlvbgkJPSAiaHR0cDovL3d3dy5hY3VuZXRpeC5jb20vd2Vic2l0ZXNlY3VyaXR5LyI7DQpGaWxlSW5jbHVzaW9uVGVzdGVyLnd2c0NvcmVsYXRpb25JRAkJPSAiRmlsZV9pbmNsdXNpb24ueG1sIjsNCkZpbGVJbmNsdXNpb25UZXN0ZXIuZW5hYmxlZAkJCQk9IGZhbHNlOw0KLypJTVBMRU1FTlRBVElPTiovDQpGaWxlSW5jbHVzaW9uVGVzdGVyLmVuYWJsZWQJCQkJPSB0cnVlOw0KDQpmdW5jdGlvbiBzZWFyY2hGb3JGaWxlSW5jbHVzaW9uKHN0cklucHV0VGV4dCwgYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IpDQp7DQoJaWYgKGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yID09IG51bGwpIGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yID0gZmFsc2U7DQoJdmFyIHJldHZhbCA9IG5ldyBBcnJheSgpOw0KCQ0KCWFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnMgPSBuZXcgQXJyYXkNCgkoDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvNjNjMTlhNmRhNzk4MTZiMjE0MjllNWJiMjYyZGFlZDg2M2MxOWE2ZGE3OTgxNmIyMTQyOWU1YmIyNjJkYWVkOC9pLCBjb25kaXRpb24gOiB0cnVlfSksDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvKDxiPldhcm5pbmc8XC9iPjogIChmaWxlX2dldF9jb250ZW50c1woLio/XCkoIFxbPGEgaHJlZj0nZnVuY3Rpb24uZmlsZS1nZXQtY29udGVudHMnPmZ1bmN0aW9uLmZpbGUtZ2V0LWNvbnRlbnRzPFwvYT5cXSk/fGZvcGVuXChzb21lX2luZXhpc3RlbnRfZmlsZV93aXRoX2xvbmdfbmFtZVwpKCBcWzxhIGhyZWY9J2Z1bmN0aW9uLmZvcGVuJz5mdW5jdGlvbi5mb3BlbjxcL2E+XF0pPyk6IGZhaWxlZCB0byBvcGVuIHN0cmVhbTogKE5vIHN1Y2ggZmlsZSBvciBkaXJlY3Rvcnl8SW52YWxpZCBhcmd1bWVudHwoSFRUUCByZXF1ZXN0IGZhaWxlZCEgLiopKSBpbiA8Yj4uKj88XC9iPiBvbiBsaW5lIDxiPi4qPzxcL2I+KS9pLCBjb25kaXRpb24gOiB0cnVlfSksCQkNCgkJDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvKDxiPldhcm5pbmc8XC9iPjouKjogRmFpbGVkIG9wZW5pbmcgJy4qc29tZV9pbmV4aXN0ZW50X2ZpbGVfd2l0aF9sb25nX25hbWUuKicpIGZvciBpbmNsdXNpb24uKi9pLCBjb25kaXRpb24gOiB0cnVlfSksDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvKFRoZSByZXF1ZXN0ZWQgcmVzb3VyY2Vcc1woLipzb21lX2luZXhpc3RlbnRfZmlsZV93aXRoX2xvbmdfbmFtZVwpIGlzIG5vdCBhdmFpbGFibGUpL2ksIGNvbmRpdGlvbiA6IHRydWV9KSwJCQ0KCQluZXcgQXJyYXkoe3JlZ2V4IDogLyhvcmcuYXBhY2hlLmphc3Blci5KYXNwZXJFeGNlcHRpb246IC4qPyBGaWxlIC4qPyBub3QgZm91bmQpL2ksIGNvbmRpdGlvbiA6IHRydWV9KQ0KCSk7DQoJCQkJICANCglmb3IoIHZhciBpID0gMDsgaSA8IGFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnMubGVuZ3RoOyBpKyspDQoJew0KCQl2YXIgYm9vbEJvbmRpdGlvbiA9IHRydWU7DQoJCWZvcih2YXIgaiA9IDA7IGogPCBhcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zW2ldLmxlbmd0aDsgaisrKQ0KCQl7DQoJCQl2YXIgbWF0Y2ggPSAoYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9uc1tpXVtqXS5yZWdleC5leGVjKHN0cklucHV0VGV4dCkgIT0gbnVsbCk7DQoJCQlpZihtYXRjaCAhPSBhcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zW2ldW2pdLmNvbmRpdGlvbikNCgkJCXsNCgkJCQlib29sQm9uZGl0aW9uID0gZmFsc2U7DQoJCQkJYnJlYWs7DQoJCQl9DQoJCX0NCgkJDQoJCWlmIChib29sQm9uZGl0aW9uKQ0KCQl7DQoJCQlpZiAoYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IpDQoJCQkJcmV0dXJuKHRydWUpOw0KCQkJcmV0dmFsLnB1c2goaSk7DQoJCX0NCgl9DQoJaWYgKGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yKQ0KCQlyZXR1cm4oZmFsc2UpOw0KCWVsc2UNCgkJcmV0dXJuKHJldHZhbCk7DQp9DQoNCg0KRmlsZUluY2x1c2lvblRlc3Rlci5kb1Rlc3QgPSBmdW5jdGlvbihvYmpDYWxsZXJDbGFzcykNCnsNCgl0aGlzLm9iakNhbGxlckNsYXNzCQk9IG9iakNhbGxlckNsYXNzOw0KCQ0KCS8vaW5qZWN0ZWQgdmFsdWVzCQkJCSAgDQoJdGhpcy5hcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zID0gbmV3IEFycmF5DQoJKA0KCQkiaHR0cDovL3NvbWUtaW5leGlzdGVudC13ZWJzaXRlLmNvbS9zb21lX2luZXhpc3RlbnRfZmlsZV93aXRoX2xvbmdfbmFtZSIsDQoJCSIvc29tZV9pbmV4aXN0ZW50X2ZpbGVfd2l0aF9sb25nX25hbWUiLA0KCQkiaHR0cDovL3Rlc3RwaHAudnVsbndlYi5jb20vYWN1bmV0aXhfZmlsZV9pbmNsdXNpb25fdGVzdD8iDQoJKQ0KCQ0KCQkNCgkvL3JlcXVlc3QgcmVzdWx0IGNvbnRhaW5lcgkNCgl0aGlzLm9ialRhc2tSZXN1bHQgPSB0aGlzLm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQ7DQoJDQoJLy90aGUgdGFzY2sgY2FsYmFjayBjbGFzcyB3aXRoIG5vdGlmeSBmdW5jdGlvbiBmb3IgYmUgdXNlZCB3aXRoIHRpbWVyIGNhbGwNCgl0aGlzLmZuY1Rhc2tDYWxsQmFjayA9DQoJew0KCQlpbnRTdGVwCQkJCTogMCwNCgkJYm9vbFJlcXVlc3RQaGFzZQk6IHRydWUsDQoJCQ0KCQlub3RpZnkgCTogZnVuY3Rpb24odGltZXIpDQoJCXsNCgkJCXRoaXMuZG9UZXN0KCk7DQoJCX0sDQoJCQ0KCQlkb1Rlc3QgOiBmdW5jdGlvbigpDQoJCXsNCgkJCWlmKHRoaXMucGFyZW50Lm9iakNhbGxlckNsYXNzLmJvb2xUZXN0ZXJNYXJrZWRUb0RpZSkNCgkJCXsNCgkJCQlsb2dUb0ZpbGUoIj0+IEZpbGVJbmNsdXNpb25UZXN0ZXIgPT4gZG9UZXN0OiB1c2VyQWJvcnRSZXF1ZXN0IGRldGVjdGVkIChib29sQWJvcnRTY2FuID0gdHJ1ZSkiKTsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCQkNCgkJCWlmKHRoaXMuYm9vbFJlcXVlc3RQaGFzZSkNCgkJCXsNCgkJCQl0aGlzLmJvb2xSZXF1ZXN0UGhhc2UgPSBmYWxzZTsNCgkJCQl0aGlzLnBhcmVudC5kb1JlcXVlc3RKc29uKA0KCQkJCQl7DQoJCQkJCQlvYmpDYWxsZXJDbGFzcyAJCQkJOiB0aGlzLnBhcmVudCwNCgkJCQkJCXN0clRlc3RTdHJpbmcJCQkJOiB0aGlzLnBhcmVudC5hcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zW3RoaXMuaW50U3RlcF0sDQoJCQkJCQkvL2ludFJlZGlyZWN0aW9uTGltaXQJCTogMTAsDQoJCQkJCQlib29sRGVsZXRlT3JpZ2luYWxDb29raWUJOiB0cnVlLA0KCQkJCQkJYm9vbERlbGV0ZU9yaWdpbmFsSGVhZGVycwk6IGZhbHNlLA0KCQkJCQkJaW50RXNjYXBlTWV0aG9kCQkJCTogMA0KCQkJCQl9KTsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCQllbHNlDQoJCQl7DQoJCQkJTG9nSFRUUFRvRmlsZSh0aGlzLnBhcmVudC5vYmpUYXNrUmVzdWx0LCBmYWxzZSk7DQoJCQkJDQoJCQkJaWYodGhpcy5wYXJlbnQub2JqVGFza1Jlc3VsdC5pbnRFcnJvckNvZGUgPT0gMCkNCgkJCQl7DQoJCQkJCWlmKHNlYXJjaEZvckZpbGVJbmNsdXNpb24odGhpcy5wYXJlbnQub2JqVGFza1Jlc3VsdC5zdHJSZXNwb25zZVRleHQsdHJ1ZSkpDQoJCQkJCXsNCgkJCQkJCXRoaXMucGFyZW50LmZuY0V4aXRUZXN0KHRydWUsIHRoaXMucGFyZW50LnN0clhVTE1lbnVUZXh0KTsNCgkJCQkJCXJldHVybjsNCgkJCQkJfQ0KDQoJCQkJfQ0KCQkJCQ0KCQkJCXRoaXMuYm9vbFJlcXVlc3RQaGFzZSA9IHRydWU7DQoJCQkJdGhpcy5pbnRTdGVwICsrOw0KCQkJCWlmKHRoaXMuaW50U3RlcCA+PSB0aGlzLnBhcmVudC5hcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zLmxlbmd0aCkNCgkJCQl7DQoJCQkJCXRoaXMucGFyZW50LmZuY0V4aXRUZXN0KGZhbHNlKTsNCgkJCQkJcmV0dXJuOw0KCQkJCX0NCgkJCQkvL3JldHJpZ2dlciB0aGUgdGVzdCBwcm9jZWR1cmUNCgkJCQl0aGlzLmRvVGVzdCgpOw0KCQkJCXJldHVybjsNCgkJCX0NCgkJfQ0KCX0NCgkNCgkvL3dlIGhhdmUgdG8gc3BlY2lmeSBmbmNUYXNrQ2FsbEJhY2sgcGFycmVudCBzaW5jZSBpdCB3aWxsIGJlIGNhbGxlZCBmcm9tIG90aGVyIHNjb3BlDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2sucGFyZW50CT0gdGhpczsNCgkNCgkvL2luaXRpYWxpemUgdGhlIHRlc3QgcHJvY2VkdXJlDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2suZG9UZXN0KCk7DQoJDQp9DQoNCi8vcmVnaXN0ZXIgdGhlIHRlc3RlciBvYmplY3QNCkZpbGVJbmNsdXNpb25UZXN0ZXIucmVnaXN0ZXIoKTsNCg==')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUJsYWRlDQpQdXJwb3NlOglUaGUgZGlyZWN0b3J5IHRyYXZlcnNhbCB0ZXN0DQoqLw0KDQp2YXIgRGlyZWN0b3J5VHJhdmVyc2FsVGVzdGVyCQkJCQk9IG5ldyBjbGFzc0dlbmVyaWNUZXN0ZXIoKTsNCkRpcmVjdG9yeVRyYXZlcnNhbFRlc3Rlci5zdHJYVUxNZW51SWQJCQk9ICJhY3VuZXRpeF90ZXN0dHlwZV9EaXJlY3RvcnlUcmF2ZXJzYWwiOw0KRGlyZWN0b3J5VHJhdmVyc2FsVGVzdGVyLnN0clhVTE1lbnVUZXh0CQkJPSAiRGlyZWN0b3J5IFRyYXZlcnNhbCI7DQpEaXJlY3RvcnlUcmF2ZXJzYWxUZXN0ZXIuc3RyWFVMTWVudUhpbnQJCQk9ICJTY2FuIGZvciBEaXJlY3RvcnkgVHJhdmVyc2FsIFZ1bG5lcmFiaWxpdGllcyI7DQpEaXJlY3RvcnlUcmF2ZXJzYWxUZXN0ZXIuc3RyWFVMTWVudUFjY2Vzc2tleSAJPSAiVCI7DQpEaXJlY3RvcnlUcmF2ZXJzYWxUZXN0ZXIuc3RyVHlwZQkJCQk9ICJEaXJlY3RvcnkgVHJhdmVyc2FsIjsNCkRpcmVjdG9yeVRyYXZlcnNhbFRlc3Rlci5zdHJUZXN0TmFtZQkJCT0gIkRpcmVjdG9yeSBUcmF2ZXJzYWwiOw0KRGlyZWN0b3J5VHJhdmVyc2FsVGVzdGVyLnNldmVyaXR5CQkJCT0gIkhpZ2giOw0KRGlyZWN0b3J5VHJhdmVyc2FsVGVzdGVyLnN0ckRlc2NyaXB0aW9uCQkJPSAiaHR0cDovL3d3dy5hY3VuZXRpeC5jb20vd2Vic2l0ZXNlY3VyaXR5LyI7DQpEaXJlY3RvcnlUcmF2ZXJzYWxUZXN0ZXIud3ZzQ29yZWxhdGlvbklECQk9ICJEaXJlY3RvcnlfVHJhdmVyc2FsX1VuaXgueG1sIjsNCkRpcmVjdG9yeVRyYXZlcnNhbFRlc3Rlci5lbmFibGVkCQkJCT0gZmFsc2U7DQovKklNUExFTUVOVEFUSU9OKi8NCkRpcmVjdG9yeVRyYXZlcnNhbFRlc3Rlci5lbmFibGVkCQkJCT0gdHJ1ZTsNCg0KZnVuY3Rpb24gc2VhcmNoRm9yRGlyZWN0b3J5VHJhdmVyc2FsKHN0cklucHV0VGV4dCwgYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IpDQp7DQoJaWYgKGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yID09IG51bGwpIGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yID0gZmFsc2U7DQoJdmFyIHJldHZhbCA9IG5ldyBBcnJheSgpOw0KCQ0KCWFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnMgPSBuZXcgQXJyYXkNCgkoDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvKFx3W1x3LV0rXDooIXxcKnxbXjpdKylcOlxkK1w6XGQrOlteOl0qXDpbXjpdKlw6W15ccl5cbl0qKFxyP1xufFxyfCkpKy9pLCBjb25kaXRpb24gOiB0cnVlfSksDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvKChcW2Jvb3Rcc2xvYWRlclxdfFxbb3BlcmF0aW5nXHNzeXN0ZW1zXF0pKFxyP1xufFxyfCkoW149XlxyXlxuXStcPVteXHJeXG5dKyhccj9cbnxccnwpKSspKy9pLCBjb25kaXRpb24gOiB0cnVlfSkNCgkpOw0KCQkJCSAgDQoJZm9yKCB2YXIgaSA9IDA7IGkgPCBhcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zLmxlbmd0aDsgaSsrKQ0KCXsNCgkJdmFyIGJvb2xCb25kaXRpb24gPSB0cnVlOw0KCQlmb3IodmFyIGogPSAwOyBqIDwgYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9uc1tpXS5sZW5ndGg7IGorKykNCgkJew0KCQkJdmFyIG1hdGNoID0gKGFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnNbaV1bal0ucmVnZXguZXhlYyhzdHJJbnB1dFRleHQpICE9IG51bGwpOw0KCQkJaWYobWF0Y2ggIT0gYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9uc1tpXVtqXS5jb25kaXRpb24pDQoJCQl7DQoJCQkJYm9vbEJvbmRpdGlvbiA9IGZhbHNlOw0KCQkJCWJyZWFrOw0KCQkJfQ0KCQl9DQoJCQ0KCQlpZiAoYm9vbEJvbmRpdGlvbikNCgkJew0KCQkJaWYgKGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yKQ0KCQkJCXJldHVybih0cnVlKTsNCgkJCXJldHZhbC5wdXNoKGkpOw0KCQl9DQoJfQ0KCWlmIChib29sSnVzdFJldHVybk9uRmlyc3RFcnJvcikNCgkJcmV0dXJuKGZhbHNlKTsNCgllbHNlDQoJCXJldHVybihyZXR2YWwpOw0KfQ0KDQoNCkRpcmVjdG9yeVRyYXZlcnNhbFRlc3Rlci5kb1Rlc3QgPSBmdW5jdGlvbihvYmpDYWxsZXJDbGFzcykNCnsNCgl0aGlzLm9iakNhbGxlckNsYXNzCT0gb2JqQ2FsbGVyQ2xhc3M7DQoJdGhpcy5vYmpUYXNrUmVzdWx0ID0gb2JqQ2FsbGVyQ2xhc3Mub2JqVGFza1Jlc3VsdDsNCgkNCgkvL2luamVjdGVkIHZhbHVlcwkJCQkgIA0KCXRoaXMuYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9ucyA9IG5ldyBBcnJheQ0KCSgNCgkJLy8gVW5peA0KCQkiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZXRjL3Bhc3N3ZCIsCS8vQmFzaWMgdGVzdAkJCQ0KCQkiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZXRjL3Bhc3N3ZCUwMCIsCS8vRW5kIG51bGwgYnl0ZQkNCgkJIiUwMC4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2V0Yy9wYXNzd2QiLAkvL1N0YXJ0IG51bGwgYnl0ZQkNCgkJIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2V0Yy9wYXNzd2QlMDAuaHRtbCIsCS8vRXh0ZW5zaW9uIGh0bWwNCgkJIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2V0Yy9wYXNzd2QlMDAuanBnIiwJLy9FeHRlbnNpb24ganBnDQoJCSIuXFxcXC4vLlxcXFwuLy5cXFxcLi8uXFxcXC4vLlxcXFwuLy5cXFxcLi9ldGMvcGFzc3dkIiwJLy9CYWNrc2xhc2ggY29tYmluZWQgd2l0aCBzbGFzaA0KCQkiL2V0Yy9wYXNzd2QiLCAvL1NpbXBsZQ0KCQkiLy4vLi8uLy4vLi8uLy4vZXRjL3Bhc3N3ZCIsCS8vU2xhc2hQb2ludA0KCQkiLi5cXFxcLi5cXFxcLi5cXFxcLi5cXFxcLi5cXFxcLi5cXFxcLi5cXFxcLi5cXFxcZXRjL3Bhc3N3ZCIsCS8vQmFja3NsYXNoDQoJCSIuLi8uLi8vLi4vLi4vLy4uLy4uLy8uLi8uLi8vLi4vLi4vLy4uLy4uLy8uLi8uLi8vLi4vLi4vL2V0Yy9wYXNzd2QiLAkvL0F2b2lkIHJlcGxhY2UgLi8NCgkJIi4uLy4uLi8uLi8uLy4uLy4uLi8uLi8uLy4uLy4uLi8uLi8uLy4uLy4uLi8uLi8uLy4uLy4uLi8uLi8uLy4uLy4uLi8uLi8uL2V0Yy9wYXNzd2QiLAkvL0F2b2lkIHJlcGxhY2UgLi4vDQoJCSI8Li4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZXRjL3Bhc3N3ZCIsCS8vTWlzYzFfdGhpZXJyeQ0KCQkifC4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2V0Yy9wYXNzd2QiLAkvL01pc2MyX3RoaWVycnkNCgkJIi4uJWMwJWFmLi4lYzAlYWYuLiVjMCVhZi4uJWMwJWFmLi4lYzAlYWYuLiVjMCVhZi4uJWMwJWFmLi4lYzAlYWZldGMvcGFzc3dkIiwJLy9VVEYtOCBlbmNvZGluZw0KCQkNCgkJLy8gV2luZG93cw0KCQkiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vYm9vdC5pbmkiLAkvL0Jhc2ljIHRlc3QJCQkNCgkJIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2Jvb3QuaW5pJTAwIiwJLy9FbmQgbnVsbCBieXRlCQ0KCQkiJWMwJWFlJWMwJWFlJWMwJWFmJWMwJWFlJWMwJWFlJWMwJWFmJWMwJWFlJWMwJWFlJWMwJWFmJWMwJWFlJWMwJWFlJWMwJWFmJWMwJWFlJWMwJWFlJWMwJWFmJWMwJWFlJWMwJWFlJWMwJWFmJWMwJWFlJWMwJWFlJWMwJWFmJWMwJWFlJWMwJWFlJWMwJWFmYm9vdC5pbmkiLAkvL1VuaWNvZGUNCgkJIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2Jvb3QuaW5pJTAwLmh0bWwiLAkvL0V4dGVuc2lvbiBodG1sDQoJCSIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ib290LmluaSUwMC5qcGciLAkvL0V4dGVuc2lvbiBqcGcNCgkJIi8uXFwuLy5cXC4vLlxcLi8uXFwuLy5cXC4vLlxcLi9ib290LmluaSIsCS8vQmFja3NsYXNoIGNvbWJpbmVkIHdpdGggc2xhc2gNCgkJIkM6XFxib290LmluaSIsIC8vU2ltcGxlDQoJCSIvLi8uLy4vLi8uLy4vLi9ib290LmluaSIsCS8vU2xhc2hQb2ludA0KCQkiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxib290LmluaSIsCS8vQmFja3NsYXNoDQoJCSIuLi8uLi8vLi4vLi4vLy4uLy4uLy8uLi8uLi8vLi4vLi4vLy4uLy4uLy8uLi8uLi8vLi4vLi4vL2Jvb3QuaW5pIiwJLy9Bdm9pZCByZXBsYWNlIC4vDQoJCSIuLi8uLi4vLi4vLi8uLi8uLi4vLi4vLi8uLi8uLi4vLi4vLi8uLi8uLi4vLi4vLi8uLi8uLi4vLi4vLi8uLi8uLi4vLi4vLi9ib290LmluaSIsCS8vQXZvaWQgcmVwbGFjZSAuLi8NCgkJIjwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGJvb3QuaW5pIiwJLy9NaXNjMV90aGllcnJ5DQoJCSJ8Li5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxib290LmluaSIsCS8vTWlzYzJfdGhpZXJyeQ0KCQkiLi4lYzAlYWYuLiVjMCVhZi4uJWMwJWFmLi4lYzAlYWYuLiVjMCVhZi4uJWMwJWFmLi4lYzAlYWYuLiVjMCVhZmJvb3QuaW5pIgkvL1VURi04IGVuY29kaW5nDQoJKTsNCgkNCgkJDQoJDQoJDQoJLy90aGUgdGFzY2sgY2FsYmFjayBjbGFzcyB3aXRoIG5vdGlmeSBmdW5jdGlvbiBmb3IgYmUgdXNlZCB3aXRoIHRpbWVyIGNhbGwNCgl0aGlzLmZuY1Rhc2tDYWxsQmFjayA9DQoJew0KCQlpbnRTdGVwCQkJCTogMCwNCgkJYm9vbFJlcXVlc3RQaGFzZQk6IHRydWUsDQoJCQkNCgkJbm90aWZ5IAk6IGZ1bmN0aW9uKHRpbWVyKQ0KCQl7DQoJCQl0aGlzLmRvVGVzdCgpOw0KCQl9LA0KCQkNCgkJZG9UZXN0IDogZnVuY3Rpb24oKQ0KCQl7DQoJCQlpZih0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5ib29sVGVzdGVyTWFya2VkVG9EaWUpDQoJCQl7DQoJCQkJbG9nVG9GaWxlKCI9PiBEaXJlY3RvcnlUcmF2ZXJzYWxUZXN0ZXIgPT4gZG9UZXN0OiB1c2VyQWJvcnRSZXF1ZXN0IGRldGVjdGVkIChib29sQWJvcnRTY2FuID0gdHJ1ZSkiKTsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCQkNCgkJCWlmKHRoaXMuYm9vbFJlcXVlc3RQaGFzZSkNCgkJCXsNCgkJCQl0aGlzLmJvb2xSZXF1ZXN0UGhhc2UgPSBmYWxzZTsNCgkJCQl0aGlzLnBhcmVudC5kb1JlcXVlc3RKc29uKA0KCQkJCQl7DQoJCQkJCQlvYmpDYWxsZXJDbGFzcyAJCQkJOiB0aGlzLnBhcmVudCwNCgkJCQkJCXN0clRlc3RTdHJpbmcJCQkJOiB0aGlzLnBhcmVudC5hcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zW3RoaXMuaW50U3RlcF0sDQoJCQkJCQlpbnRSZWRpcmVjdGlvbkxpbWl0CQkJOiAxMCwNCgkJCQkJCWJvb2xEZWxldGVPcmlnaW5hbENvb2tpZQk6IHRydWUsDQoJCQkJCQlib29sRGVsZXRlT3JpZ2luYWxIZWFkZXJzCTogZmFsc2UsDQoJCQkJCQlpbnRFc2NhcGVNZXRob2QJCQkJOiAwDQoJCQkJCX0pOw0KCQkJCXJldHVybjsNCgkJCX0NCgkJCWVsc2UNCgkJCXsNCgkJCQlMb2dIVFRQVG9GaWxlKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQsIGZhbHNlKTsNCgkJCQkNCgkJCQlpZih0aGlzLnBhcmVudC5vYmpUYXNrUmVzdWx0LmludEVycm9yQ29kZSA9PSAwKQ0KCQkJCXsNCgkJCQkJaWYoc2VhcmNoRm9yRGlyZWN0b3J5VHJhdmVyc2FsKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQuc3RyUmVzcG9uc2VUZXh0LHRydWUpKQ0KCQkJCQl7DQoJCQkJCQl0aGlzLnBhcmVudC5mbmNFeGl0VGVzdCh0cnVlLCB0aGlzLnBhcmVudC5zdHJYVUxNZW51VGV4dCk7DQoJCQkJCQlyZXR1cm47DQoJCQkJCX0NCg0KCQkJCX0NCgkJCQkNCgkJCQl0aGlzLmJvb2xSZXF1ZXN0UGhhc2UgPSB0cnVlOw0KCQkJCXRoaXMuaW50U3RlcCArKzsNCgkJCQlpZih0aGlzLmludFN0ZXAgPj0gdGhpcy5wYXJlbnQuYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9ucy5sZW5ndGgpDQoJCQkJew0KCQkJCQl0aGlzLnBhcmVudC5mbmNFeGl0VGVzdChmYWxzZSk7DQoJCQkJCXJldHVybjsNCgkJCQl9DQoJCQkJLy9yZXRyaWdnZXIgdGhlIHRlc3QgcHJvY2VkdXJlDQoJCQkJdGhpcy5kb1Rlc3QoKTsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCX0NCgl9DQoJDQoJLy93ZSBoYXZlIHRvIHNwZWNpZnkgZm5jVGFza0NhbGxCYWNrIHBhcnJlbnQgc2luY2UgaXQgd2lsbCBiZSBjYWxsZWQgZnJvbSBvdGhlciBzY29wZQ0KCXRoaXMuZm5jVGFza0NhbGxCYWNrLnBhcmVudAk9IHRoaXM7DQoJDQoJLy9pbml0aWFsaXplIHRoZSB0ZXN0IHByb2NlZHVyZQ0KCXRoaXMuZm5jVGFza0NhbGxCYWNrLmRvVGVzdCgpOw0KCQ0KfQ0KDQovL3JlZ2lzdGVyIHRoZSB0ZXN0ZXIgb2JqZWN0DQpEaXJlY3RvcnlUcmF2ZXJzYWxUZXN0ZXIucmVnaXN0ZXIoKTsNCg==')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUJsYWRlDQpQdXJwb3NlOglDb2RlIGV4ZWN1dGlvbiB0ZXN0DQoqLw0KDQp2YXIgQ29kZUV4ZWN1dGlvblRlc3RlcgkJCQkJCT0gbmV3IGNsYXNzR2VuZXJpY1Rlc3RlcigpOw0KQ29kZUV4ZWN1dGlvblRlc3Rlci5zdHJYVUxNZW51SWQJCQk9ICJhY3VuZXRpeF90ZXN0dHlwZV9Db2RlRXhlY3V0aW9uIjsNCkNvZGVFeGVjdXRpb25UZXN0ZXIuc3RyWFVMTWVudVRleHQJCQk9ICJDb2RlIEV4ZWN1dGlvbiI7DQpDb2RlRXhlY3V0aW9uVGVzdGVyLnN0clhVTE1lbnVIaW50CQkJPSAiU2NhbiBmb3IgQ29kZSBFeGVjdXRpb24gVnVsbmVyYWJpbGl0aWVzIjsNCkNvZGVFeGVjdXRpb25UZXN0ZXIuc3RyWFVMTWVudUFjY2Vzc2tleSAJPSAiRSI7DQpDb2RlRXhlY3V0aW9uVGVzdGVyLnN0clR5cGUJCQkJCT0gIkNvZGUgRXhlY3V0aW9uIjsNCkNvZGVFeGVjdXRpb25UZXN0ZXIuc3RyVGVzdE5hbWUJCQkJPSAiQ29kZSBFeGVjdXRpb24iOw0KQ29kZUV4ZWN1dGlvblRlc3Rlci5zZXZlcml0eQkJCQk9ICJIaWdoIjsNCkNvZGVFeGVjdXRpb25UZXN0ZXIuc3RyRGVzY3JpcHRpb24JCQk9ICJodHRwOi8vd3d3LmFjdW5ldGl4LmNvbS93ZWJzaXRlc2VjdXJpdHkvIjsNCkNvZGVFeGVjdXRpb25UZXN0ZXIud3ZzQ29yZWxhdGlvbklECQkJPSAiQ29kZV9FeGVjdXRpb25fVW5peC54bWwiOw0KQ29kZUV4ZWN1dGlvblRlc3Rlci5lbmFibGVkCQkJCT0gZmFsc2U7DQovKklNUExFTUVOVEFUSU9OKi8NCkNvZGVFeGVjdXRpb25UZXN0ZXIuZW5hYmxlZAkJCQk9IHRydWU7DQoNCmZ1bmN0aW9uIHNlYXJjaEZvckNvZGVFeGVjdXRpb24oc3RySW5wdXRUZXh0LCBib29sSnVzdFJldHVybk9uRmlyc3RFcnJvcikNCnsNCglpZiAoYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IgPT0gbnVsbCkgYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IgPSBmYWxzZTsNCgl2YXIgcmV0dmFsID0gbmV3IEFycmF5KCk7DQoJDQoJYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9ucyA9IG5ldyBBcnJheQ0KCSgNCgkJbmV3IEFycmF5KHtyZWdleCA6IC8oXHdbXHctXStcOighfFwqfFteOl0rKVw6XGQrXDpcZCs6W146XSpcOlteOl0qXDpbXlxyXlxuXSooXHI/XG58XHJ8KSkrL2ksIGNvbmRpdGlvbiA6IHRydWV9KSwNCgkJbmV3IEFycmF5KA0KCQkJe3JlZ2V4IDogLyhWb2x1bWUgaW4gZHJpdmUpLywgY29uZGl0aW9uIDogdHJ1ZX0sDQoJCQl7cmVnZXggOiAvKFZvbHVtZSBTZXJpYWwgTnVtYmVyIGlzKS8sIGNvbmRpdGlvbiA6IHRydWV9LA0KCQkJe3JlZ2V4IDogLyhEaXJlY3Rvcnkgb2YpLywgY29uZGl0aW9uIDogdHJ1ZX0NCgkJCSksDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvNjNjMTlhNmRhNzk4MTZiMjE0MjllNWJiMjYyZGFlZDgvaSwgY29uZGl0aW9uIDogdHJ1ZX0pDQoJCQkJDQoJKTsNCgkJCQkgIA0KCWZvciggdmFyIGkgPSAwOyBpIDwgYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9ucy5sZW5ndGg7IGkrKykNCgl7DQoJCXZhciBib29sQm9uZGl0aW9uID0gdHJ1ZTsNCgkJZm9yKHZhciBqID0gMDsgaiA8IGFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnNbaV0ubGVuZ3RoOyBqKyspDQoJCXsNCgkJCXZhciBtYXRjaCA9IChhcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zW2ldW2pdLnJlZ2V4LmV4ZWMoc3RySW5wdXRUZXh0KSAhPSBudWxsKTsNCgkJCWlmKG1hdGNoICE9IGFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnNbaV1bal0uY29uZGl0aW9uKQ0KCQkJew0KCQkJCWJvb2xCb25kaXRpb24gPSBmYWxzZTsNCgkJCQlicmVhazsNCgkJCX0NCgkJfQ0KCQkNCgkJaWYgKGJvb2xCb25kaXRpb24pDQoJCXsNCgkJCWlmIChib29sSnVzdFJldHVybk9uRmlyc3RFcnJvcikNCgkJCQlyZXR1cm4odHJ1ZSk7DQoJCQlyZXR2YWwucHVzaChpKTsNCgkJfQ0KCX0NCglpZiAoYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IpDQoJCXJldHVybihmYWxzZSk7DQoJZWxzZQ0KCQlyZXR1cm4ocmV0dmFsKTsNCn0NCg0KDQpDb2RlRXhlY3V0aW9uVGVzdGVyLmRvVGVzdCA9IGZ1bmN0aW9uKG9iakNhbGxlckNsYXNzKQ0Kew0KCXRoaXMub2JqQ2FsbGVyQ2xhc3MJCT0gb2JqQ2FsbGVyQ2xhc3M7DQoJDQoJLy9pbmplY3RlZCB2YWx1ZXMJCQkJICANCgl0aGlzLmFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnMgPSBuZXcgQXJyYXkNCgkoDQoJCS8vIFVuaXgNCgkJIislMjZjYXQrL2V0Yy9wYXNzd2QlMjYiLAkvL0FuZCgmKSB0ZXN0CQ0KCQkiKyUwYWNhdCsvZXRjL3Bhc3N3ZCUwYSIsCS8vTmV3IGxpbmUNCgkJIiU2MGNhdCsvZXRjL3Bhc3N3ZCU2MCIsCS8vQmFjaw0KCQkiY2F0Ky9ldGMvcGFzc3dkIiwJCQkvL1NpbXBsZQ0KCQkiJTNCY2F0Ky9ldGMvcGFzc3dkJTNCIiwJLy9TZW1pDQoJCSIlN0NjYXQrL2V0Yy9wYXNzd2QiLAkJLy9QaXBlDQoJCSIlMDBjYXQlMjAvZXRjL3Bhc3N3ZCUwMCIsIAkvL01pc2MxX3RoaWVycnkNCgkJIjxjYXQlMjAvZXRjL3Bhc3N3ZCUwMCIsCS8vTWlzYzJfdGhpZXJyeQ0KCQkNCgkJLy8gV2luZG93cw0KCQkiJTI2ZGlyJTI2IiwJCQkJLy9BbmQoJikgdGVzdA0KCQkiJTdDZGlyIiwJCQkJCS8vUGlwZSB0ZXN0DQoJCSIlM0JkaXIiLAkJCQkJLy9PdGhlciB0ZXN0DQoJCSIlMjZkaXIiLAkJCQkJLy9BbmQoJikgdGVzdCAyDQoJCSJkaXIiLAkJCQkJCS8vQmFzaWMNCgkJIiUwMGRpciUwMCIsIAkJCQkvL01pc2MxX3RoaWVycnkNCgkJIjxkaXIiLAkJCQkJCS8vTWlzYzJfdGhpZXJyeQ0KDQoJCS8vIFBIUCBjb2RlIGV4ZWN1dGlvbg0KCQkicHJpbnRmKG1kNShhY3VuZXRpeF93dnNfc2VjdXJpdHlfdGVzdCkpJTNCZXhpdCUzQi8vIiwJCQkvL3NpbXBsZSBpbmplY3Rpb24NCgkJIiUzQnByaW50ZihtZDUoYWN1bmV0aXhfd3ZzX3NlY3VyaXR5X3Rlc3QpKSUzQmV4aXQlM0IvLyIsCQkvL3Rlc3QyDQoJCSInJTNCcHJpbnRmKG1kNShhY3VuZXRpeF93dnNfc2VjdXJpdHlfdGVzdCkpJTNCZXhpdCUzQi8vIiwJCS8vdGVzdDMNCgkJIiUzQnByaW50ZihtZDUoYWN1bmV0aXhfd3ZzX3NlY3VyaXR5X3Rlc3QpKSUzQmV4aXQlM0IvLyIJCS8vdGVzdDQNCgkpCQ0KCQkNCgkvL3JlcXVlc3QgcmVzdWx0IGNvbnRhaW5lcgkNCgl0aGlzLm9ialRhc2tSZXN1bHQgPSB0aGlzLm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQ7DQoJCQ0KCS8vdGhlIHRhc2NrIGNhbGJhY2sgY2xhc3Mgd2l0aCBub3RpZnkgZnVuY3Rpb24gZm9yIGJlIHVzZWQgd2l0aCB0aW1lciBjYWxsDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2sgPQ0KCXsNCgkJaW50U3RlcAkJCQk6IDAsDQoJCWJvb2xSZXF1ZXN0UGhhc2UJOiB0cnVlLA0KCQkNCgkJbm90aWZ5IAk6IGZ1bmN0aW9uKHRpbWVyKQ0KCQl7DQoJCQl0aGlzLmRvVGVzdCgpOw0KCQl9LA0KCQkNCgkJZG9UZXN0IDogZnVuY3Rpb24oKQ0KCQl7DQoJCQlpZih0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5ib29sVGVzdGVyTWFya2VkVG9EaWUpDQoJCQl7DQoJCQkJbG9nVG9GaWxlKCI9PiBDb2RlRXhlY3V0aW9uVGVzdGVyID0+IGRvVGVzdDogdXNlckFib3J0UmVxdWVzdCBkZXRlY3RlZCAoYm9vbEFib3J0U2NhbiA9IHRydWUpIik7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJaWYodGhpcy5ib29sUmVxdWVzdFBoYXNlKQ0KCQkJew0KCQkJCXRoaXMuYm9vbFJlcXVlc3RQaGFzZSA9IGZhbHNlOw0KCQkJCXRoaXMucGFyZW50LmRvUmVxdWVzdEpzb24oDQoJCQkJCXsNCgkJCQkJCW9iakNhbGxlckNsYXNzIAkJCQk6IHRoaXMucGFyZW50LA0KCQkJCQkJc3RyVGVzdFN0cmluZwkJCQk6IHRoaXMucGFyZW50LmFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnNbdGhpcy5pbnRTdGVwXSwNCgkJCQkJCWludFJlZGlyZWN0aW9uTGltaXQJCQk6IDEwLA0KCQkJCQkJYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llCTogdHJ1ZSwNCgkJCQkJCWJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnMJOiBmYWxzZSwNCgkJCQkJCWludEVzY2FwZU1ldGhvZAkJCQk6IDANCgkJCQkJfSk7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJZWxzZQ0KCQkJew0KCQkJCUxvZ0hUVFBUb0ZpbGUodGhpcy5wYXJlbnQub2JqVGFza1Jlc3VsdCwgZmFsc2UpOw0KCQkJCQ0KCQkJCWlmKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQuaW50RXJyb3JDb2RlID09IDApDQoJCQkJew0KCQkJCQlpZihzZWFyY2hGb3JDb2RlRXhlY3V0aW9uKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQuc3RyUmVzcG9uc2VUZXh0LHRydWUpKQ0KCQkJCQl7DQoJCQkJCQl0aGlzLnBhcmVudC5mbmNFeGl0VGVzdCh0cnVlLCB0aGlzLnBhcmVudC5zdHJYVUxNZW51VGV4dCk7DQoJCQkJCQlyZXR1cm47DQoJCQkJCX0NCg0KCQkJCX0NCgkJCQkNCgkJCQl0aGlzLmJvb2xSZXF1ZXN0UGhhc2UgPSB0cnVlOw0KCQkJCXRoaXMuaW50U3RlcCArKzsNCgkJCQlpZih0aGlzLmludFN0ZXAgPj0gdGhpcy5wYXJlbnQuYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9ucy5sZW5ndGgpDQoJCQkJew0KCQkJCQl0aGlzLnBhcmVudC5mbmNFeGl0VGVzdChmYWxzZSk7DQoJCQkJCXJldHVybjsNCgkJCQl9DQoJCQkJLy9yZXRyaWdnZXIgdGhlIHRlc3QgcHJvY2VkdXJlDQoJCQkJdGhpcy5kb1Rlc3QoKTsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCX0NCgl9DQoJDQoJLy93ZSBoYXZlIHRvIHNwZWNpZnkgZm5jVGFza0NhbGxCYWNrIHBhcnJlbnQgc2luY2UgaXQgd2lsbCBiZSBjYWxsZWQgZnJvbSBvdGhlciBzY29wZQ0KCXRoaXMuZm5jVGFza0NhbGxCYWNrLnBhcmVudAk9IHRoaXM7DQoJDQoJLy9pbml0aWFsaXplIHRoZSB0ZXN0IHByb2NlZHVyZQ0KCXRoaXMuZm5jVGFza0NhbGxCYWNrLmRvVGVzdCgpOw0KCQ0KfQ0KDQovL3JlZ2lzdGVyIHRoZSB0ZXN0ZXIgb2JqZWN0DQpDb2RlRXhlY3V0aW9uVGVzdGVyLnJlZ2lzdGVyKCk7DQo=')); ]]></script>
<script><![CDATA[ eval(atob('dmFyIFhQYXRoSW5qZWN0aW9uVGVzdGVyCQkJCQk9IG5ldyBjbGFzc0dlbmVyaWNUZXN0ZXIoKTsNClhQYXRoSW5qZWN0aW9uVGVzdGVyLnN0clhVTE1lbnVJZAkJCT0gImFjdW5ldGl4X3Rlc3R0eXBlX1hQYXRoSW5qZWN0aW9uIjsNClhQYXRoSW5qZWN0aW9uVGVzdGVyLnN0clhVTE1lbnVUZXh0CQkJPSAiWFBhdGggSW5qZWN0aW9uIjsNClhQYXRoSW5qZWN0aW9uVGVzdGVyLnN0clhVTE1lbnVIaW50CQkJPSAiU2NhbiBmb3IgWFBhdGggSW5qZWN0aW9uIFZ1bG5lcmFiaWxpdGllcyI7DQpYUGF0aEluamVjdGlvblRlc3Rlci5zdHJYVUxNZW51QWNjZXNza2V5CT0gIlgiOw0KWFBhdGhJbmplY3Rpb25UZXN0ZXIuc3RyVHlwZQkJCQk9ICJYUGF0aCBJbmplY3Rpb24iOw0KWFBhdGhJbmplY3Rpb25UZXN0ZXIuc3RyVGVzdE5hbWUJCQk9ICJYUGF0aCBJbmplY3Rpb24iOw0KWFBhdGhJbmplY3Rpb25UZXN0ZXIuc2V2ZXJpdHkJCQkJPSAiTWVkaXVtIjsNClhQYXRoSW5qZWN0aW9uVGVzdGVyLnN0ckRlc2NyaXB0aW9uCQkJPSAiaHR0cDovL3d3dy5hY3VuZXRpeC5jb20vd2Vic2l0ZXNlY3VyaXR5LyI7DQpYUGF0aEluamVjdGlvblRlc3Rlci53dnNDb3JlbGF0aW9uSUQJCT0gIlhQYXRoX0luamVjdGlvbi54bWwiOw0KWFBhdGhJbmplY3Rpb25UZXN0ZXIuZW5hYmxlZAkJCQk9IGZhbHNlOw0KLypJTVBMRU1FTlRBVElPTiovDQpYUGF0aEluamVjdGlvblRlc3Rlci5lbmFibGVkCQkJCT0gdHJ1ZTsNCg0KZnVuY3Rpb24gc2VhcmNoRm9yWFBhdGhJbmplY3Rpb24oc3RySW5wdXRUZXh0LCBib29sSnVzdFJldHVybk9uRmlyc3RFcnJvcikNCnsNCglpZiAoYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IgPT0gbnVsbCkgYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IgPSBmYWxzZTsNCgl2YXIgcmV0dmFsID0gbmV3IEFycmF5KCk7DQoJDQoJYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9ucyA9IG5ldyBBcnJheQ0KCSgNCgkJbmV3IEFycmF5KHtyZWdleCA6IC8oPGI+XHNFeGNlcHRpb25cc0RldGFpbHM6XHM8XC9iPlN5c3RlbVwuWG1sXC5YUGF0aFwuWFBhdGhFeGNlcHRpb246XHMnLionXHNoYXNcc2FuXHNpbnZhbGlkXHN0b2tlblwuPGJyPjxicj4pL2ksIGNvbmRpdGlvbiA6IHRydWV9KSwNCgkJbmV3IEFycmF5KHtyZWdleCA6IC8oPGI+XHNFeGNlcHRpb25cc0RldGFpbHM6XHM8XC9iPlN5c3RlbVwuWG1sXC5YUGF0aFwuWFBhdGhFeGNlcHRpb246XHNUaGlzXHNpc1xzYW5cc3VuY2xvc2VkXHNzdHJpbmdcLjxicj48YnI+KS9pLCBjb25kaXRpb24gOiB0cnVlfSksDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvKFN5c3RlbS5YbWwuWFBhdGguWFBhdGhFeGNlcHRpb25cOlwgKS9pLCBjb25kaXRpb24gOiB0cnVlfSkNCgkJDQoJKTsNCgkJCQkgIA0KCWZvciggdmFyIGkgPSAwOyBpIDwgYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9ucy5sZW5ndGg7IGkrKykNCgl7DQoJCXZhciBib29sQm9uZGl0aW9uID0gdHJ1ZTsNCgkJZm9yKHZhciBqID0gMDsgaiA8IGFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnNbaV0ubGVuZ3RoOyBqKyspDQoJCXsNCgkJCXZhciBtYXRjaCA9IChhcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zW2ldW2pdLnJlZ2V4LmV4ZWMoc3RySW5wdXRUZXh0KSAhPSBudWxsKTsNCgkJCWlmKG1hdGNoICE9IGFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnNbaV1bal0uY29uZGl0aW9uKQ0KCQkJew0KCQkJCWJvb2xCb25kaXRpb24gPSBmYWxzZTsNCgkJCQlicmVhazsNCgkJCX0NCgkJfQ0KCQkNCgkJaWYgKGJvb2xCb25kaXRpb24pDQoJCXsNCgkJCWlmIChib29sSnVzdFJldHVybk9uRmlyc3RFcnJvcikNCgkJCQlyZXR1cm4odHJ1ZSk7DQoJCQlyZXR2YWwucHVzaChpKTsNCgkJfQ0KCX0NCglpZiAoYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IpDQoJCXJldHVybihmYWxzZSk7DQoJZWxzZQ0KCQlyZXR1cm4ocmV0dmFsKTsNCn0NCg0KWFBhdGhJbmplY3Rpb25UZXN0ZXIuZG9UZXN0ID0gZnVuY3Rpb24ob2JqQ2FsbGVyQ2xhc3MpDQp7DQoJdGhpcy5vYmpDYWxsZXJDbGFzcwkJPSBvYmpDYWxsZXJDbGFzczsNCgl0aGlzLm9ialRhc2tSZXN1bHQJIAk9IG9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQ7DQoJDQoJLy9pbmplY3RlZCB2YWx1ZXMJCQkJICANCgl0aGlzLmFycmF5WFBhdGhJbmplY3Rpb25UZXN0VmFsdWVzID0gbmV3IEFycmF5DQoJKA0KCQkiJ1wiIiwJCS8vCVNpbmdsZSBhbmQgZG91YmxlIHF1b3RlDQoJCSIvIgkJCS8vIFZhcmlhbnQxDQoJKQ0KCQkNCgkvL3RoZSB0YXNjayBjYWxiYWNrIGNsYXNzIHdpdGggbm90aWZ5IGZ1bmN0aW9uIGZvciBiZSB1c2VkIHdpdGggdGltZXIgY2FsbA0KCXRoaXMuZm5jVGFza0NhbGxCYWNrID0NCgl7DQoJCWludFN0ZXAJCQkJOiAwLA0KCQlib29sUmVxdWVzdFBoYXNlCTogdHJ1ZSwNCgkJc3RyVGVzdFN0cmluZwkJOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTM0NTY3MCksDQoJCQ0KCQlub3RpZnkgCTogZnVuY3Rpb24odGltZXIpDQoJCXsNCgkJCXRoaXMuZG9UZXN0KCk7DQoJCX0sDQoJCQ0KCQlkb1Rlc3QgOiBmdW5jdGlvbigpDQoJCXsNCgkJCWlmKHRoaXMucGFyZW50Lm9iakNhbGxlckNsYXNzLmJvb2xUZXN0ZXJNYXJrZWRUb0RpZSkNCgkJCXsNCgkJCQlsb2dUb0ZpbGUoIj0+IFhQYXRoSW5qZWN0aW9uVGVzdGVyID0+IGRvVGVzdDogdXNlckFib3J0UmVxdWVzdCBkZXRlY3RlZCAoYm9vbEFib3J0U2NhbiA9IHRydWUpIik7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJDQoJCQlpZih0aGlzLmJvb2xSZXF1ZXN0UGhhc2UpDQoJCQl7DQoJCQkJdGhpcy5ib29sUmVxdWVzdFBoYXNlID0gZmFsc2U7DQoJCQkJdGhpcy5wYXJlbnQuZG9SZXF1ZXN0SnNvbigNCgkJCQkJew0KCQkJCQkJb2JqQ2FsbGVyQ2xhc3MgCQkJCTogdGhpcy5wYXJlbnQsDQoJCQkJCQlzdHJUZXN0U3RyaW5nCQkJCTogdGhpcy5wYXJlbnQuYXJyYXlYUGF0aEluamVjdGlvblRlc3RWYWx1ZXNbdGhpcy5pbnRTdGVwXSwNCgkJCQkJCWFycmF5QWNjZXB0ZWRDb250ZW50VHlwZXMgCTogbmV3IEFycmF5KCksDQoJCQkJCQlpbnRSZWRpcmVjdGlvbkxpbWl0CQkJOiAxMCwNCgkJCQkJCWJvb2xEZWxldGVPcmlnaW5hbENvb2tpZQk6IHRydWUsDQoJCQkJCQlib29sRGVsZXRlT3JpZ2luYWxIZWFkZXJzCTogZmFsc2UsDQoJCQkJCQlpbnRFc2NhcGVNZXRob2QJCQkJOiAwDQoJCQkJCX0pOw0KCQkJCXJldHVybjsNCgkJCX0NCgkJCWVsc2UNCgkJCXsNCgkJCQlMb2dIVFRQVG9GaWxlKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQsIGZhbHNlKTsNCgkJCQkNCgkJCQlpZih0aGlzLnBhcmVudC5vYmpUYXNrUmVzdWx0LmludEVycm9yQ29kZSA9PSAwKQ0KCQkJCXsNCgkJCQkJaWYoc2VhcmNoRm9yWFBhdGhJbmplY3Rpb24odGhpcy5wYXJlbnQub2JqVGFza1Jlc3VsdC5zdHJSZXNwb25zZVRleHQsdHJ1ZSkpDQoJCQkJCXsNCgkJCQkJCXRoaXMucGFyZW50LmZuY0V4aXRUZXN0KHRydWUsIHRoaXMucGFyZW50LnN0clhVTE1lbnVUZXh0KTsNCgkJCQkJCXJldHVybjsNCgkJCQkJfQ0KDQoJCQkJfQ0KCQkJCQ0KCQkJCXRoaXMuYm9vbFJlcXVlc3RQaGFzZSA9IHRydWU7DQoJCQkJdGhpcy5pbnRTdGVwICsrOw0KCQkJCWlmKHRoaXMuaW50U3RlcCA+PSB0aGlzLnBhcmVudC5hcnJheVhQYXRoSW5qZWN0aW9uVGVzdFZhbHVlcy5sZW5ndGgpDQoJCQkJew0KCQkJCQl0aGlzLnBhcmVudC5mbmNFeGl0VGVzdChmYWxzZSk7DQoJCQkJCXJldHVybjsNCgkJCQl9DQoJCQkJLy9yZXRyaWdnZXIgdGhlIHRlc3QgcHJvY2VkdXJlDQoJCQkJdGhpcy5kb1Rlc3QoKTsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCX0NCgl9DQoJDQoJLy93ZSBoYXZlIHRvIHNwZWNpZnkgZm5jVGFza0NhbGxCYWNrIHBhcnJlbnQgc2luY2UgaXQgd2lsbCBiZSBjYWxsZWQgZnJvbSBvdGhlciBzY29wZQ0KCXRoaXMuZm5jVGFza0NhbGxCYWNrLnBhcmVudAk9IHRoaXM7DQoJDQoJLy9pbml0aWFsaXplIHRoZSB0ZXN0IHByb2NlZHVyZQ0KCXRoaXMuZm5jVGFza0NhbGxCYWNrLmRvVGVzdCgpOw0KCQ0KfQ0KDQoNCi8vcmVnaXN0ZXIgdGhlIHRlc3RlciBvYmplY3QNClhQYXRoSW5qZWN0aW9uVGVzdGVyLnJlZ2lzdGVyKCk7DQo=')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUJsYWRlDQpQdXJwb3NlOglUaGUgTERBUCBpbmplY3Rpb24gdGVzdA0KKi8NCg0KdmFyIExEQVBJbmplY3Rpb25UZXN0ZXIJCQkJCQk9IG5ldyBjbGFzc0dlbmVyaWNUZXN0ZXIoKTsNCkxEQVBJbmplY3Rpb25UZXN0ZXIuc3RyWFVMTWVudUlkCQkJPSAiYWN1bmV0aXhfdGVzdHR5cGVfTERBUEluamVjdGlvbiI7DQpMREFQSW5qZWN0aW9uVGVzdGVyLnN0clhVTE1lbnVUZXh0CQkJPSAiTERBUCBJbmplY3Rpb24iOw0KTERBUEluamVjdGlvblRlc3Rlci5zdHJYVUxNZW51SGludAkJCT0gIlNjYW4gZm9yIExEQVAgSW5qZWN0aW9uIFZ1bG5lcmFiaWxpdGllcyI7DQpMREFQSW5qZWN0aW9uVGVzdGVyLnN0clhVTE1lbnVBY2Nlc3NrZXkJCT0gIkwiOw0KTERBUEluamVjdGlvblRlc3Rlci5zdHJUeXBlCQkJCQk9ICJMREFQIEluamVjdGlvbiI7DQpMREFQSW5qZWN0aW9uVGVzdGVyLnN0clRlc3ROYW1lCQkJCT0gIkxEQVAgSW5qZWN0aW9uIjsNCkxEQVBJbmplY3Rpb25UZXN0ZXIuc2V2ZXJpdHkJCQkJPSAiTWVkaXVtIjsNCkxEQVBJbmplY3Rpb25UZXN0ZXIuc3RyRGVzY3JpcHRpb24JCQk9ICJodHRwOi8vd3d3LmFjdW5ldGl4LmNvbS93ZWJzaXRlc2VjdXJpdHkvIjsNCkxEQVBJbmplY3Rpb25UZXN0ZXIud3ZzQ29yZWxhdGlvbklECQkJPSAiTERBUF9pbmplY3Rpb24ueG1sIjsNCkxEQVBJbmplY3Rpb25UZXN0ZXIuZW5hYmxlZAkJCQk9IGZhbHNlOw0KLypJTVBMRU1FTlRBVElPTiovDQpMREFQSW5qZWN0aW9uVGVzdGVyLmVuYWJsZWQJCQkJPSB0cnVlOw0KDQpmdW5jdGlvbiBzZWFyY2hGb3JMREFQSW5qZWN0aW9uKHN0cklucHV0VGV4dCwgYm9vbEp1c3RSZXR1cm5PbkZpcnN0RXJyb3IpDQp7DQoJaWYgKGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yID09IG51bGwpIGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yID0gZmFsc2U7DQoJdmFyIHJldHZhbCA9IG5ldyBBcnJheSgpOw0KCQ0KCWFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnMgPSBuZXcgQXJyYXkNCgkoDQoJCW5ldyBBcnJheSh7cmVnZXggOiAvKElQV29ya3NBU1BcLkxEQVAuKjgwMGE0ZjcwLipcWzMzNVxdXHNcKG5vIGRlc2NyaXB0aW9uXHNhdmFpbGFibGVcKSkvaSwgY29uZGl0aW9uIDogdHJ1ZX0pLA0KCQluZXcgQXJyYXkoe3JlZ2V4IDogLyg8c3Bhbj48SDE+U2VydmVyIEVycm9yIGluICcuKj8nIEFwcGxpY2F0aW9uLio8aDI+XHM8aT5UaGUuKnNlYXJjaCBmaWx0ZXIgaXMgaW52YWxpZFwuPFwvaT4pL2ksIGNvbmRpdGlvbiA6IHRydWV9KQkNCgkpOw0KCQkJCSAgDQoJZm9yKCB2YXIgaSA9IDA7IGkgPCBhcnJheUluamVjdGlvblRlc3RDb25kaXRpb25zLmxlbmd0aDsgaSsrKQ0KCXsNCgkJdmFyIGJvb2xCb25kaXRpb24gPSB0cnVlOw0KCQlmb3IodmFyIGogPSAwOyBqIDwgYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9uc1tpXS5sZW5ndGg7IGorKykNCgkJew0KCQkJdmFyIG1hdGNoID0gKGFycmF5SW5qZWN0aW9uVGVzdENvbmRpdGlvbnNbaV1bal0ucmVnZXguZXhlYyhzdHJJbnB1dFRleHQpICE9IG51bGwpOw0KCQkJaWYobWF0Y2ggIT0gYXJyYXlJbmplY3Rpb25UZXN0Q29uZGl0aW9uc1tpXVtqXS5jb25kaXRpb24pDQoJCQl7DQoJCQkJYm9vbEJvbmRpdGlvbiA9IGZhbHNlOw0KCQkJCWJyZWFrOw0KCQkJfQ0KCQl9DQoJCQ0KCQlpZiAoYm9vbEJvbmRpdGlvbikNCgkJew0KCQkJaWYgKGJvb2xKdXN0UmV0dXJuT25GaXJzdEVycm9yKQ0KCQkJCXJldHVybih0cnVlKTsNCgkJCXJldHZhbC5wdXNoKGkpOw0KCQl9DQoJfQ0KCWlmIChib29sSnVzdFJldHVybk9uRmlyc3RFcnJvcikNCgkJcmV0dXJuKGZhbHNlKTsNCgllbHNlDQoJCXJldHVybihyZXR2YWwpOw0KfQ0KDQpMREFQSW5qZWN0aW9uVGVzdGVyLmRvVGVzdCA9IGZ1bmN0aW9uKG9iakNhbGxlckNsYXNzKQ0Kew0KCXRoaXMub2JqQ2FsbGVyQ2xhc3MJCT0gb2JqQ2FsbGVyQ2xhc3M7DQoJDQoJLy9pbmplY3RlZCB2YWx1ZXMJCQkJICANCgl0aGlzLmFycmF5TERBUEluamVjdGlvblRlc3RWYWx1ZXMgPSBuZXcgQXJyYXkNCgkoDQoJCSIpIiwJCQkJCQkJCQkvLwlTaW1wbGUNCgkJIiEoJTI4JTI5JiUyNiUyMSU3Qyp8JTJBJTdDIgkJCS8vIFZhcmlhbnQxDQoJKQ0KCQ0KCQkNCgkvL3JlcXVlc3QgcmVzdWx0IGNvbnRhaW5lcgkNCgl0aGlzLm9ialRhc2tSZXN1bHQgPSB0aGlzLm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQ7DQoJDQoJLy90aGUgdGFzY2sgY2FsYmFjayBjbGFzcyB3aXRoIG5vdGlmeSBmdW5jdGlvbiBmb3IgYmUgdXNlZCB3aXRoIHRpbWVyIGNhbGwNCgl0aGlzLmZuY1Rhc2tDYWxsQmFjayA9DQoJew0KCQlpbnRTdGVwCQkJCTogMCwNCgkJYm9vbFJlcXVlc3RQaGFzZQk6IHRydWUsDQoJCXN0clRlc3RTdHJpbmcJCTogTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjEzNDU2NzApLA0KCQkNCgkJbm90aWZ5IAk6IGZ1bmN0aW9uKHRpbWVyKQ0KCQl7DQoJCQl0aGlzLmRvVGVzdCgpOw0KCQl9LA0KCQkNCgkJZG9UZXN0IDogZnVuY3Rpb24oKQ0KCQl7DQoJCQlpZih0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5ib29sVGVzdGVyTWFya2VkVG9EaWUpDQoJCQl7DQoJCQkJbG9nVG9GaWxlKCI9PiBMREFQSW5qZWN0aW9uVGVzdGVyID0+IGRvVGVzdDogdXNlckFib3J0UmVxdWVzdCBkZXRlY3RlZCAoYm9vbEFib3J0U2NhbiA9IHRydWUpIik7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJDQoJCQlpZih0aGlzLmJvb2xSZXF1ZXN0UGhhc2UpDQoJCQl7DQoJCQkJdGhpcy5ib29sUmVxdWVzdFBoYXNlID0gZmFsc2U7DQoJCQkJdGhpcy5wYXJlbnQuZG9SZXF1ZXN0SnNvbigNCgkJCQkJew0KCQkJCQkJb2JqQ2FsbGVyQ2xhc3MgCQkJCTogdGhpcy5wYXJlbnQsDQoJCQkJCQlzdHJUZXN0U3RyaW5nCQkJCTogdGhpcy5wYXJlbnQuYXJyYXlMREFQSW5qZWN0aW9uVGVzdFZhbHVlc1t0aGlzLmludFN0ZXBdLA0KCQkJCQkJYXJyYXlBY2NlcHRlZENvbnRlbnRUeXBlcyAJOiBuZXcgQXJyYXkoKSwNCgkJCQkJCWludFJlZGlyZWN0aW9uTGltaXQJCQk6IDEwLA0KCQkJCQkJYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llCTogdHJ1ZSwNCgkJCQkJCWJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnMJOiBmYWxzZSwNCgkJCQkJCWludEVzY2FwZU1ldGhvZAkJCQk6IDANCgkJCQkJfSk7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJZWxzZQ0KCQkJew0KCQkJCUxvZ0hUVFBUb0ZpbGUodGhpcy5wYXJlbnQub2JqVGFza1Jlc3VsdCwgZmFsc2UpOw0KCQkJCQ0KCQkJCWlmKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQuaW50RXJyb3JDb2RlID09IDApDQoJCQkJew0KCQkJCQlpZihzZWFyY2hGb3JMREFQSW5qZWN0aW9uKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQuc3RyUmVzcG9uc2VUZXh0LHRydWUpKQ0KCQkJCQl7DQoJCQkJCQl0aGlzLnBhcmVudC5mbmNFeGl0VGVzdCh0cnVlLCB0aGlzLnBhcmVudC5zdHJYVUxNZW51VGV4dCk7DQoJCQkJCQlyZXR1cm47DQoJCQkJCX0NCg0KCQkJCX0NCgkJCQkNCgkJCQl0aGlzLmJvb2xSZXF1ZXN0UGhhc2UgPSB0cnVlOw0KCQkJCXRoaXMuaW50U3RlcCArKzsNCgkJCQlpZih0aGlzLmludFN0ZXAgPj0gdGhpcy5wYXJlbnQuYXJyYXlMREFQSW5qZWN0aW9uVGVzdFZhbHVlcy5sZW5ndGgpDQoJCQkJew0KCQkJCQl0aGlzLnBhcmVudC5mbmNFeGl0VGVzdChmYWxzZSk7DQoJCQkJCXJldHVybjsNCgkJCQl9DQoJCQkJLy9yZXRyaWdnZXIgdGhlIHRlc3QgcHJvY2VkdXJlDQoJCQkJdGhpcy5kb1Rlc3QoKTsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCX0NCgl9DQoJDQoJLy93ZSBoYXZlIHRvIHNwZWNpZnkgZm5jVGFza0NhbGxCYWNrIHBhcnJlbnQgc2luY2UgaXQgd2lsbCBiZSBjYWxsZWQgZnJvbSBvdGhlciBzY29wZQ0KCXRoaXMuZm5jVGFza0NhbGxCYWNrLnBhcmVudAk9IHRoaXM7DQoJDQoJLy9pbml0aWFsaXplIHRoZSB0ZXN0IHByb2NlZHVyZQ0KCXRoaXMuZm5jVGFza0NhbGxCYWNrLmRvVGVzdCgpOw0KCQ0KfQ0KDQoNCi8vcmVnaXN0ZXIgdGhlIHRlc3RlciBvYmplY3QNCkxEQVBJbmplY3Rpb25UZXN0ZXIucmVnaXN0ZXIoKTsNCg==')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUJsYWRlDQpQdXJwb3NlOglVUkwgcmVkaXJlY3Rpb24gdGVzdA0KKi8NCg0KdmFyIFVSTFJlZGlyZWN0aW9uVGVzdGVyCQkJCQkJPSBuZXcgY2xhc3NHZW5lcmljVGVzdGVyKCk7DQpVUkxSZWRpcmVjdGlvblRlc3Rlci5zdHJYVUxNZW51SWQJCQkJPSAiYWN1bmV0aXhfdGVzdHR5cGVfVVJMUmVkaXJlY3Rpb24iOw0KVVJMUmVkaXJlY3Rpb25UZXN0ZXIuc3RyWFVMTWVudVRleHQJCQkJPSAiVVJMIFJlZGlyZWN0aW9uIjsNClVSTFJlZGlyZWN0aW9uVGVzdGVyLnN0clhVTE1lbnVIaW50CQkJCT0gIlNjYW4gZm9yIFVSTCBSZWRpcmVjdGlvbiI7DQpVUkxSZWRpcmVjdGlvblRlc3Rlci5zdHJYVUxNZW51QWNjZXNza2V5CQk9ICJSIjsNClVSTFJlZGlyZWN0aW9uVGVzdGVyLnN0clR5cGUJCQkJCT0gIlVSTCBSZWRpcmVjdGlvbiI7DQpVUkxSZWRpcmVjdGlvblRlc3Rlci5zdHJUZXN0TmFtZQkJCQk9ICJVUkwgUmVkaXJlY3Rpb24iOw0KVVJMUmVkaXJlY3Rpb25UZXN0ZXIuc2V2ZXJpdHkJCQkJCT0gIkluZm8iOw0KVVJMUmVkaXJlY3Rpb25UZXN0ZXIuc3RyRGVzY3JpcHRpb24JCQkJPSAiaHR0cDovL3d3dy5hY3VuZXRpeC5jb20vd2Vic2l0ZXNlY3VyaXR5LyI7DQpVUkxSZWRpcmVjdGlvblRlc3Rlci53dnNDb3JlbGF0aW9uSUQJCQk9ICJVUkxfcmVkaXJlY3Rpb24ueG1sIjsNClVSTFJlZGlyZWN0aW9uVGVzdGVyLmVuYWJsZWQJCQkJPSBmYWxzZTsNCi8qSU1QTEVNRU5UQVRJT04qLw0KVVJMUmVkaXJlY3Rpb25UZXN0ZXIuZW5hYmxlZAkJCQk9IHRydWU7DQoNCmZ1bmN0aW9uIHNlYXJjaEZvclVSTFJlZGlyZWN0aW9uKG9ialRhc2tSZXN1bHQsIG9ialRlc3RDbGFzcykNCnsNCgkNCglpZiAJKG9ialRhc2tSZXN1bHQuaW50UmVwb25zZVN0YXR1cyA9PSAyMDApDQoJew0KCQl2YXIgc3RyRmlsdGVyZWRSZXNwb25zZVRleHQgPSBvYmpUYXNrUmVzdWx0LnN0clJlc3BvbnNlVGV4dDsNCgkJDQoJCW9ialRlc3RDbGFzcy5sb2FkU3RyaW5nSW5Ub1RoZUhUTUxQYXJzZXIoc3RyRmlsdGVyZWRSZXNwb25zZVRleHQsWyJmaWx0ZXJSZWRpcmVjdCIsICJmaWx0ZXJTY3JpcHQiLCAic2lsZW50QWxlcnQiXSk7DQoJCQ0KCQl2YXIgYm9vbFJldHZhbCA9IG9ialRlc3RDbGFzcy5odG1sUGFyc2VyVGVzdEZvclRhZygibWV0YXgiLEFycmF5KCJodHRwLWVxdWl2PXJlZnJlc2giLCJjb250ZW50PnVybD1odHRwOi8vd3d3LmFjdW5ldGl4LmNvbSIpKTsNCgkJcmV0dXJuKGJvb2xSZXR2YWwpOw0KCX0NCglpZiAJKChvYmpUYXNrUmVzdWx0LmludFJlcG9uc2VTdGF0dXMgPT0gMzAxKSB8fCAob2JqVGFza1Jlc3VsdC5pbnRSZXBvbnNlU3RhdHVzID09IDMwMikpIHsNCgkJCS8vIHRlc3QgdGhlIGxvY2F0aW9uDQoJCQl2YXIgc3RyTG9jYXRpb24gPSAvTG9jYXRpb25ccyo6XHMqaHR0cDpcL1wvKHd3dy5hY3VuZXRpeC5jb20pL2kuZXhlYyhvYmpUYXNrUmVzdWx0LnN0clJlc3BvbnNlSGVhZGVyKTsJCQkNCgkJCS8vIGNoZWNrIGZvciBtYXRjaA0KCQkJaWYgKChzdHJMb2NhdGlvbiA9PSBudWxsKSB8fCAoc3RyTG9jYXRpb24ubGVuZ3RoIDw9MSApKSByZXR1cm4oZmFsc2UpOw0KCQ0KCQkJaWYgKHN0ckxvY2F0aW9uWzFdID09ICJ3d3cuYWN1bmV0aXguY29tIikgew0KCQkJCXJldHVybih0cnVlKTsJDQoJCQl9DQoJfQ0KCQ0KCXJldHVybihmYWxzZSk7DQp9DQoNClVSTFJlZGlyZWN0aW9uVGVzdGVyLmRvVGVzdCA9IGZ1bmN0aW9uKG9iakNhbGxlckNsYXNzKQ0Kew0KCXRoaXMub2JqQ2FsbGVyQ2xhc3MJCT0gb2JqQ2FsbGVyQ2xhc3M7DQoJDQoJLy9pbmplY3RlZCB2YWx1ZXMJCQkJICANCgl0aGlzLmFycmF5VVJMUmVkaXJlY3Rpb25UZXN0VmFsdWVzID0gbmV3IEFycmF5DQoJKA0KCQkiaHR0cDovL3d3dy5hY3VuZXRpeC5jb20iCQkJCQkvLwlTaW1wbGUNCgkpDQoJDQoJCQ0KCS8vcmVxdWVzdCByZXN1bHQgY29udGFpbmVyCQ0KCXRoaXMub2JqVGFza1Jlc3VsdCA9IG9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQ7DQoJCQ0KCS8vdGhlIHRhc2NrIGNhbGJhY2sgY2xhc3Mgd2l0aCBub3RpZnkgZnVuY3Rpb24gZm9yIGJlIHVzZWQgd2l0aCB0aW1lciBjYWxsDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2sgPQ0KCXsNCgkJaW50U3RlcAkJCQk6IDAsDQoJCWJvb2xSZXF1ZXN0UGhhc2UJOiB0cnVlLA0KCQlzdHJUZXN0U3RyaW5nCQk6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMzQ1NjcwKSwNCgkJCQkNCgkJbm90aWZ5IAk6IGZ1bmN0aW9uKHRpbWVyKQ0KCQl7DQoJCQl0aGlzLmRvVGVzdCgpOw0KCQl9LA0KCQkNCgkJZG9UZXN0IDogZnVuY3Rpb24oKQ0KCQl7DQoJCQlpZih0aGlzLnBhcmVudC5vYmpDYWxsZXJDbGFzcy5ib29sVGVzdGVyTWFya2VkVG9EaWUpDQoJCQl7DQoJCQkJbG9nVG9GaWxlKCI9PiBVUkxSZWRpcmVjdGlvblRlc3RlciA9PiBkb1Rlc3Q6IHVzZXJBYm9ydFJlcXVlc3QgZGV0ZWN0ZWQgKGJvb2xBYm9ydFNjYW4gPSB0cnVlKSIpOw0KCQkJCXJldHVybjsNCgkJCX0NCgkJCQ0KCQkJaWYodGhpcy5ib29sUmVxdWVzdFBoYXNlKQ0KCQkJew0KCQkJCXRoaXMuYm9vbFJlcXVlc3RQaGFzZSA9IGZhbHNlOw0KCQkJCXRoaXMucGFyZW50LmRvUmVxdWVzdEpzb24oDQoJCQkJCXsNCgkJCQkJCW9iakNhbGxlckNsYXNzIAkJCQk6IHRoaXMucGFyZW50LA0KCQkJCQkJc3RyVGVzdFN0cmluZwkJCQk6IHRoaXMucGFyZW50LmFycmF5VVJMUmVkaXJlY3Rpb25UZXN0VmFsdWVzW3RoaXMuaW50U3RlcF0sDQoJCQkJCQlhcnJheUFjY2VwdGVkQ29udGVudFR5cGVzIAk6IG5ldyBBcnJheSgpLA0KCQkJCQkJaW50UmVkaXJlY3Rpb25MaW1pdAkJCTogMCwNCgkJCQkJCWJvb2xEZWxldGVPcmlnaW5hbENvb2tpZQk6IHRydWUsDQoJCQkJCQlib29sRGVsZXRlT3JpZ2luYWxIZWFkZXJzCTogZmFsc2UsDQoJCQkJCQlpbnRFc2NhcGVNZXRob2QJCQkJOiAwDQoJCQkJCX0pOw0KCQkJCXJldHVybjsNCgkJCX0NCgkJCWVsc2UNCgkJCXsNCgkJCQlMb2dIVFRQVG9GaWxlKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQsIGZhbHNlKTsNCgkJCQkNCgkJCQlpZih0aGlzLnBhcmVudC5vYmpUYXNrUmVzdWx0LmludEVycm9yQ29kZSA9PSAwKQ0KCQkJCXsNCgkJCQkJaWYoc2VhcmNoRm9yVVJMUmVkaXJlY3Rpb24odGhpcy5wYXJlbnQub2JqVGFza1Jlc3VsdCwgdGhpcy5wYXJlbnQpKQ0KCQkJCQl7DQoJCQkJCQl0aGlzLnBhcmVudC5mbmNFeGl0VGVzdCh0cnVlLCB0aGlzLnBhcmVudC5zdHJYVUxNZW51VGV4dCk7DQoJCQkJCQlyZXR1cm47DQoJCQkJCX0NCgkJCQl9DQoJCQkJDQoJCQkJdGhpcy5ib29sUmVxdWVzdFBoYXNlID0gdHJ1ZTsNCgkJCQl0aGlzLmludFN0ZXAgKys7DQoJCQkJaWYodGhpcy5pbnRTdGVwID49IHRoaXMucGFyZW50LmFycmF5VVJMUmVkaXJlY3Rpb25UZXN0VmFsdWVzLmxlbmd0aCkNCgkJCQl7DQoJCQkJCXRoaXMucGFyZW50LmZuY0V4aXRUZXN0KGZhbHNlKTsNCgkJCQkJcmV0dXJuOw0KCQkJCX0NCgkJCQkvL3JldHJpZ2dlciB0aGUgdGVzdCBwcm9jZWR1cmUNCgkJCQl0aGlzLmRvVGVzdCgpOw0KCQkJCXJldHVybjsNCgkJCX0NCgkJfQ0KCX0NCgkNCgkvL3dlIGhhdmUgdG8gc3BlY2lmeSBmbmNUYXNrQ2FsbEJhY2sgcGFycmVudCBzaW5jZSBpdCB3aWxsIGJlIGNhbGxlZCBmcm9tIG90aGVyIHNjb3BlDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2sucGFyZW50CT0gdGhpczsNCgkNCgkvL2luaXRpYWxpemUgdGhlIHRlc3QgcHJvY2VkdXJlDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2suZG9UZXN0KCk7DQoJDQp9DQoNCg0KLy9yZWdpc3RlciB0aGUgdGVzdGVyIG9iamVjdA0KVVJMUmVkaXJlY3Rpb25UZXN0ZXIucmVnaXN0ZXIoKTsNCg==')); ]]></script>
<script><![CDATA[ eval(atob('LyoNCkF1dGhvcjoJCUJsYWRlDQpQdXJwb3NlOglUaGUgY3Jvc3MgZnJhbWUgc2NyaXB0aW5nIHRlc3QNCiovDQoNCnZhciBDcm9zc0ZyYW1lU2NyaXB0aW5nVGVzdGVyCQkJCQkJPSBuZXcgY2xhc3NHZW5lcmljVGVzdGVyKCk7DQpDcm9zc0ZyYW1lU2NyaXB0aW5nVGVzdGVyLnN0clhVTE1lbnVJZAkJCQk9ICJhY3VuZXRpeF90ZXN0dHlwZV9Dcm9zc0ZyYW1lU2NyaXB0aW5nIjsNCkNyb3NzRnJhbWVTY3JpcHRpbmdUZXN0ZXIuc3RyWFVMTWVudVRleHQJCQk9ICJDcm9zcyBGcmFtZSBTY3JpcHRpbmciOw0KQ3Jvc3NGcmFtZVNjcmlwdGluZ1Rlc3Rlci5zdHJYVUxNZW51SGludAkJCT0gIlNjYW4gZm9yIENyb3NzIEZyYW1lIFNjcmlwdGluZyI7DQpDcm9zc0ZyYW1lU2NyaXB0aW5nVGVzdGVyLnN0clhVTE1lbnVBY2Nlc3NrZXkJCT0gIkYiOw0KQ3Jvc3NGcmFtZVNjcmlwdGluZ1Rlc3Rlci5zdHJUeXBlCQkJCQk9ICJDcm9zcyBGcmFtZSBTY3JpcHRpbmciOw0KQ3Jvc3NGcmFtZVNjcmlwdGluZ1Rlc3Rlci5zdHJUZXN0TmFtZQkJCQk9ICJDcm9zcyBGcmFtZSBTY3JpcHRpbmciOw0KQ3Jvc3NGcmFtZVNjcmlwdGluZ1Rlc3Rlci5zZXZlcml0eQkJCQkJPSAiTWVkaXVtIjsNCkNyb3NzRnJhbWVTY3JpcHRpbmdUZXN0ZXIuc3RyRGVzY3JpcHRpb24JCQk9ICJodHRwOi8vd3d3LmFjdW5ldGl4LmNvbS93ZWJzaXRlc2VjdXJpdHkvIjsNCkNyb3NzRnJhbWVTY3JpcHRpbmdUZXN0ZXIud3ZzQ29yZWxhdGlvbklECQkJPSAiQ3Jvc3NfRnJhbWVfU2NyaXB0aW5nLnhtbCI7DQpDcm9zc0ZyYW1lU2NyaXB0aW5nVGVzdGVyLmVuYWJsZWQJCQkJCT0gZmFsc2U7DQovKklNUExFTUVOVEFUSU9OKi8NCkNyb3NzRnJhbWVTY3JpcHRpbmdUZXN0ZXIuZW5hYmxlZAkJCQkJPSB0cnVlOw0KDQpmdW5jdGlvbiBzZWFyY2hGb3JDcm9zc0ZyYW1lU2NyaXB0aW5nKG9ialRhc2tSZXN1bHQsIG9ialRlc3RDbGFzcykNCnsNCglpZiAJKG9ialRhc2tSZXN1bHQuaW50UmVwb25zZVN0YXR1cyA9PSAyMDApDQoJew0KCQlvYmpUZXN0Q2xhc3MubG9hZFN0cmluZ0luVG9UaGVIVE1MUGFyc2VyKG9ialRhc2tSZXN1bHQuc3RyUmVzcG9uc2VUZXh0LCBbImZpbHRlclJlZGlyZWN0IiwgInNpbGVudEFsZXJ0Il0pOw0KCQkNCgkJLy8gY2hlY2sgZm9yIGZyYW1lIA0KCQlpZiAob2JqVGVzdENsYXNzLmh0bWxQYXJzZXJUZXN0Rm9yVGFnKCJmcmFtZSIsQXJyYXkoInNyYz1odHRwOi8vd3d3LmFjdW5ldGl4LWxvbmctbmFtZS13aXRoLXNvbWUtaW5leGlzdGVudC1ob3N0LmFjdW5ldGl4LmNvbS8iKSkpIA0KCQlyZXR1cm4odHJ1ZSk7CQ0KCQkNCgkJLy8gY2hlY2sgZm9yIGlmcmFtZSAJCQ0KCQlpZiAob2JqVGVzdENsYXNzLmh0bWxQYXJzZXJUZXN0Rm9yVGFnKCJpZnJhbWUiLEFycmF5KCJzcmM9aHR0cDovL3d3dy5hY3VuZXRpeC1sb25nLW5hbWUtd2l0aC1zb21lLWluZXhpc3RlbnQtaG9zdC5hY3VuZXRpeC5jb20vIikpKSANCgkJcmV0dXJuKHRydWUpOwkNCgl9DQoJDQoJcmV0dXJuKGZhbHNlKTsNCn0NCg0KQ3Jvc3NGcmFtZVNjcmlwdGluZ1Rlc3Rlci5kb1Rlc3QgPSBmdW5jdGlvbihvYmpDYWxsZXJDbGFzcykNCnsNCgl0aGlzLm9iakNhbGxlckNsYXNzCQk9IG9iakNhbGxlckNsYXNzOw0KCQ0KCS8vaW5qZWN0ZWQgdmFsdWVzCQkJCSAgDQoJdGhpcy5hcnJheUNyb3NzRnJhbWVTY3JpcHRpbmdUZXN0VmFsdWVzID0gbmV3IEFycmF5DQoJKA0KCQkiaHR0cDovL3d3dy5hY3VuZXRpeC1sb25nLW5hbWUtd2l0aC1zb21lLWluZXhpc3RlbnQtaG9zdC5hY3VuZXRpeC5jb20vIgkJCQkJLy8JU2ltcGxlDQoJKQ0KCQ0KCQkNCgkvL3JlcXVlc3QgcmVzdWx0IGNvbnRhaW5lcgkNCgl0aGlzLm9ialRhc2tSZXN1bHQgPSB0aGlzLm9iakNhbGxlckNsYXNzLm9ialRhc2tSZXN1bHQ7DQoJCQ0KCS8vdGhlIHRhc2NrIGNhbGJhY2sgY2xhc3Mgd2l0aCBub3RpZnkgZnVuY3Rpb24gZm9yIGJlIHVzZWQgd2l0aCB0aW1lciBjYWxsDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2sgPQ0KCXsNCgkJaW50U3RlcAkJCQk6IDAsDQoJCWJvb2xSZXF1ZXN0UGhhc2UJOiB0cnVlLA0KCQlzdHJUZXN0U3RyaW5nCQk6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMzQ1NjcwKSwNCgkJDQoJCW5vdGlmeSAJOiBmdW5jdGlvbih0aW1lcikNCgkJew0KCQkJdGhpcy5kb1Rlc3QoKTsNCgkJfSwNCgkJDQoJCWRvVGVzdCA6IGZ1bmN0aW9uKCkNCgkJew0KCQkJaWYodGhpcy5wYXJlbnQub2JqQ2FsbGVyQ2xhc3MuYm9vbFRlc3Rlck1hcmtlZFRvRGllKQ0KCQkJew0KCQkJCWxvZ1RvRmlsZSgiPT4gQ3Jvc3NGcmFtZVNjcmlwdGluZ1Rlc3RlciA9PiBkb1Rlc3Q6IHVzZXJBYm9ydFJlcXVlc3QgZGV0ZWN0ZWQgKGJvb2xBYm9ydFNjYW4gPSB0cnVlKSIpOw0KCQkJCXJldHVybjsNCgkJCX0NCgkJCQ0KCQkJaWYodGhpcy5ib29sUmVxdWVzdFBoYXNlKQ0KCQkJew0KCQkJCXRoaXMuYm9vbFJlcXVlc3RQaGFzZSA9IGZhbHNlOw0KCQkJCXRoaXMucGFyZW50LmRvUmVxdWVzdEpzb24oDQoJCQkJCXsNCgkJCQkJCW9iakNhbGxlckNsYXNzIAkJCQk6IHRoaXMucGFyZW50LA0KCQkJCQkJc3RyVGVzdFN0cmluZwkJCQk6IHRoaXMucGFyZW50LmFycmF5Q3Jvc3NGcmFtZVNjcmlwdGluZ1Rlc3RWYWx1ZXNbdGhpcy5pbnRTdGVwXSwNCgkJCQkJCWFycmF5QWNjZXB0ZWRDb250ZW50VHlwZXMgCTogbmV3IEFycmF5KCksDQoJCQkJCQlpbnRSZWRpcmVjdGlvbkxpbWl0CQkJOiAwLA0KCQkJCQkJYm9vbERlbGV0ZU9yaWdpbmFsQ29va2llCTogdHJ1ZSwNCgkJCQkJCWJvb2xEZWxldGVPcmlnaW5hbEhlYWRlcnMJOiBmYWxzZSwNCgkJCQkJCWludEVzY2FwZU1ldGhvZAkJCQk6IDANCgkJCQkJfSk7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJZWxzZQ0KCQkJew0KCQkJCUxvZ0hUVFBUb0ZpbGUodGhpcy5wYXJlbnQub2JqVGFza1Jlc3VsdCwgZmFsc2UpOw0KCQkJCQ0KCQkJCWlmKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQuaW50RXJyb3JDb2RlID09IDApDQoJCQkJew0KCQkJCQlpZihzZWFyY2hGb3JDcm9zc0ZyYW1lU2NyaXB0aW5nKHRoaXMucGFyZW50Lm9ialRhc2tSZXN1bHQsIHRoaXMucGFyZW50KSkNCgkJCQkJew0KCQkJCQkJdGhpcy5wYXJlbnQuZm5jRXhpdFRlc3QodHJ1ZSwgdGhpcy5wYXJlbnQuc3RyWFVMTWVudVRleHQpOw0KCQkJCQkJcmV0dXJuOw0KCQkJCQl9DQoJCQkJfQ0KCQkJCQ0KCQkJCXRoaXMuYm9vbFJlcXVlc3RQaGFzZSA9IHRydWU7DQoJCQkJdGhpcy5pbnRTdGVwICsrOw0KCQkJCWlmKHRoaXMuaW50U3RlcCA+PSB0aGlzLnBhcmVudC5hcnJheUNyb3NzRnJhbWVTY3JpcHRpbmdUZXN0VmFsdWVzLmxlbmd0aCkNCgkJCQl7DQoJCQkJCXRoaXMucGFyZW50LmZuY0V4aXRUZXN0KGZhbHNlKTsNCgkJCQkJcmV0dXJuOw0KCQkJCX0NCgkJCQkvL3JldHJpZ2dlciB0aGUgdGVzdCBwcm9jZWR1cmUNCgkJCQl0aGlzLmRvVGVzdCgpOw0KCQkJCXJldHVybjsNCgkJCX0NCgkJfQ0KCX0NCgkNCgkvL3dlIGhhdmUgdG8gc3BlY2lmeSBmbmNUYXNrQ2FsbEJhY2sgcGFycmVudCBzaW5jZSBpdCB3aWxsIGJlIGNhbGxlZCBmcm9tIG90aGVyIHNjb3BlDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2sucGFyZW50CT0gdGhpczsNCgkNCgkvL2luaXRpYWxpemUgdGhlIHRlc3QgcHJvY2VkdXJlDQoJdGhpcy5mbmNUYXNrQ2FsbEJhY2suZG9UZXN0KCk7DQoJDQp9DQoNCg0KLy9yZWdpc3RlciB0aGUgdGVzdGVyIG9iamVjdA0KQ3Jvc3NGcmFtZVNjcmlwdGluZ1Rlc3Rlci5yZWdpc3RlcigpOw0K')); ]]></script>
<script><![CDATA[ eval(atob('')); ]]></script>

	<stringbundleset id="stringbundleset">
		<stringbundle id="acunetixwebscanner-strings" src="chrome://acunetixwebscanner/locale/acunetixwebscanner.properties"/>
	</stringbundleset>

	<toolbox id="navigator-toolbox">
		<toolbar id="acunetix_toolbar" toolbarname="&toolbar.name;" class="chromeclass-toolbar" context="toolbar-context-menu" hidden="false" persist="hidden">
			<toolbarbutton id="acunetix_menu_gotoHome" label="&toolbar.visibleTitle;" tooltiptext="&toolbar.visibleTitle;" oncommand="acunetixwebscanner.goHome()" class="gohome-button"/>	
			<toolbarseparator/>
			<toolbarbutton id="acunetix_menu_selectTest" type="menu" label="&toolbar.startscan.label; " tooltiptext="&toolbar.startscan.tooltip;" class="start-button">
				<menupopup id="acunetix_menu_selectTest_selector">
					<menuitem id="acunetix_menu_testStandardSet" oncommand="acunetixwebscanner.quickTest(this)" label="&toolbar.startscan.selectedTest.label;" tooltiptext="&toolbar.startscan.selectedTest.tooltip;" />
					<menuseparator />
					<menuitem id="acunetix_menu_testAll" oncommand="acunetixwebscanner.quickTest(this)" label="&toolbar.startscan.AllTest.label;" tooltiptext="&toolbar.startscan.AllTest.tooltip;" />
					<menuseparator />
				</menupopup>
			</toolbarbutton>
			<toolbarbutton id="acunetix_menu_abortScan" label="&toolbar.abortScan.label;" tooltiptext="&toolbar.abortScan.tooltip;" oncommand="acunetixwebscanner.abortScan();" disabled="true" class="stop-button"/>
			<toolbarseparator/>
			<toolbarbutton id="acunetix_menu_settings" label="&toolbar.settings.label;"  tooltiptext="&toolbar.settings.tooltip;" oncommand="acunetixwebscanner.openSettingsDialog();" class = "setup-button" />
			<toolbarseparator/>
			<toolbarbutton id="acunetix_menu_advanced" type="menu" label="&toolbar.advanced.label; " tooltiptext="&toolbar.advanced.tooltip;" class="advanced-button">
				<menupopup id="acunetix_menu_advanced_selector">
					<menuitem  type = "checkbox" id="acunetix_menu_showAdvancedPannel" label="&toolbar.showcapture.label;" tooltiptext="&toolbar.showcapture.tooltip;" oncommand="acunetixwebscanner.showHideRequestPannel('toggle');" />
					<menuitem id="acunetix_menu_captureContent" label="&toolbar.startcapture.label;" tooltiptext="&toolbar.startcapture.tooltip;" oncommand="acunetixwebscanner.capturePageRequests();" />
					<menuseparator />
					<menuitem id="acunetix_menu_openAppLog" label="&toolbar.openFlog.label;" tooltiptext="&toolbar.openFlog.tooltip;" oncommand="acunetixwebscanner.openLogFileInNewTab(1);" />
					<menuitem id="acunetix_menu_openHTTPLog" label="&toolbar.openHTTPLog.label;" tooltiptext="&toolbar.openHTTPLog.tooltip;" oncommand="acunetixwebscanner.openLogFileInNewTab(0);" />
					<menuitem id="acunetix_menu_delAppLog" label="&toolbar.resetFlog.label;" tooltiptext="&toolbar.resetFlog.tooltip;" oncommand="acunetixwebscanner.resetLogFile(1);" />
					<menuitem id="acunetix_menu_delHTTPLog" label="&toolbar.resetHTTPLog.label;" tooltiptext="&toolbar.resetHTTPLog.tooltip;" oncommand="acunetixwebscanner.resetLogFile(0);" />
				</menupopup>
			</toolbarbutton>
			<toolbarseparator/>
			<tooltip id="acunetix_tooltip_onScanning">
				<vbox>
					<label id="acunetix_tooltip_onScanning_1" value = "Idle..."/>
					<label id="acunetix_tooltip_onScanning_2" value = "" collapsed = "true"/>
					<label id="acunetix_tooltip_onScanning_3" value = "" collapsed = "true"/>
					<label id="acunetix_tooltip_onScanning_4" value = "" collapsed = "true"/>
					<label id="acunetix_tooltip_onScanning_5" value = "" collapsed = "true"/>
					<label id="acunetix_tooltip_onScanning_6" value = "" collapsed = "true"/>
				</vbox>
			</tooltip>
			<tooltip id="acunetix_tooltip_onVulnerable">
				<hbox>
					<vbox id = "acunetix_tooltip_onVulnerableLabel"></vbox>
					<vbox id = "acunetix_tooltip_onVulnerableValue"></vbox>
				</hbox>
			</tooltip>
			<hbox align="center" >
				<label id="acunetix_scannerStatus" value = "&toolbar.advanced.status.idle;" tooltip="acunetix_tooltip_onScanning"/>
				<progressmeter id="acunetix_scanning_progress"  mode="determined" value="0" collapsed = "true" tooltip="acunetix_tooltip_onScanning"/>
				<label id="acunetix_scannerStatus2" value = "" collapsed = "true" tooltip="acunetix_tooltip_onVulnerable" />
			</hbox>
		</toolbar>
	</toolbox>
	
	<vbox id="appcontent">
		<splitter id="acunetix_appcontent_bottomContainerBoxSplitter" class="acunetixSplitter" collapsed= "false"/>	
		<vbox id = "acunetix_appcontent_bottomContainerBox" collapsed = "false" persist="height">
			<vbox flex="1" id="acunetix_appcontent_pageRequestListBox"  height="100" style="min-height:200px; overflow:-moz-scrollbars-vertical" />
			<browser id="acunetix_appcontent_browserContainer"  src="" collapsed = "true" />
		</vbox>
	</vbox>

</overlay>


